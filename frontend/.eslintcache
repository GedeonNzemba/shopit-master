[{"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\index.js":"1","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\App.js":"2","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\store.js":"3","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\About.js":"4","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Shop.js":"5","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Risk.js":"6","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Home.js":"7","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Career\\Career.js":"8","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\product\\ProductDetails.js":"9","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\Cart.js":"10","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\Shipping.js":"11","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\ConfirmOrder.js":"12","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\Payment.js":"13","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\OrderSuccess.js":"14","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\order\\ListOrders.js":"15","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\order\\OrderDetails.js":"16","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\Login.js":"17","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\Register.js":"18","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\Profile.js":"19","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\UpdatePassword.js":"20","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\ForgotPassword.js":"21","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\UpdateProfile.js":"22","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\NewPassword.js":"23","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\Dashboard.js":"24","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\ProductsList.js":"25","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\NewProduct.js":"26","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\UpdateProduct.js":"27","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\OrdersList.js":"28","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\ProcessOrder.js":"29","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\UsersList.js":"30","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\UpdateUser.js":"31","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\ProductReviews.js":"32","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\actions\\userActions.js":"33","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\route\\ProtectedRoute.js":"34","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\farm\\Farm.js":"35","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Contact.js":"36","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Header.js":"37","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\RealEstate.js":"38","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\reducers\\productReducers.js":"39","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\reducers\\userReducers.js":"40","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\reducers\\cartReducers.js":"41","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\reducers\\orderReducers.js":"42","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Poultry.js":"43","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Eggs.js":"44","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Pigsty.js":"45","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Others.js":"46","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Purebred.js":"47","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Mammals.js":"48","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\LivestockFood.js":"49","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\about\\Header.js":"50","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\about\\Main.js":"51","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\MetaData.js":"52","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\actions\\productActions.js":"53","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Select.js":"54","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\Realtymb.js":"55","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\realty_about_layout.js":"56","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Navbar.js":"57","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\breadcrumb\\Filter.js":"58","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\breadcrumb\\Breadcrumb.js":"59","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\constants\\orderConstants.js":"60","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\constants\\cartConstants.js":"61","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\constants\\userConstants.js":"62","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\constants\\productConstants.js":"63","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\buttonNine.js":"64","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\ButtonEight.js":"65","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\main\\Main_Desktop.js":"66","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\product\\ProductList.js":"67","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\sidebar\\Sidebar.js":"68","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\IMG\\MobileC.js":"69","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\ButtonPrt.js":"70","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\buttonSix.js":"71","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\buttonSeven.js":"72","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\SVG\\Svg.js":"73","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\SidebarData.js":"74","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\buttonOne.js":"75","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\ButtonThree.js":"76","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\IMG\\MobileB.js":"77","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\IMG\\Mobile.js":"78","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\SlickProperty.js":"79","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\Contact_btn.js":"80","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\Slick.js":"81","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\SlickInvestment.js":"82","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\sectionIdentifier\\Title.js":"83","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\sectionIdentifier\\IntroText.js":"84","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\MobileSideBarFarm.js":"85","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Search.js":"86","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Drawer.js":"87","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Footer.js":"88","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Header.js":"89","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\Sidebar.js":"90","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Loader.js":"91","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\actions\\orderActions.js":"92","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\Context\\OrderContext.js":"93","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Notification\\Notification.js":"94","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme.tsx":"95","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Category.js":"96","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\product\\Topsell.js":"97","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\CheckoutSteps.js":"98","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\drawer\\Tab.jsx":"99","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Main.jsx":"100","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Drawer.jsx":"101","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Bar.jsx":"102","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\actions\\cartActions.js":"103","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\styles\\styleHeader.js":"104","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Bank.js":"105","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\review\\ListReviews.js":"106","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Career\\main\\Main.js":"107","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Career\\header\\Header.js":"108","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Nutrition_hero.js":"109","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\product\\Product.js":"110","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Dash.js":"111","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\MobileBanner.js":"112","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\drawer\\Content.jsx":"113","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Boostrapp.js":"114","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\Main.js":"115","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\Header.js":"116","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\ct\\steps\\layout\\Message.js":"117","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\Slider.js":"118","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\data.js":"119","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\HeaderBSN.js":"120","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\carousel\\Slider.js":"121","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\Notify.js":"122","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Notification\\icons\\Notice.js":"123","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\Highlights.jsx":"124","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\number\\number.js":"125","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\globalStyles.js":"126","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\index.js":"127","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\shape.js":"128","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\shadows.js":"129","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\typography.js":"130","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\palette.js":"131","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\index.js":"132","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Lists.js":"133","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\IconButton.js":"134","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Typography.js":"135","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Tooltip.js":"136","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Autocomplete.js":"137","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Paper.js":"138","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Button.js":"139","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Backdrop.js":"140","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Input.js":"141","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Card.js":"142","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\order\\Order.jsx":"143","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\user\\User.jsx":"144","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\stock\\OutOfStock.jsx":"145","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\amount\\Amount.jsx":"146","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\View.jsx":"147","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\Products.jsx":"148","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\mock\\mockImages.js":"149","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductSort.jsx":"150","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductList.jsx":"151","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductCartWidget.jsx":"152","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductFilterSidebar.jsx":"153","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\picker\\ColorManyPicker.jsx":"154","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\scrollbar\\Scrollbar.jsx":"155","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductCart.jsx":"156","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\label\\Label.jsx":"157","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\color\\ColorPreview.jsx":"158","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\User.jsx":"159","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\Users.jsx":"160","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\OrderList.jsx":"161","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\Review.jsx":"162","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\create\\NewProduct.jsx":"163","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\TabMobile.js":"164","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\homecategories.js":"165","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Slide.js":"166"},{"size":1391,"mtime":1639947449927,"results":"167","hashOfConfig":"168"},{"size":9076,"mtime":1639839079048,"results":"169","hashOfConfig":"168"},{"size":1734,"mtime":1635708834000,"results":"170","hashOfConfig":"168"},{"size":481,"mtime":1637342759198,"results":"171","hashOfConfig":"168"},{"size":29803,"mtime":1639337880753,"results":"172","hashOfConfig":"168"},{"size":664,"mtime":1639337845515,"results":"173","hashOfConfig":"168"},{"size":54495,"mtime":1640432025809,"results":"174","hashOfConfig":"168"},{"size":276,"mtime":1637349854191,"results":"175","hashOfConfig":"168"},{"size":15276,"mtime":1635708834000,"results":"176","hashOfConfig":"168"},{"size":40150,"mtime":1639336769757,"results":"177","hashOfConfig":"168"},{"size":28320,"mtime":1639375609778,"results":"178","hashOfConfig":"168"},{"size":21411,"mtime":1639127513347,"results":"179","hashOfConfig":"168"},{"size":5840,"mtime":1639120809470,"results":"180","hashOfConfig":"168"},{"size":906,"mtime":1635708834000,"results":"181","hashOfConfig":"168"},{"size":7317,"mtime":1640181382466,"results":"182","hashOfConfig":"168"},{"size":7660,"mtime":1635708834000,"results":"183","hashOfConfig":"168"},{"size":10321,"mtime":1640187286733,"results":"184","hashOfConfig":"168"},{"size":11585,"mtime":1637348137956,"results":"185","hashOfConfig":"168"},{"size":9050,"mtime":1640176657889,"results":"186","hashOfConfig":"168"},{"size":6287,"mtime":1637584386742,"results":"187","hashOfConfig":"168"},{"size":6511,"mtime":1637349482043,"results":"188","hashOfConfig":"168"},{"size":5099,"mtime":1637585149201,"results":"189","hashOfConfig":"168"},{"size":3376,"mtime":1635708834000,"results":"190","hashOfConfig":"168"},{"size":4474,"mtime":1640189814638,"results":"191","hashOfConfig":"168"},{"size":4383,"mtime":1639752962475,"results":"192","hashOfConfig":"168"},{"size":16468,"mtime":1639947649593,"results":"193","hashOfConfig":"168"},{"size":12879,"mtime":1639831572579,"results":"194","hashOfConfig":"168"},{"size":4432,"mtime":1639303417885,"results":"195","hashOfConfig":"168"},{"size":13532,"mtime":1639920059840,"results":"196","hashOfConfig":"168"},{"size":4131,"mtime":1635708834000,"results":"197","hashOfConfig":"168"},{"size":7401,"mtime":1639838987870,"results":"198","hashOfConfig":"168"},{"size":5617,"mtime":1635708834000,"results":"199","hashOfConfig":"168"},{"size":7420,"mtime":1635708834000,"results":"200","hashOfConfig":"168"},{"size":920,"mtime":1635708834000,"results":"201","hashOfConfig":"168"},{"size":232,"mtime":1635708834000,"results":"202","hashOfConfig":"168"},{"size":2274,"mtime":1638386402885,"results":"203","hashOfConfig":"168"},{"size":31807,"mtime":1640179579788,"results":"204","hashOfConfig":"168"},{"size":40726,"mtime":1638447804198,"results":"205","hashOfConfig":"168"},{"size":6961,"mtime":1635708834000,"results":"206","hashOfConfig":"168"},{"size":6373,"mtime":1635708834000,"results":"207","hashOfConfig":"168"},{"size":1107,"mtime":1635708834000,"results":"208","hashOfConfig":"168"},{"size":4432,"mtime":1639335179724,"results":"209","hashOfConfig":"168"},{"size":28809,"mtime":1639337114588,"results":"210","hashOfConfig":"168"},{"size":25086,"mtime":1639336949742,"results":"211","hashOfConfig":"168"},{"size":25025,"mtime":1639337088310,"results":"212","hashOfConfig":"168"},{"size":24506,"mtime":1639337050853,"results":"213","hashOfConfig":"168"},{"size":25108,"mtime":1639337147668,"results":"214","hashOfConfig":"168"},{"size":23828,"mtime":1639337019833,"results":"215","hashOfConfig":"168"},{"size":25431,"mtime":1639336977438,"results":"216","hashOfConfig":"168"},{"size":4098,"mtime":1637346246127,"results":"217","hashOfConfig":"168"},{"size":40614,"mtime":1637346572590,"results":"218","hashOfConfig":"168"},{"size":232,"mtime":1635708834000,"results":"219","hashOfConfig":"168"},{"size":9651,"mtime":1635708834000,"results":"220","hashOfConfig":"168"},{"size":1807,"mtime":1635708834000,"results":"221","hashOfConfig":"168"},{"size":25439,"mtime":1638447862970,"results":"222","hashOfConfig":"168"},{"size":2973,"mtime":1635708834000,"results":"223","hashOfConfig":"168"},{"size":4708,"mtime":1639338147838,"results":"224","hashOfConfig":"168"},{"size":1879,"mtime":1636928131240,"results":"225","hashOfConfig":"168"},{"size":1782,"mtime":1637348203368,"results":"226","hashOfConfig":"168"},{"size":1160,"mtime":1635708834000,"results":"227","hashOfConfig":"168"},{"size":146,"mtime":1635708834000,"results":"228","hashOfConfig":"168"},{"size":2213,"mtime":1635708834000,"results":"229","hashOfConfig":"168"},{"size":1905,"mtime":1635708834000,"results":"230","hashOfConfig":"168"},{"size":339,"mtime":1635708834000,"results":"231","hashOfConfig":"168"},{"size":378,"mtime":1635708834000,"results":"232","hashOfConfig":"168"},{"size":59367,"mtime":1635708834000,"results":"233","hashOfConfig":"168"},{"size":3115,"mtime":1637349435212,"results":"234","hashOfConfig":"168"},{"size":2764,"mtime":1638370847122,"results":"235","hashOfConfig":"168"},{"size":1122,"mtime":1635708834000,"results":"236","hashOfConfig":"168"},{"size":352,"mtime":1635708834000,"results":"237","hashOfConfig":"168"},{"size":469,"mtime":1635708834000,"results":"238","hashOfConfig":"168"},{"size":231,"mtime":1635708834000,"results":"239","hashOfConfig":"168"},{"size":25842,"mtime":1635708834000,"results":"240","hashOfConfig":"168"},{"size":867,"mtime":1635708834000,"results":"241","hashOfConfig":"168"},{"size":303,"mtime":1635708834000,"results":"242","hashOfConfig":"168"},{"size":307,"mtime":1635708834000,"results":"243","hashOfConfig":"168"},{"size":1846,"mtime":1635708834000,"results":"244","hashOfConfig":"168"},{"size":1568,"mtime":1635708834000,"results":"245","hashOfConfig":"168"},{"size":3417,"mtime":1635708834000,"results":"246","hashOfConfig":"168"},{"size":553,"mtime":1635708834000,"results":"247","hashOfConfig":"168"},{"size":3391,"mtime":1635708834000,"results":"248","hashOfConfig":"168"},{"size":3408,"mtime":1635708834000,"results":"249","hashOfConfig":"168"},{"size":269,"mtime":1635708834000,"results":"250","hashOfConfig":"168"},{"size":397,"mtime":1635708834000,"results":"251","hashOfConfig":"168"},{"size":1096,"mtime":1635708834000,"results":"252","hashOfConfig":"168"},{"size":1286,"mtime":1638101631049,"results":"253","hashOfConfig":"168"},{"size":4050,"mtime":1640114785319,"results":"254","hashOfConfig":"168"},{"size":7974,"mtime":1635708834000,"results":"255","hashOfConfig":"168"},{"size":471,"mtime":1635708834000,"results":"256","hashOfConfig":"168"},{"size":1663,"mtime":1635708834000,"results":"257","hashOfConfig":"168"},{"size":134,"mtime":1635708834000,"results":"258","hashOfConfig":"168"},{"size":3664,"mtime":1635708834000,"results":"259","hashOfConfig":"168"},{"size":463,"mtime":1639332408874,"results":"260","hashOfConfig":"168"},{"size":9190,"mtime":1640090254324,"results":"261","hashOfConfig":"168"},{"size":183,"mtime":1639578023238,"results":"262","hashOfConfig":"168"},{"size":1483,"mtime":1640351891275,"results":"263","hashOfConfig":"168"},{"size":3044,"mtime":1640387134071,"results":"264","hashOfConfig":"168"},{"size":2741,"mtime":1639336811082,"results":"265","hashOfConfig":"168"},{"size":4312,"mtime":1639233506181,"results":"266","hashOfConfig":"168"},{"size":2522,"mtime":1640190321135,"results":"267","hashOfConfig":"168"},{"size":4547,"mtime":1640191551553,"results":"268","hashOfConfig":"168"},{"size":5806,"mtime":1640191537376,"results":"269","hashOfConfig":"168"},{"size":1214,"mtime":1635708834000,"results":"270","hashOfConfig":"168"},{"size":176,"mtime":1635708834000,"results":"271","hashOfConfig":"168"},{"size":2391,"mtime":1635708834000,"results":"272","hashOfConfig":"168"},{"size":1274,"mtime":1635708834000,"results":"273","hashOfConfig":"168"},{"size":6339,"mtime":1639336679116,"results":"274","hashOfConfig":"168"},{"size":1305,"mtime":1639336645657,"results":"275","hashOfConfig":"168"},{"size":251,"mtime":1635708834000,"results":"276","hashOfConfig":"168"},{"size":2050,"mtime":1640435301726,"results":"277","hashOfConfig":"168"},{"size":2950,"mtime":1639337321392,"results":"278","hashOfConfig":"168"},{"size":1299,"mtime":1640294806029,"results":"279","hashOfConfig":"168"},{"size":3839,"mtime":1639652562217,"results":"280","hashOfConfig":"168"},{"size":227,"mtime":1635708834000,"results":"281","hashOfConfig":"168"},{"size":13245,"mtime":1639337283160,"results":"282","hashOfConfig":"168"},{"size":8094,"mtime":1638451139601,"results":"283","hashOfConfig":"168"},{"size":3854,"mtime":1637347875273,"results":"284","hashOfConfig":"168"},{"size":1505,"mtime":1635708834000,"results":"285","hashOfConfig":"168"},{"size":5718,"mtime":1638733116916,"results":"286","hashOfConfig":"168"},{"size":3026,"mtime":1638452486709,"results":"287","hashOfConfig":"168"},{"size":536,"mtime":1638538062081,"results":"288","hashOfConfig":"168"},{"size":2431,"mtime":1639343633886,"results":"289","hashOfConfig":"168"},{"size":478,"mtime":1639351329943,"results":"290","hashOfConfig":"168"},{"size":2887,"mtime":1640010997633,"results":"291","hashOfConfig":"168"},{"size":623,"mtime":1639576171871,"results":"292","hashOfConfig":"168"},{"size":1876,"mtime":1631941131000,"results":"293","hashOfConfig":"168"},{"size":1028,"mtime":1639578003497,"results":"294","hashOfConfig":"168"},{"size":179,"mtime":1631941131000,"results":"295","hashOfConfig":"168"},{"size":3936,"mtime":1631941131000,"results":"296","hashOfConfig":"168"},{"size":2082,"mtime":1631941131000,"results":"297","hashOfConfig":"168"},{"size":2881,"mtime":1631941131000,"results":"298","hashOfConfig":"168"},{"size":719,"mtime":1631941131000,"results":"299","hashOfConfig":"168"},{"size":693,"mtime":1631941131000,"results":"300","hashOfConfig":"168"},{"size":564,"mtime":1631941131000,"results":"301","hashOfConfig":"168"},{"size":344,"mtime":1631941131000,"results":"302","hashOfConfig":"168"},{"size":339,"mtime":1631941131000,"results":"303","hashOfConfig":"168"},{"size":272,"mtime":1631941131000,"results":"304","hashOfConfig":"168"},{"size":294,"mtime":1631941131000,"results":"305","hashOfConfig":"168"},{"size":1041,"mtime":1631941131000,"results":"306","hashOfConfig":"168"},{"size":748,"mtime":1631941131000,"results":"307","hashOfConfig":"168"},{"size":1587,"mtime":1631941131000,"results":"308","hashOfConfig":"168"},{"size":796,"mtime":1631941131000,"results":"309","hashOfConfig":"168"},{"size":2879,"mtime":1640011018637,"results":"310","hashOfConfig":"168"},{"size":2871,"mtime":1640011059189,"results":"311","hashOfConfig":"168"},{"size":2439,"mtime":1640011038394,"results":"312","hashOfConfig":"168"},{"size":1917,"mtime":1640011090681,"results":"313","hashOfConfig":"168"},{"size":7060,"mtime":1640080754172,"results":"314","hashOfConfig":"168"},{"size":1995,"mtime":1639652868726,"results":"315","hashOfConfig":"168"},{"size":95,"mtime":1639642563943,"results":"316","hashOfConfig":"168"},{"size":1785,"mtime":1639652963699,"results":"317","hashOfConfig":"168"},{"size":963,"mtime":1640019648046,"results":"318","hashOfConfig":"168"},{"size":1274,"mtime":1639653008927,"results":"319","hashOfConfig":"168"},{"size":7382,"mtime":1639653354944,"results":"320","hashOfConfig":"168"},{"size":2770,"mtime":1639641907258,"results":"321","hashOfConfig":"168"},{"size":1541,"mtime":1639641931329,"results":"322","hashOfConfig":"168"},{"size":3124,"mtime":1640018789091,"results":"323","hashOfConfig":"168"},{"size":2458,"mtime":1639641622587,"results":"324","hashOfConfig":"168"},{"size":1288,"mtime":1639641647710,"results":"325","hashOfConfig":"168"},{"size":3248,"mtime":1640077396411,"results":"326","hashOfConfig":"168"},{"size":5480,"mtime":1640205980134,"results":"327","hashOfConfig":"168"},{"size":4534,"mtime":1640075800050,"results":"328","hashOfConfig":"168"},{"size":9052,"mtime":1640084655025,"results":"329","hashOfConfig":"168"},{"size":1671,"mtime":1639934181504,"results":"330","hashOfConfig":"168"},{"size":1214,"mtime":1640031395080,"results":"331","hashOfConfig":"168"},{"size":1456,"mtime":1640251816920,"results":"332","hashOfConfig":"168"},{"size":2369,"mtime":1640346615647,"results":"333","hashOfConfig":"168"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},"na2x30",{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"336"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"336"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"336"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"336"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"336"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"336"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"336"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"336"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"336"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"336"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"336"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"336"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"336"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"336"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"336"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"336"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"336"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"336"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"336"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"336"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"336"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"336"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"336"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"336"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"336"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"336"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"336"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"336"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"336"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"336"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"336"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"336"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"336"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"336"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\index.js",[],["701","702"],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\App.js",["703","704"],"import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Route from 'react-router-dom/Route'\nimport \"./route.css\"\nimport './styles/Locataire.css'\n\nimport Home from './components/Home'\nimport Career from './components/Career/Career'\n\n// Category\nimport Poultry from './components/farm/Category/Poultry'\nimport FreshEggs from './components/farm/Category/Eggs'\nimport Pigsty from './components/farm/Category/Pigsty'\nimport Mammals from './components/farm/Category/Mammals'\nimport ParkedAnimals from './components/farm/Category/Others'\nimport Purebred from './components/farm/Category/Purebred'\nimport LivestockFood from './components/farm/Category/LivestockFood'\n\nimport ProductDetails from './components/product/ProductDetails'\n\n// Cart Imports\nimport Cart from './components/cart/Cart'\nimport Shipping from './components/cart/Shipping'\nimport ConfirmOrder from './components/cart/ConfirmOrder'\nimport Payment from './components/cart/Payment'\nimport OrderSuccess from './components/cart/OrderSuccess'\n\n// Order Imports\nimport ListOrders from './components/order/ListOrders'\nimport OrderDetails from './components/order/OrderDetails'\n\n// Auth or User imports\nimport Login from './components/user/Login'\nimport Register from './components/user/Register'\nimport Profile from './components/user/Profile'\nimport UpdateProfile from './components/user/UpdateProfile'\nimport UpdatePassword from './components/user/UpdatePassword'\nimport ForgotPassword from './components/user/ForgotPassword'\nimport NewPassword from './components/user/NewPassword'\n\n// Admin Imports\nimport Dashboard from './components/admin/Dashboard'\nimport ProductsList from './components/admin/ProductsList'\nimport NewProduct from './components/admin/NewProduct'\nimport UpdateProduct from './components/admin/UpdateProduct'\nimport OrdersList from './components/admin/OrdersList'\nimport ProcessOrder from './components/admin/ProcessOrder'\nimport UsersList from './components/admin/UsersList'\nimport UpdateUser from './components/admin/UpdateUser'\nimport ProductReviews from './components/admin/ProductReviews'\n\n\nimport ProtectedRoute from './components/route/ProtectedRoute'\nimport { loadUser } from './actions/userActions'\nimport store from './store'\nimport axios from 'axios'\n\n// Payment\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport Shop from './components/Shop'\nimport About from './About'\nimport Farm from './farm/Farm'\nimport { Risk } from './components/Risk'\nimport Contact from './components/layout/Contact'\nimport RealEstate from './Realty/RealEstate'\nimport Header from './components/layout/Header'\n\n\nfunction App() {\n\n\n  // GET PRODUCTS FROM API BACKEND\n  // const [products, setProducts]\n\n  // The back-to-top button is hidden at the beginning\n  // const [showButton, setShowButton] = useState();\n\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", () => {\n  //     if (window.pageYOffset > 300) {\n  //       setShowButton(true);\n  //     } else {\n  //       setShowButton((prevState) => prevState = false);\n  //     }\n  //   });\n  // }, []);\n\n  // This function will scroll the window to the top \n\n\n\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi');\n\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    getStripApiKey();\n\n\n  }, [])\n\n  // const { user, isAuthenticated, loading } = useSelector(state => state.auth)\n\n\n\n\n  // const cartPage = 'Cart - Locataire';\n  // const loginPage = 'Login - Locataire';\n  // const shippingPage = 'Shipping Info - Locataire';\n  // const confirmOrderPage = 'Confirm Order - Locataire';\n  // let pageTitle = document.title;\n\n\n\n\n\n  return (\n    <Router >\n      <main>\n        <div className='App'>\n          <div className=\"farmStyle\" id=\"farmSHOP\">\n           <Header />\n            <Route path=\"/\" component={Home} exact />\n\n            <main id=\"shipping_wrapper\">\n              <ProtectedRoute path=\"/shipping\" component={Shipping} />\n            </main>\n            <main id=\"confirm_order\">\n              <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\n            </main>\n            <main id=\"order_success\">\n              <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n            </main>\n\n            <main id=\"Login\">\n              <Route path=\"/login\" component={Login} />\n            </main>\n            <main id=\"Register\">\n              <Route path=\"/register\" component={Register} />\n            </main>\n            <main id=\"ForgotPassword\">\n              <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n            </main>\n            <main id=\"NewPassword\">\n              <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n            </main>\n            <main id=\"Profile\">\n              <ProtectedRoute path=\"/me\" component={Profile} exact />\n            </main>\n            <main id=\"UpdateProfile\">\n              <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n            </main>\n            <main id=\"UpdatePassword\">\n              <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n            </main>\n\n\n\n\n            <div className=\"container container-fluid\"  >\n              {/* <Route path=\"/\" component={Home} exact /> */}\n              <Route path=\"/product/:id\" component={ProductDetails} exact />\n\n              {stripeApiKey &&\n                <Elements stripe={loadStripe(stripeApiKey)}>\n                  <ProtectedRoute path=\"/payment\" component={Payment} />\n                </Elements>\n              }\n            </div>\n\n            <Route path=\"/search/:keyword\" component={Shop} />\n\n\n            <Route path=\"/shop\" component={Shop} exact />\n            <Route path=\"/cart\" component={Cart} exact />\n            <Route path=\"/about\" component={About} exact />\n            <Route path=\"/career\" component={Career} exact />\n            <Route path=\"/farm\" component={Farm} exact />\n\n            <Route path=\"/product-category/poultry\" component={Poultry} exact />\n            <Route path=\"/product-category/fresh-eggs\" component={FreshEggs} exact />\n            <Route path=\"/product-category/pigsty\" component={Pigsty} exact />\n            <Route path=\"/product-category/goat-sheep-mammals\" component={Mammals} exact />\n            <Route path=\"/product-category/park-animals\" component={ParkedAnimals} exact />\n            <Route path=\"/product-category/purebred-seed\" component={Purebred} exact />\n            <Route path=\"/product-category/livestock-food\" component={LivestockFood} exact />\n\n\n            <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\n            <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\n\n\n            <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\n            <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={Dashboard} exact />\n            <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n            <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\n            <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\n            <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n            <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={Dashboard} exact />\n            <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n            <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\n\n\n          </div>\n\n          <div className=\"realtyBSN\">\n            {/* <HeaderBSN /> */}\n            <Route path=\"/real-estate\" component={RealEstate} exact />\n            <Route path=\"/riskmanagement\" component={Risk} exact />\n            {/* <Contact /> */}\n          </div>\n\n\n\n\n          {/* {!loading && (!isAuthenticated || user.role !== 'admin') && ( */}\n          <Contact />\n          {/* )} */}\n\n          {/* {showButton && (\n            <div class=\"scrollWrap\" onMouseEnter={handleMouseIn} onMouseLeave={handleMouseOut}>\n              <img\n                onClick={scrollToTop}\n                className={hover ? 'back-to-topHovered' : 'back-to-top'}\n                src={hover ? scrollUpHovered : scrollUp}\n                alt=\"scroll up\"\n              />\n            </div>\n          )\n          } */}\n        </div>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n// useEffect(() => {\n//   const page = \"http://localhost:3000/riskmanagement\";\n//   const activateBar = () => {\n//     setActive(true);\n\n\n//   }\n//   const disactivateBar = () => {\n\n//     setActive(false);\n//     console.log(\"User not at real estate page.........active is false\")\n//   }\n\n\n//   (window.location.href === page && window.innerWidth >= 900) ? activateBar() : disactivateBar();\n// }, [])","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\store.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\About.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Shop.js",["705"],"import React, { useState, useEffect } from 'react'\nimport './layout/mCustomscrollbar.css'\nimport '../components/farm/Category/category_responsive.css'\n\nimport Crumb from '../components/farm/Category/breadcrumb/Breadcrumb'\nimport { Link } from 'react-router-dom'\nimport MetaData from './layout/MetaData'\nimport Chip from '@material-ui/core/Chip';\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\n\nimport { Accordion, Card } from 'react-bootstrap'\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Buttone from '@material-ui/core/Button';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Button from '@mui/material/Button';\n\nimport FilterCt from './farm/Category/breadcrumb/Filter';\nimport Paper from '@mui/material/Paper';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport Paginatione from 'react-js-pagination'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert';\nimport { getProducts } from '../actions/productActions'\nimport '../styles/Locataire.css'\n\nimport ProductList from './product/ProductList';\nimport backToFarm from '../images/category/forwardslash.svg'\nimport { HiViewGrid } from 'react-icons/hi'\nimport { FaListUl } from 'react-icons/fa'\nimport { createTheme } from '@material-ui/core/styles';\nimport { StrollableContainer } from \"react-stroller\";\n// import Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Typography } from '@material-ui/core'\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\n\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.grey[100],\n        height: theme.spacing(3),\n        color: theme.palette.grey[800],\n        fontWeight: theme.typography.fontWeightRegular,\n        fontSize: '1.6rem!important',\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:active': {\n            boxShadow: theme.shadows[1],\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n        },\n    },\n}))(Chip);\n\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range)\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            // Purple and green play nicely together.#4CAF50\n            main: '#e91e63',\n            fontSize: '1.6rem'\n        },\n        secondary: {\n            // This is green.A700 as hex.\n            main: '#dc004e',\n        },\n        third: {\n            main: '#F50057',\n        },\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    moot: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    }\n}));\n\n\nconst Shop = ({ match }) => {\n\n    const classes = useStyles();\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([1, 450])\n    const [size, setSize] = useState('')\n    const [color, setColor] = useState('')\n    const [name, setName] = useState('')\n    const [rating, setRating] = useState(0)\n\n    console.log('THE FILTER IS: ' + name)\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n\n        dispatch(getProducts(keyword, currentPage, price, name, rating, size, color));\n\n\n    }, [dispatch, alert, keyword, error, currentPage, price, name, rating, size, color])\n\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount;\n    if (keyword) {\n        count = filteredProductsCount\n    }\n\n\n\n    const [grid, setGrid] = useState(true);\n    const [list, setList] = useState();\n\n    const handleGrid = () => {\n        setGrid(prevState => prevState = true)\n        setList(prevState => prevState = false)\n    }\n    const handleList = () => {\n        setGrid(prevState => prevState = false)\n        setList(prevState => prevState = true)\n    }\n\n    const categories = [\n        {\n            \"title\": \"Poultry\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616223744/category/animal_tezmcb.svg\",\n            \"atl\": \"LaiWiv\"\n\n        },\n        {\n            \"title\": \"Eggs\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/eggs_ca7brk.svg\",\n            \"atl\": \"KTrngrIo\"\n        },\n        {\n            \"title\": \"Pigsty\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/pig_nmfagj.svg\",\n            \"atl\": \"EyCVOYElB\"\n        },\n        {\n            \"title\": \"Mammals\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616223741/category/goat_bwpnmu.svg\",\n            \"atl\": \"EyCVOYElP\"\n\n        },\n        {\n            \"title\": \"Park\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/paw-solid_nllgp5.svg\",\n            \"atl\": \"XgcabxkzflU\"\n        },\n        {\n            \"title\": \"Purebred\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616223739/category/dna_pycfwt.svg\",\n            \"atl\": \"tkTOAnrTpGM\"\n\n        },\n        {\n            \"title\": \"Livestock\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/food_xmnbgo.webp\",\n            \"atl\": \"nnFiNyv\"\n        }\n    ]\n\n    const productSize = [\n        '0 KG',\n        '2 KG',\n        '50 KG',\n        '3 L',\n        '5 L',\n        '10 L',\n        'Medium',\n        'Large',\n        'Verrat',\n        'Trout',\n        '1 Dose',\n        '1 T'\n    ]\n\n    const productColor = [\n        'Grey',\n        'White',\n        'Bronze',\n        'Maroon',\n        'Blue',\n        'Black',\n        'Yellow'\n    ]\n\n\n    const handleClearFilter = () => {\n        setName('');\n        setSize('');\n        setRating(0);\n        setColor('');\n    }\n\n\n\n\n    // SIDEBAR\n    const Sidebar = () => {\n        return (\n            <aside style={window.innerWidth < 700 ? {height: '100vh', overflowY: 'scroll'} : {}} className={`category_list ${window.innerWidth < 700 ? ' isNull' : ''}`} id=\"filter_shop\">\n                    <Box sx={{  height: '100%', padding: '1.5rem' }} >\n                        <Stack spacing={2} className=\"filter_price_color\" >\n                            <section className=\"filterByPrice mgt\">\n                                <h2 style={{ marginBottom: \"5.5rem\" }}>filter by price</h2>\n                                <div className=\"filterRange\" >\n                                    <Range\n                                        marks={{\n                                            1: `$1`,\n                                            450: `$450`,\n                                        }}\n                                        min={1}\n                                        max={450}\n                                        defaultValue={[1, 450]}\n                                        tipFormatter={(value) => `$${value}`}\n                                        tipProps={{\n                                            placement: \"top\",\n                                            visible: true,\n                                        }}\n                                        value={price}\n                                    />\n                                </div>\n                            </section>\n                            <section className=\"filterByColor\">\n                                <Accordion defaultActiveKey=\"0\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                        <h2>filter by color</h2>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <div className=\"filterColor\">\n                                            <StrollableContainer draggable>\n                                                <ul className=\"filtercolor-wrap\">\n                                                    {productColor.map((color) => (\n                                                        <li className=\"color-item\" key={color} onClick={() => setColor(color)}>\n                                                            <div className={\"item-inner-color \" + color} />\n                                                            <div className=\"item-inner-text\">{color}</div>\n                                                        </li>\n                                                    ))}\n\n                                                </ul>\n                                            </StrollableContainer>\n                                        </div>\n                                    </Accordion.Collapse>\n                                </Accordion>\n                            </section>\n                        </Stack>\n                        <Stack spacing={2} className=\"filter_category_size\">\n                            <section className=\"filterbycategory mgt\">\n                                <h2 style={{ marginBottom: \"1rem\" }}>filter by category</h2>\n                                <div id=\"category-list-wrapper\">\n                                    {categories.map(category => (\n                                        <div className=\"category-item\" key={category} onClick={() => setName(category.title)}>\n                                            <img\n                                                className=\"category-icon\"\n                                                src={category.icon}\n                                                alt={category.atl}\n                                            />\n                                            <p className=\"ctg-name\">{category.title}</p>\n                                        </div>\n                                    ))}\n                                </div>\n                            </section>\n                            <section className=\"filterbysize mgt\">\n                                <h2 style={{ marginBottom: \"1rem\" }}>filter by size</h2>\n                                <div id=\"category-size-wrapper\">\n                                    {productSize.map((size, key) => (\n                                        <div className=\"size-item\" key={key}>\n                                            <p onClick={() => setSize(size)}>{size}</p>\n                                        </div>\n                                    ))}\n                                </div>\n                            </section>\n                        </Stack>\n                        <Stack spacing={2} className=\"filter_rating_\">\n                            <section className=\"filterbyrating mgt\">\n                                <h2 style={{ marginBottom: \"1rem\" }}>filter by rating</h2>\n                                <div id=\"category-rating-wrapper\">\n                                    <ul className=\"pl-0\">\n                                        {[5, 4, 3, 2, 1].map((star) => (\n                                            <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\n                                                <div className=\"rating-outer\" onClick={() => setRating(star)}>\n                                                    <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\n                                                </div>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            </section>\n                        </Stack>\n                    </Box>\n\n\n            </aside>\n        );\n    }\n\n    // BREADCRUMB\n    const Breadcrumb = () => {\n        return (\n            <div className=\"breadcrumb\" >\n                <div className=\"crumb\">\n                    <div className=\"back-to-farm\">\n                        <Link to=\"/\">\n                            <img src={backToFarm} alt=\"back to farm icon\" />\n                        </Link>\n                    </div>\n                    <div className=\"crumb-wrap\">\n                        <Crumb navigationA=\"/\" nameA=\"farm\" nameB=\"Poultry\" />\n                    </div>\n                    {\n                        window.innerWidth < 700 ?\n                            null\n\n                            :\n\n                            (\n                                name || size || rating || color ?\n                                    (\n                                        <>\n                                            <div className=\"userFilter\" id=\"remove_filter\">\n                                                <StyledBreadcrumb\n                                                    component=\"a\"\n                                                    label=\"filter\"\n                                                    icon={<FilterAltIcon />}\n                                                    onClick={handleClick}\n                                                />\n                                                <div className=\"remove_filter\" >\n                                                    <span><i>{name}</i></span>\n                                                    <span><i>{size}</i></span>\n                                                    <span><i>{color}</i></span>\n                                                    <span><i> {rating ? `rating: ${rating}` : ''}</i></span>\n\n                                                    <ThemeProvider theme={theme}>\n                                                        <Buttone\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                            className={classes.button + ' clear_filter'}\n                                                            startIcon={<DeleteIcon />}\n                                                            onClick={handleClearFilter}\n                                                        >\n                                                            Clear filter\n                                                        </Buttone>\n                                                    </ThemeProvider>\n                                                </div>\n                                            </div>\n                                        </>\n                                    )\n                                    :\n                                    (\n                                        <>\n\n                                        </>\n                                    )\n                            )\n                    }\n                </div>\n\n                <div className=\"products-view\">\n                    <div id=\"gridView\" >\n                        <HiViewGrid className={grid ? 'active_grid' : 'not-active'} onClick={handleGrid} />\n                    </div>\n                    <div id=\"listView\" >\n                        <FaListUl className={list ? 'active_list' : 'not-active'} onClick={handleList} />\n                    </div>\n                </div>\n            </div>\n            // <div className=\"breadcrumb\">\n            //     <div className=\"crumb\">\n            //         <div className=\"back-to-farm\">\n            //             <Link to=\"/\">\n            //                 <img src={backToFarm} alt=\"back to farm icon\" />\n            //             </Link>\n            //         </div>\n            //         <div className=\"crumb-wrap\">\n            //             <Crumb navigationA=\"/\" nameA=\"farm\" nameB=\"Shop\" />\n            //         </div>\n            //         {\n            //             name || size || rating || color ?\n            //                 (\n            //                     <>\n            //                         <div className=\"userFilter\" id=\"remove_filter\">\n            //                             <h4>/ Filter:</h4>\n            //                             <div className=\"remove_filter\" >\n            //                                 <span><i>{name}</i></span>\n            //                                 <span><i>{size}</i></span>\n            //                                 <span><i>{color}</i></span>\n            //                                 <span><i> {rating ? `rating: ${rating}` : ''}</i></span>\n\n            //                                 <ThemeProvider theme={theme}>\n            //                                     <Buttone\n            //                                         variant=\"contained\"\n            //                                         color=\"secondary\"\n            //                                         className={classes.button + ' clear_filter'}\n            //                                         startIcon={<DeleteIcon />}\n            //                                         onClick={handleClearFilter}\n            //                                     >\n            //                                         Clear filter\n            //                                     </Buttone>\n            //                                 </ThemeProvider>\n            //                             </div>\n            //                         </div>\n            //                     </>\n            //                 )\n            //                 :\n            //                 (\n            //                     <>\n\n            //                     </>\n            //                 )\n            //         }\n            //     </div>\n\n            //     <div style={{ display: 'inline-flex' }}>\n            //         <div className=\"row search-product-wrap\" >\n            //             <div className=\"col-lg-4 col-md-5\" style={{ placeSelf: 'center' }}>\n            //                 <div className=\"filter__sort\">\n            //                     <Select />\n            //                 </div>\n            //             </div>\n            //             <div className=\"col-lg-4 col-md-4\" style={{ placeSelf: 'center', marginRight: ' 1.3rem' }}>\n            //                 <div className=\"filter__found\">\n            //                     <h6>\n            //                         <span>{count}</span>\n            //                         Products found\n            //                     </h6>\n            //                 </div>\n            //             </div>\n            //         </div>\n            //         <div className=\"products-view\">\n            //             <div id=\"gridView\" >\n            //                 <HiViewGrid className={grid ? 'active_grid' : 'not-active'} onClick={handleGrid} />\n            //             </div>\n            //             <div id=\"listView\" >\n            //                 <FaListUl className={list ? 'active_list' : 'not-active'} onClick={handleList} />\n            //             </div>\n            //         </div>\n            //     </div>\n            // </div>\n        );\n    }\n\n    const Filter = () => {\n        return (\n            <div id=\"category__filter\" style={{ margin: '2rem 2rem' }}>\n                {\n                    name || size || rating || color ?\n                        (\n                            <ThemeProvider theme={theme}>\n                                <Buttone\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    className={classes.button + ' clear_filter'}\n                                    startIcon={<DeleteIcon />}\n                                    onClick={handleClearFilter}\n                                >\n                                    Clear filter\n                                </Buttone>\n                            </ThemeProvider>\n                        )\n                        :\n                        null\n                }\n                <Button onClick={handleFilter} className={classes.button} variant=\"contained\" color=\"success\">\n                    filters\n                </Button>\n            </div>\n        )\n    }\n\n    function handleFilter() {\n        let filter = document.getElementById('filter_shop');\n        let categoryPage = document.getElementById('shop-page');\n\n\n        categoryPage.classList.add('category-page');\n        filter.classList.add('filter_shop');\n\n        categoryPage.addEventListener('click', () => {\n            categoryPage.classList.remove('category-page');\n            filter.classList.remove('filter_shop');\n        })\n    }\n\n    // MAIN PRODUCTS GRID\n    const ProductsGrid = () => {\n        return (\n            <>\n                <div className={` poultry ${window.innerWidth < 700 ? 'cat_fielter' : ''} `}>\n                    {window.innerWidth < 700 ?\n                        null\n                        :\n                        <div className='filter_category' id=\"filter_shop_desktop\">\n                            <Sidebar />\n                        </div>\n                    }\n                    {/* <div className=\"filter_category\">\n                    { window.innerWidth < 700 ? <Sidebar /> : null }\n                    </div> */}\n\n                    <div className=\"main_products\">\n                        <Breadcrumb />\n                        {window.innerWidth < 700 ? <Filter /> : null}\n                        {window.innerWidth < 700 ?\n                            (\n                                name || size || rating || color ?\n                                    (\n                                        <>\n                                            <div className=\"userFilter\" id=\"remove_filter\">\n                                                {\n                                                    window.innerWidth <= 420 ?\n                                                        (\n                                                            <>\n                                                                <Accordion>\n                                                                    <AccordionSummary\n                                                                        expandIcon={<ExpandMoreIcon />}\n                                                                        aria-controls=\"panel1a-content\"\n                                                                        id=\"panel1a-header\"\n                                                                    >\n                                                                        <StyledBreadcrumb\n                                                                            component=\"a\"\n                                                                            label=\"filter\"\n                                                                            icon={<FilterAltIcon />}\n                                                                            onClick={handleClick}\n                                                                        />\n                                                                    </AccordionSummary>\n                                                                    <AccordionDetails>\n                                                                        {name ? <Typography>{name}</Typography> : null}\n                                                                        {size ? <Typography>{size}</Typography> : null}\n                                                                        {rating ? <Typography>{`rating: ${rating}`}</Typography> : null}\n                                                                        {color ? <Typography>{color}</Typography> : null}\n                                                                    </AccordionDetails>\n                                                                </Accordion>\n                                                            </>\n                                                        )\n                                                        :\n                                                        <Paper elevation={3} style={{ paddingLeft: '1.5rem' }}>\n                                                            <FilterCt\n                                                                nameA=\"filter\"\n                                                                nameB={name}\n                                                                nameC={size}\n                                                                nameD={rating ? `rating: ${rating}` : ''}\n                                                            />\n                                                        </Paper>\n                                                }\n                                            </div>\n                                        </>\n                                    )\n                                    :\n                                    (\n                                        <>\n\n                                        </>\n                                    )\n                            )\n                            :\n                            null\n                        }\n\n                        <div className=\"poultry_products\">\n                            <div className={grid ? \"row producstWrapper\" : \"col listMode\"}>\n\n                                {\n                                    grid ?\n                                        (\n                                            products.map((product) => (\n                                                // <ProductList key={product._id} product={product} col={4} />\n\n                                                <div className=\"product farmStyle\" key={product._id}>\n                                                    <div className=\"img-container\">\n                                                        <img src={product.images[0].url} alt={product.name} />\n                                                        <div className=\"addCart\">\n                                                            <i className=\"fas fa-shopping-cart\"></i>\n                                                        </div>\n\n                                                        <div className=\"side-icons\">\n                                                            <span><i className=\"fas fa-search\"></i></span>\n                                                            <span><i className=\"far fa-heart\"></i></span>\n                                                            <span><i className=\"fas fa-sliders-h\"></i></span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"bottom\">\n                                                        <h6 className=\"product_title\"><Link to={`/product/${product._id}`}>{product.name}</Link></h6>\n                                                        <div className=\"price\">\n                                                            <span>${product.price}</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            ))\n                                        )\n\n                                        :\n\n                                        (\n                                            products.map((product) => (\n                                                <ProductList key={product._id} product={product} col={4} />\n                                            ))\n                                        )\n\n                                }\n\n                            </div>\n                        </div>\n\n                        {resPerPage <= count && (\n                            <div className=\"d-flex justify-content-center mt-5 paginationWrapper\">\n                                <Paginatione\n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass=\"page-item\"\n                                    linkClass=\"page-link\"\n                                />\n\n                            </div>\n                        )}\n\n\n                    </div>\n\n\n\n\n                </div>\n\n\n            </>\n        )\n    }\n\n\n    return (\n        <div id=\"shop-page\">\n            <MetaData title={'Shop'} />\n            {window.innerWidth < 700 ? <Sidebar /> : null}\n            <div id=\"poultry_banner\" />\n            <ProductsGrid />\n\n        </div>\n    )\n}\n\nexport default Shop\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Risk.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Home.js",["706","707"],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Career\\Career.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\product\\ProductDetails.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\Cart.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\Payment.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\order\\ListOrders.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\order\\OrderDetails.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\Login.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\Register.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\UpdatePassword.js",["708","709"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Box from \"@mui/material/Box\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\nimport login_bg from \"../../images/login.jpg\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport updateImageIlls from \"../../images/updateimageills.svg\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    button: {\n        backgroundColor: \"#061311!important\",\n        width: \"100%!important\",\n    },\n    stack: {\n        marginTop: \"1rem\",\n        marginBottom: \"1rem\",\n    },\n});\n\nconst UpdatePassword = ({ history }) => {\n    const classes = useStyles();\n    useEffect(() => {\n\n        const app = document.getElementsByClassName('App')[0];\n        const footer = document.getElementsByClassName('contactFormWrapper')[0];\n\n        footer.style.backgroundColor = 'unset'\n\n        app.style.backgroundImage = `url(${login_bg})`\n        app.style.backgroundSize = 'cover'\n        app.style.backgroundRepeat = 'no-repeat'\n        app.style.backgroundAttachment = 'fixed'\n\n    }, [])\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully')\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n\n        dispatch(updatePassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'} />\n\n            <div className=\"row wrapper remove_footer_bg\">\n                <div className=\"update__form-profile\">\n                    <Box\n                        component=\"form\"\n                        className=\"shadow-lg\"\n                        onSubmit={submitHandler}\n                        encType=\"multipart/form-data\"\n                        sx={{\n                            \"& .MuiTextField-root\": { m: 1 },\n                        }}\n                        noValidate\n                        autoComplete=\"off\"\n                    >\n                        <Stack direction=\"column\" spacing={2} className={classes.stack}>\n                            <Box>\n                                <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                            </Box>\n                            <TextField\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e) => setOldPassword(e.target.value)}\n                                label=\"Old Password\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                label=\"New Password\"\n                                variant=\"outlined\"\n                            />\n                        </Stack>\n                        <Stack direction=\"row\" spacing={2} className={classes.stack}>\n                            <Button\n                                variant=\"contained\"\n                                className={classes.button}\n                                type=\"submit\"\n                                disabled={loading ? true : false}\n                            >\n                                Update Password\n                            </Button>\n                        </Stack>\n                    </Box>\n                </div>\n               \n                {/* <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label for=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e) => setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label for=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\n                    </form>\n                </div> */}\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\ForgotPassword.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\UpdateProfile.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\user\\NewPassword.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\Dashboard.js",["710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { allOrders } from '../../actions/orderActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    Box,\n    List,\n    Badge,\n    Button,\n    Avatar,\n    Tooltip,\n    Divider,\n    IconButton,\n    Typography,\n    ListItemText,\n    ListSubheader,\n    ListItemAvatar,\n    ListItemButton\n} from '@mui/material';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Bar from './main/utils/Bar';\nimport SideDrawer from './main/utils/Drawer'\nimport Grid from '@mui/material/Grid';\nimport Main from './main/utils/Main'\nimport './main/utils/drawer/drawer.css'\nimport Paper from '@mui/material/Paper';\nimport { Icon } from '@iconify/react';\nimport doneAllFill from '@iconify/icons-eva/done-all-fill';\nimport MetaData from '../layout/MetaData'\nimport Stack from '@mui/material/Stack';\n\n\nconst drawerWidth = 300;\n\nconst Dashboard = () => {\n    const dispatch = useDispatch();\n    const [isDashboard, setIsDashboard] = useState();\n\n    function removeHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'none');\n        footer && (footer.style.display = 'none');\n    }\n\n    function mountHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'block');\n        footer && (footer.style.display = 'block');\n    }\n\n    function checkDashboard() {\n        const dashboard = '/dashboard';\n\n        let pathName = window.location.pathname;\n\n        if (pathName === dashboard) {\n            removeHeader();\n        }\n\n\n\n        // (pathName === dashboard) && setIsDashboard(previousState => { return { ...previousState, isDashboard: true } });\n        // (pathName !== dashboard) && setIsDashboard(previousState => { return { ...previousState, isDashboard: false } })\n    }\n\n\n    useEffect(() => {\n        checkDashboard()\n\n\n\n\n        return () => {\n            mountHeader();\n        }\n\n    }, [])\n\n    useEffect(() => {\n        const upProfil = document.getElementById('UpdateProfile');\n        upProfil.style.display = 'none';\n\n\n        const app = document.getElementsByClassName('App')[0];\n        app.classList.add('dashboard_main');\n\n        const newPass = document.getElementById('NewPassword');\n        newPass.style.display = 'none';\n\n\n        return () => {\n            app.classList.remove('dashboard_main');\n            upProfil.style.display = 'block';\n            newPass.style.display = 'block';\n        }\n    }, [])\n\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const { orders } = useSelector(state => state.allOrders)\n\n\n    useEffect(() => {\n        // dispatch(getAdminProducts())\n        dispatch(allOrders())\n        // dispatch(allUsers())\n    }, [dispatch])\n\n    let screenWidth = window.innerWidth;\n\n\n\n    return (\n        <Fragment >\n            <MetaData title={'Admin Dashboard'} />\n            <Grid container spacing={2}>\n                <CssBaseline />\n                {screenWidth <= 899 &&\n                    <Grid item xs={12} className=\"admin__main-viewer\">\n                        <Stack direction=\"column\" spacing={2} className=\"main_dash\">\n                            <Bar handleToggle='' drawerWidth={drawerWidth} />\n                            <SideDrawer drawerWidth={drawerWidth} mobileOpen={mobileOpen} handleToggle='' />\n                            <Main drawerWidth={drawerWidth} nmo={orders} />\n                        </Stack>\n                    </Grid>\n                }\n                {screenWidth >= 900 &&\n                    <>\n                        <Grid item xs={2.8} className=\"admin__sidedrawer-list\">\n                            <SideDrawer drawerWidth={drawerWidth} mobileOpen={mobileOpen} handleToggle='' />\n                        </Grid>\n                        <Grid item xs={9} className=\"admin__main-viewer\">\n                            <Stack direction=\"column\" spacing={2} className=\"main_dash\">\n                                <Bar handleToggle='' drawerWidth={drawerWidth} />\n                                <Main drawerWidth={drawerWidth} nmo={orders} />\n                            </Stack>\n                        </Grid>\n                    </>\n                }\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default Dashboard\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\ProductsList.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\NewProduct.js",["730","731","732","733","734","735","736","737","738","739","740","741","742"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom'\nimport Typography from '@mui/material/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\nimport { styled } from '@mui/material/styles';\n\n\nconst Input = styled('input')({\n    display: 'none',\n  });\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '80%',\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n\n\n\nconst NewProduct = ({ history }) => {\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    \n    // -------------------------------REMOVE HEADER AND FOOTER -------------------------------\n    function removeHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'none');\n        footer && (footer.style.display = 'none');\n    }\n\n    function mountHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'block');\n        footer && (footer.style.display = 'block');\n    }\n\n    function checkDashboard() {\n        removeHeader();\n    }\n\n    useEffect(() => {\n        checkDashboard()\n\n        return () => {\n            mountHeader();\n        }\n    }, [])\n\n    useEffect(() => {\n        const upProfil = document.getElementById('UpdateProfile');\n        upProfil.style.display = 'none';\n\n\n        const app = document.getElementsByClassName('App')[0];\n        app.classList.add('dashboard_main');\n\n        const newPass = document.getElementById('NewPassword');\n        newPass.style.display = 'none';\n\n\n        return () => {\n            app.classList.remove('dashboard_main');\n            upProfil.style.display = 'block';\n            newPass.style.display = 'block';\n        }\n    }, [])\n\n    // -----------------------------------------------------------------------------------------------\n\n\n    useEffect(() => {\n        const upProfil = document.getElementById('UpdateProfile');\n        upProfil.style.display = 'none';\n\n\n        const app = document.getElementsByClassName('App')[0];\n        app.classList.add('dashboard_main');\n\n        const newPass = document.getElementById('NewPassword');\n        newPass.style.display = 'none';\n\n\n        return () => {\n            app.classList.remove('dashboard_main');\n            upProfil.style.display = 'block';\n            newPass.style.display = 'block';\n        }\n    }, [])\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState();\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState();\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Poultry',\n        'Fresh Eggs',\n        'Pigsty',\n        'Goats, Sheep & mammals',\n        'Park Animals',\n        'Purebred Seed - ARTIFICIAL INSEMINATION',\n        'Food & Livestock Products'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully');\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = () => {\n       \n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n\n    const {register, handleSubmit, formState: {errors}} = useForm();\n    const onSubmit = (data) => {\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n       console.log(formData);\n    }\n    console.log(errors);\n\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            \n                    <Box id=\"create_product__container\">\n                        <Container style={{ paddingTop: '5%', paddingBottom: '2%', maxWidth: '100%', paddingLeft: '0', paddingRight: '0' }} >\n                            <Box\n                                component=\"form\"\n                                style={{ padding: '2rem'}}\n                                noValidate\n                                onSubmit={handleSubmit(onSubmit)} \n                                encType='multipart/form-data'\n                                autoComplete=\"off\"\n                                id=\"shipping_fistForm\"\n                                className=\"update_product__form\"\n                            >\n                                <div id=\"shipping_info\">\n                                    <h1 className=\"mt-2 mb-5\" style={{ paddingTop: '1rem' }}>Create Product</h1>\n                                    <Stack direction=\"column\" spacing={4} id=\"shipping_field-wrapper\">\n                                        <TextField\n                                            type=\"text\"\n                                            id=\"name_field\"\n                                            name='name'\n                                            fullWidth\n                                            label=\"Name\"\n                                            value={name}\n                                            {...register('name', {\n                                                onChange: (e) => setName(e.target.value),\n                                                required: 'Name is required',\n                                                maxLength: 25,\n                                              })}\n                                            error={Boolean(errors.name)}\n                                            helperText={errors.name?.message\n                                            }\n                                        />\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"price_field\"\n                                            name='price'\n                                            fullWidth\n                                            label=\"Price\"\n                                            value={price}\n                                            {...register('price', {\n                                                onChange: (e) => setPrice(e.target.value),\n                                                required: 'Price is required',\n                                                maxLength: 15,\n                                                pattern: /^[0-9 ()+-]+$/\n                                              })}\n                                            error={Boolean(errors.price)}\n                                            helperText={errors.price?.message\n                                            }\n                                        />\n                                        <TextField\n                                            id=\"descriptio_field\"\n                                            label=\"Description\"\n                                            multiline\n                                            name=\"description\"\n                                            rows={8}\n                                            defaultValue=\"Default Value\"\n                                            variant=\"standard\"\n                                            value={description} \n                                            type=\"text\"\n                                            {...register('description', {\n                                                onChange: (e) => setDescription(e.target.value),\n                                                required: 'Description is required',\n                                            })}\n                                            error={Boolean(errors.description)}\n                                            helperText={errors.description?.message\n                                            }\n                                            \n                                        />\n                                         <FormControl className=\"MuiTextField-root\" >\n                                            <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"update_product__color\"\n                                                name=\"category\"\n                                                value={category} \n                                                onChange={(e) => setCategory(e.target.value)}\n                                                label=\"Category\"\n                                                {...register('category', {\n                                                    onChange: (e) => setCategory(e.target.value),\n                                                    required: 'Category is required',\n                                                })}\n                                                error={Boolean(errors.category)}\n                                            helperText={errors.category?.message\n                                            }\n                                            >\n                                                {categories.map(category => (\n                                                    <MenuItem key={category} value={category} className=\"update_product__option\">{category}</MenuItem>\n                                                ))}\n                                            </Select>\n                                        </FormControl>\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"stock_field\"\n                                            name='stock'\n                                            fullWidth\n                                            label=\"Stock\"\n                                            value={stock}\n                                            onChange={(e) => setStock(e.target.value)}\n                                            {...register('stock', {\n                                                onChange: (e) => setStock(e.target.value),\n                                                required: 'Stock is required',\n                                                pattern: /^[0-9 ()+-]+$/\n                                              })}\n                                            error={Boolean(errors.price)}\n                                            helperText={errors.price?.message\n                                            }\n                                        />\n                                        <TextField\n                                            type=\"text\"\n                                            id=\"seller_field\"\n                                            name='seller'\n                                            fullWidth\n                                            label=\"Seller Name\"\n                                            value={seller}\n                                             {...register('seller', {\n                                                onChange: (e) => setSeller(e.target.value),\n                                                required: 'Seller name is required',\n                                            })}\n                                            error={Boolean(errors.seller)}\n                                            helperText={errors.seller?.message\n                                            }\n                                        />\n                                        <Stack direction=\"column\">\n                                            <label htmlFor=\"contained-button-file\">\n                                                <Input accept=\"image/*\"  onChange={onChange} id=\"contained-button-file\" required multiple type=\"file\" />\n                                                <Button variant=\"contained\" component=\"span\" sx={{fontSize: '1.4rem', pl: 8, pr: 8}} id=\"btn__newProduct-img\" >\n                                                Add Images\n                                                </Button>\n                                            </label>\n                                           \n                                            <Stack direction=\"row\" spacing={2}>\n                                            {imagesPreview.map(img => (\n                                                 <Avatar src={img} key={img} sx={{ width: 56, height: 56 }} alt=\"Images Preview\" />\n                                                 ))}\n                                                 </Stack>\n                                        </Stack>\n                                    </Stack>\n                                    <center style={{ marginTop: '3rem', marginBottom: '3rem' }}>\n                                        <Button\n                                            id=\"update-product_button\"\n                                            type=\"submit\"\n                                            variant=\"contained\"\n                                            className=\"create_product__btn\"\n                                            disabled={loading ? true : false}\n                                        >\n                                            CREATE PRODUCT\n                                        </Button>\n                                    </center>\n                                </div>\n                            </Box>\n                        </Container>\n                    </Box>\n              \n\n           \n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\UpdateProduct.js",["743","744","745"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\nimport { Container } from '@material-ui/core';\n\nconst UpdateProduct = ({ match, history }) => {\n\n    // -------------------------------REMOVE HEADER AND FOOTER -------------------------------\n    function removeHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'none');\n        footer && (footer.style.display = 'none');\n    }\n\n    function mountHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'block');\n        footer && (footer.style.display = 'block');\n    }\n\n    function checkDashboard() {  \n        removeHeader();\n    }\n\n    useEffect(() => {\n        checkDashboard()\n        \n        return () => {\n            mountHeader();\n        }\n    }, [])\n\n    useEffect(() => {\n        const upProfil = document.getElementById('UpdateProfile');\n        upProfil.style.display = 'none';\n\n\n        const app = document.getElementsByClassName('App')[0];\n        app.classList.add('dashboard_main');\n\n        const newPass = document.getElementById('NewPassword');\n        newPass.style.display = 'none';\n\n\n        return () => {\n            app.classList.remove('dashboard_main');\n            upProfil.style.display = 'block';\n            newPass.style.display = 'block';\n        }\n    }, [])\n\n    // -----------------------------------------------------------------------------------------------\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [size, setSize] = useState('');\n    const [color, setColor] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n\n    const [oldImages, setOldImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Poultry',\n        'Fresh Eggs',\n        'Pigsty',\n        'Goats, Sheep & mammals',\n        'Park Animals',\n        'Purebred Seed - ARTIFICIAL INSEMINATION',\n        'Food & Livestock Products'\n    ]\n\n    const productSize = [\n        '0 KG',\n        '2 KG',\n        '50 KG',\n        '3 L',\n        '5 L',\n        '10 L',\n        'Medium',\n        'Large',\n        'Verrat',\n        'Trout',\n        '1 Dose',\n        '1 T'\n    ]\n\n    const productColor = [\n        'Grey',\n        'White',\n        'Brown',\n        'Maroon',\n        'Blue',\n        'Black',\n        'Yellow'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, product } = useSelector(state => state.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\n\n    const productId = match.params.id;\n\n    useEffect(() => {\n\n        if (product && product._id !== productId) {\n            dispatch(getProductDetails(productId));\n        } else {\n            setName(product.name);\n            setPrice(product.price);\n            setDescription(product.description);\n            setSize(product.size);\n            setSize(product.color);\n            setCategory(product.category);\n            setSeller(product.seller);\n            setStock(product.stock)\n            setOldImages(product.images)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            history.push('/admin/products');\n            alert.success('Product updated successfully');\n            dispatch({ type: UPDATE_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('size', size);\n        formData.set('size', color);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(updateProduct(product._id, formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n        setOldImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n   \n\n\n    return (\n        <Container style={{paddingTop: '5%', paddingBottom: '2%', maxWidth: '100%', paddingLeft: '0', paddingRight: '0'}} id=\"update_product__container\">\n            <MetaData title={'Update Product'} />\n            <Box\n                component=\"form\"\n                style={{ padding: '2rem' }}\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={submitHandler}\n                encType='multipart/form-data'\n                id=\"shipping_fistForm\"\n                className=\"update_product__form\"\n            >\n                <div id=\"shipping_info\">\n                    <h1 className=\"mb-4 shipping_title\">Update Product</h1>\n                    <Stack direction=\"column\" spacing={4} id=\"shipping_field-wrapper\">\n                        <TextField\n                            id=\"name_field\"\n                            htmlFor=\"name_field\"\n                            label=\"Name\"\n                            variant=\"standard\"\n                            fullWidth\n                            name=\"name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            \n                        />\n                        <TextField\n                            id=\"price_field\"\n                            htmlFor=\"price_field\"\n                            label=\"Price\"\n                            variant=\"standard\"\n                            fullWidth\n                            name=\"price\"\n                            value={price}\n                            onChange={(e) => setPrice(e.target.value)}\n\n                        />\n                        <FormControl className=\"MuiTextField-root\" >\n                            <InputLabel id=\"demo-simple-select-label\">Color</InputLabel>\n                            <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"update_product__color\"\n                            value={category}\n                            label=\"Color\"\n                            onChange={(e) => setColor(e.target.value)}\n                            >\n                                {productColor.map(color => (\n                                    <MenuItem key={color} value={color} className=\"update_product__option\" >{color}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        <FormControl className=\"MuiTextField-root\" >\n                            <InputLabel id=\"demo-simple-select-label\">Size</InputLabel>\n                            <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"update_product__color\"\n                            value={size}\n                            label=\"Color\"\n                            onChange={(e) => setSize(e.target.value)}\n                            >\n                                {productSize.map(size => (\n                                    <MenuItem key={size} value={size} className=\"update_product__option\">{size}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            id=\"standard-multiline-static\"\n                            value={description}\n                            label=\"Description\"\n                            onChange={(e) => setColor(e.target.value)}\n                            multiline\n                            rows={4}\n                            defaultValue=\"\"\n                            variant=\"standard\"\n                        />\n                        <FormControl className=\"MuiTextField-root\" >\n                            <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n                            <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"update_product__category\"\n                            value={category}\n                            label=\"Category\"\n                            onChange={(e) => setCategory(e.target.value)}\n                            >\n                                {categories.map(category => (\n                                    <MenuItem key={category} value={category} className=\"update_product__option\">{category}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            id=\"stock_field\"\n                            htmlFor=\"stock_field\"\n                            label=\"Stock\"\n                            variant=\"standard\"\n                            fullWidth\n                            name=\"stock\"\n                            value={stock}\n                            onChange={(e) => setStock(e.target.value)}\n                            \n                        />\n                        <TextField\n                            id=\"seller_field\"\n                            htmlFor=\"seller_field\"\n                            label=\"Seller\"\n                            variant=\"standard\"\n                            fullWidth\n                            name=\"seller\"\n                            value={seller}\n                            onChange={(e) => setSeller(e.target.value)}\n                            \n                        />\n                        \n                        <Stack direction=\"row\" spacing={2} className=\"MuiTextField-root\" sx={{p: 4}}>\n                            {oldImages && oldImages.map(img => (\n                                <Avatar key={img} src={img.url} alt={img.url} />\n                            ))}\n                            {imagesPreview.map(img => (\n                                <Avatar key={img} src={img} alt=\"image preview\" />\n                            ))}\n                            <TextField\n                                type=\"file\"\n                                name=\"avatar\"\n                                id=\"customFile\"\n                                accept=\"image/*\"\n                                onChange={onChange}\n                                label=\"Product Images\"\n                                variant=\"standard\"\n                            />\n                        </Stack>\n                    </Stack>\n                </div>\n\n                <center style={{marginTop: '5rem'}}>\n                <Button\n                    id=\"update-product_button\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                    className=\"btn btn-block py-3\"\n                    disabled={loading ? true : false}\n                >\n                    UPDATE\n                </Button>\n            </center>\n            </Box>\n          \n\n        </Container >\n    )\n}\n\nexport default UpdateProduct\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\OrdersList.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\ProcessOrder.js",["746","747","748","749"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\nimport MenuItem from '@mui/material/MenuItem';\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\nimport InputLabel from '@mui/material/InputLabel';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport RemoveDoneIcon from '@mui/icons-material/RemoveDone';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@mui/material/Chip';\n\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { styled } from '@mui/material/styles';\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\nimport { ListItemIcon } from '@material-ui/core';\nimport delivered from '../../images/delivered.png';\nimport process from '../../images/processing.jpg'\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nconst ProcessOrder = ({ match }) => {\n\n       // -------------------------------REMOVE HEADER AND FOOTER -------------------------------\n       function removeHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'none');\n        footer && (footer.style.display = 'none');\n    }\n\n    function mountHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'block');\n        footer && (footer.style.display = 'block');\n    }\n\n    function checkDashboard() {\n        removeHeader();\n    }\n\n    useEffect(() => {\n        checkDashboard()\n\n        return () => {\n            mountHeader();\n        }\n    }, [])\n\n    useEffect(() => {\n        const upProfil = document.getElementById('UpdateProfile');\n        upProfil.style.display = 'none';\n\n\n        const app = document.getElementsByClassName('App')[0];\n        app.classList.add('dashboard_main');\n\n        const newPass = document.getElementById('NewPassword');\n        newPass.style.display = 'none';\n\n\n        return () => {\n            app.classList.remove('dashboard_main');\n            upProfil.style.display = 'block';\n            newPass.style.display = 'block';\n        }\n    }, [])\n\n    // -----------------------------------------------------------------------------------------------\n\n\n    useEffect(() => {\n        const upProfil = document.getElementById('UpdateProfile');\n        upProfil.style.display = 'none';\n\n\n        const app = document.getElementsByClassName('App')[0];\n        app.classList.add('dashboard_main');\n\n        const newPass = document.getElementById('NewPassword');\n        newPass.style.display = 'none';\n\n\n        return () => {\n            app.classList.remove('dashboard_main');\n            upProfil.style.display = 'block';\n            newPass.style.display = 'block';\n        }\n    }, [])\n\n    const [status, setStatus] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\n    const { error, isUpdated } = useSelector(state => state.order)\n\n    const orderId = match.params.id;\n\n    useEffect(() => {\n\n        dispatch(getOrderDetails(orderId))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            alert.success('Order updated successfully');\n            dispatch({ type: UPDATE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, orderId])\n\n\n    const updateOrderHandler = (id) => {\n\n        const formData = new FormData();\n        formData.set('status', status);\n\n        dispatch(updateOrder(id, formData))\n    }\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\n\n\n\n    return (\n        <Fragment>\n            <MetaData title={`Process Order # ${order && order._id}`} />\n            <Container style={{ paddingTop: '5%', paddingBottom: '2%', maxWidth: '100%', paddingLeft: '0', paddingRight: '0' }} id=\"update_product__container\">\n                <Box sx={{ flexGrow: 1 }} id=\"process_order-wrapper\">\n                    <Grid container className=\"processOrder__container_grid\" justifyContent=\"center\" alignItems=\"center\" columns={16} spacing={3}>\n                        <Grid item xs={8} className=\"processOrder__grid_item\">\n                            <Box style={{ padding: '2rem' }} className=\"processOrder__inner\">\n                                <Typography variant=\"h3\" sx={{mb: 1}}>Order # {order._id}</Typography>\n                                <List component=\"div\" aria-label=\"mailbox folders\">\n                                    <Divider textAlign=\"left\"><Chip sx={{fontSize: '1.4rem!important'}} label=\"Shipping Info\" /></Divider>\n                                    <ListItem button sx={{mt: 2}}>\n                                        <Stack direction=\"row\" spacing={2}>\n                                            <b><ListItemText className=\"po_item_title\" primary=\"Name: \" /></b>\n                                            <ListItemText primary={user && user.name}  sx={{alignSelf: 'center'}} />\n                                        </Stack>\n                                    </ListItem>\n\n                                    <ListItem button>\n                                        <Stack direction=\"row\" spacing={2}>\n                                            <b><ListItemText className=\"po_item_title\" primary=\"Phone: \" /></b>\n                                            <ListItemText primary={shippingInfo && shippingInfo.phoneNo}  sx={{alignSelf: 'center'}} />\n                                        </Stack>\n                                    </ListItem>\n\n                                    <ListItem button>\n                                        <Stack direction=\"row\" spacing={2}>\n                                            <b><ListItemText className=\"po_item_title\" primary=\"Address: \" /></b>\n                                            <ListItemText primary={shippingDetails}  sx={{alignSelf: 'center'}} />\n                                        </Stack>\n                                    </ListItem>\n\n                                    <ListItem button sx={{mb: 2}}>\n                                        <Stack direction=\"row\" spacing={2}>\n                                            <b><ListItemText className=\"po_item_title\" primary=\"Amount: \" /></b>\n                                            <ListItemText primary={`$${totalPrice}`} sx={{alignSelf: 'center'}}  />\n                                        </Stack>\n                                    </ListItem>\n\n                                    <Divider textAlign=\"left\"><Chip sx={{fontSize: '1.4rem!important'}} label=\"Payment\" /></Divider>\n                                    <ListItem button sx={{mt: 2, mb: 2}}>\n                                        <ListItemText\n                                            className={isPaid ? \"greenColor\" : \"redColor\"}\n                                            primary={isPaid ? \"PAID\" : \"NOT PAID\"}\n                                        />\n                                        {isPaid ?\n                                         <ListItemIcon>\n                                            <DoneAllIcon />\n                                        </ListItemIcon>\n                                        :\n                                        <ListItemIcon>\n                                            <RemoveDoneIcon />\n                                        </ListItemIcon>\n                                        } \n                                        \n                                    </ListItem>\n\n                                    <Divider textAlign=\"left\"><Chip sx={{fontSize: '1.4rem!important'}} label=\"Stripe ID\" /></Divider>\n                                    <ListItem button sx={{mt: 2, mb: 2}}>\n                                        <ListItemText\n                                            primary={paymentInfo && paymentInfo.id}\n                                        />\n                                    </ListItem>\n\n                                    <Divider textAlign=\"left\"><Chip sx={{fontSize: '1.4rem!important'}} label=\"Order Status\" /></Divider>\n                                    <ListItem button sx={{mt: 2, mb: 2}}>\n                                        <ListItemText\n                                            className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"}\n                                            primary={orderStatus}\n                                        />\n                                        {order.orderStatus && String(order.orderStatus).includes('Delivered') ? \n                                            <img src={delivered} alt=\"delivered product\" className=\"order-status__img\" />\n                                            :\n                                            <img src={process} alt=\"processing product\" className=\"order-status__img\" />\n                                        }\n                                    </ListItem>\n\n                                    <Divider textAlign=\"left\"><Chip sx={{fontSize: '1.4rem!important'}} label=\"Order Items\" /></Divider>\n                                    <Box sx={{mt: 2}}>\n                                        {orderItems && orderItems.map(item => (\n                                            <ListItem button  key={item.product} >\n                                                <Link to={`/products/${item.product}`}>\n                                                    <Stack direction=\"row\" spacing={2}>\n                                                        <Avatar src={item.image} alt={item.name} />\n                                                    </Stack>\n                                                </Link>\n                                                <ListItemText primary={`$${item.price}`} />\n                                                <ListItemText primary={`${item.quantity} Piece(s)`} />\n                                            </ListItem>\n                                        ))}\n                                    </Box>\n                                </List>\n                            </Box>\n                        </Grid>\n\n                        <Grid item xs={8} className=\"processOrder__grid_item\">\n                            <Item>\n                                <Stack direction=\"column\" spacing={2}>\n                                    <Typography variant=\"h4\">Status</Typography>\n                                    <FormControl className=\"MuiTextField-root\" id=\"processOrder__field__select\">\n                                        <InputLabel id=\"demo-simple-select-label\" sx={{fontSize: '1.6rem'}}>Status</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"processOrder__select\"\n                                            value={status}\n                                            name='status'\n                                            label=\"Status\"\n                                            style={{ height: 'auto!important' }}\n                                            onChange={(e) => setStatus(e.target.value)}\n                                        >\n                                            <MenuItem value=\"Processing\" className=\"processOrder__option\" sx={{fontSize: '1.6rem'}}>Processing</MenuItem>\n                                            <MenuItem value=\"Shipped\" className=\"processOrder__option\" sx={{fontSize: '1.6rem'}}>Shipped</MenuItem>\n                                            <MenuItem value=\"Delivered\" className=\"processOrder__option\" sx={{fontSize: '1.6rem'}}>Delivered</MenuItem>\n                                        </Select>\n                                    </FormControl>\n\n                                    <Button variant=\"contained\" id=\"processOrder__bg\" onClick={() => updateOrderHandler(order._id)}>Update Status</Button>\n                                </Stack>\n                            </Item>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </Fragment>\n    )\n}\n\nexport default ProcessOrder\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\UpdateUser.js",["750","751","752"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\n\nconst UpdateUser = ({ history, match }) => {\n\n    // -------------------------------REMOVE HEADER AND FOOTER -------------------------------\n    function removeHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'none');\n        footer && (footer.style.display = 'none');\n    }\n\n    function mountHeader() {\n        const header = document.querySelector('.farm-header');\n        const footer = document.querySelector('#contactFormWrapper');\n        header && (header.style.display = 'block');\n        footer && (footer.style.display = 'block');\n    }\n\n    function checkDashboard() {\n        removeHeader();\n    }\n\n    useEffect(() => {\n        checkDashboard()\n\n        return () => {\n            mountHeader();\n        }\n    }, [])\n\n    useEffect(() => {\n        const upProfil = document.getElementById('UpdateProfile');\n        upProfil.style.display = 'none';\n\n\n        const app = document.getElementsByClassName('App')[0];\n        app.classList.add('dashboard_main');\n\n        const newPass = document.getElementById('NewPassword');\n        newPass.style.display = 'none';\n\n\n        return () => {\n            app.classList.remove('dashboard_main');\n            upProfil.style.display = 'block';\n            newPass.style.display = 'block';\n        }\n    }, [])\n\n    // -----------------------------------------------------------------------------------------------\n\n\n    useEffect(() => {\n        const upProfil = document.getElementById('UpdateProfile');\n        upProfil.style.display = 'none';\n\n\n        const app = document.getElementsByClassName('App')[0];\n        app.classList.add('dashboard_main');\n\n        const newPass = document.getElementById('NewPassword');\n        newPass.style.display = 'none';\n\n\n        return () => {\n            app.classList.remove('dashboard_main');\n            upProfil.style.display = 'block';\n            newPass.style.display = 'block';\n        }\n    }, [])\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [role, setRole] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated } = useSelector(state => state.user);\n    const { user } = useSelector(state => state.userDetails)\n\n    const userId = match.params.id;\n\n    useEffect(() => {\n\n        console.log(user && user._id !== userId);\n        if (user && user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            setRole(user.role)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n\n            history.push('/admin/users')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated, userId, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData))\n    }\n\n\n    return (\n        <Fragment>\n            <Container style={{ paddingTop: '5%', paddingBottom: '2%', maxWidth: '100%', height: '100vh', paddingLeft: '0', paddingRight: '0' }} id=\"update_product__container\">\n                <MetaData title={`Update User`} />\n                <Box\n                    component=\"form\"\n                    style={{ padding: '2rem' }}\n                    noValidate\n                    autoComplete=\"off\"\n                    onSubmit={submitHandler}\n                    encType='multipart/form-data'\n                    id=\"shipping_fistForm\"\n                    className=\"update_product__form\"\n                >\n                    <div id=\"shipping_info\">\n                        <h1 className=\"mt-2 mb-5\" style={{paddingTop: '1rem'}}>Update User</h1>\n                        <Stack direction=\"column\" spacing={4} id=\"shipping_field-wrapper\">\n                            <TextField\n                                type=\"name\"\n                                id=\"name_field\"\n                                name='name'\n                                fullWidth\n                                label=\"Name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                            <TextField\n                                type=\"email\"\n                                id=\"email_field\"\n                                fullWidth\n                                name='email'\n                                label=\"Email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                            <FormControl className=\"MuiTextField-root\" >\n                                <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"update_product__color\"\n                                    value={role}\n                                    label=\"Role\"\n                                    onChange={(e) => setRole(e.target.value)}\n                                >\n                                    <MenuItem value=\"user\" className=\"update_product__option\">user</MenuItem>\n                                    <MenuItem value=\"admin\" className=\"update_product__option\">admin</MenuItem>\n                                </Select>\n                            </FormControl>\n\n                        </Stack>\n                        <center style={{ marginTop: '3rem', marginBottom: '3rem' }}>\n                            <Button\n                                id=\"update-product_button\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className=\"btn btn-block py-3\"\n                            >\n                                UPDATE\n                            </Button>\n                        </center>\n                    </div>\n                </Box>\n            </Container>\n        </Fragment>\n    )\n}\n\nexport default UpdateUser\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\ProductReviews.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\farm\\Farm.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Contact.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Header.js",["753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775"],"import React, { Fragment, useState } from 'react'\n\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport {useTheme } from '@material-ui/core/styles';\n\nimport InputBase from '@mui/material/InputBase';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { styled, alpha } from '@mui/material/styles';\n\nimport { Route, Link } from 'react-router-dom'\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport SideDrawer from \"./Drawer\";\nimport Badge from '@mui/material/Badge';\nimport Button from '@mui/material/Button';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Box from '@mui/material/Box';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from '../../actions/userActions'\nimport { Col } from 'react-bootstrap'\nimport Search from './Search'\nimport ViewSidebarIcon from '@mui/icons-material/ViewSidebar';\nimport Avatar from '@mui/material/Avatar';\n\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport '../../App.css'\nimport MobileSideBar from './MobileSideBarFarm';\nimport Divider from '@mui/material/Divider';\nimport poultry from './categoryImages/poultry.svg'\nimport egg from './categoryImages/egg.svg'\nimport pig from './categoryImages/pig.svg'\nimport sheep from './categoryImages/sheep.svg'\nimport park from './categoryImages/park.svg'\nimport artificial from './categoryImages/artificial.svg'\nimport livestock from './categoryImages/livestock.svg'\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n\nconst StyledMenu = styled((props) => (\n    <Menu\n      elevation={0}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      {...props}\n    />\n  ))(({ theme }) => ({\n    '& .MuiPaper-root': {\n      borderRadius: 6,\n      marginTop: theme.spacing(1),\n      minWidth: 180,\n      color:\n        theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n      boxShadow:\n        'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n      '& .MuiMenu-list': {\n        padding: '4px 0',\n      },\n      '& .MuiMenuItem-root': {\n        '& .MuiSvgIcon-root': {\n          fontSize: '1.6rem',\n          color: theme.palette.text.secondary,\n          marginRight: theme.spacing(1.5),\n        },\n        '&:active': {\n          backgroundColor: alpha(\n            theme.palette.primary.main,\n            theme.palette.action.selectedOpacity,\n          ),\n        },\n      },\n    },\n  }));\n\nconst drawerWidth = 240;\n\nconst SearchBox = styled('form')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  }));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n  }));\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    font: {\n        fontSize: '1.6rem!important'\n    },\n    root: {\n        display: 'flex',\n      },\n      drawer: {\n        [theme.breakpoints.up('sm')]: {\n          width: drawerWidth,\n          flexShrink: 0,\n        },\n        '& * span': {\n            marginLeft: '0!important',\n        }\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n      },\n      toolbar: theme.mixins.toolbar,\n      drawerPaper: {\n        width: drawerWidth\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n      },\n      closeMenuButton: {\n        marginRight: 'auto',\n        marginLeft: 0,\n        color: '#ffffff!important'\n      },\n}));\n\n\nconst Header = () => {\n    const classes = useStyles();\n\n    const categories = [\n        {\n            \"title\": \"Poultry\",\n            \"icon\": poultry,\n            \"atl\": \"LaiWiv\",\n            \"page\": \"/product-category/poultry\"\n        },\n        {\n            \"title\": \"Fresh Eggs\",\n            \"icon\": egg,\n            \"atl\": \"KTrngrIo\",\n            \"page\": \"/product-category/fresh-eggs\"\n        },\n        {\n            \"title\": \"Pigsty\",\n            \"icon\": pig,\n            \"atl\": \"EyCVOYElB\",\n            \"page\": \"/product-category/pigsty\"\n        },\n        {\n            \"title\": \"Goats & Mammals\",\n            \"icon\": sheep,\n            \"atl\": \"EyCVOYElP\",\n            \"page\": \"/product-category/goat-sheep-mammals\"\n        },\n        {\n            \"title\": \"Park Animals\",\n            \"icon\": park,\n            \"atl\": \"XgcabxkzflU\",\n            \"page\": \"/product-category/park-animals\"\n        },\n        {\n            \"title\": \"Artificial Insemination\",\n            \"icon\": artificial,\n            \"atl\": \"tkTOAnrTpGM\",\n            \"page\": \"/product-category/purebred-seed\"\n        },\n        {\n            \"title\": \"Food & Livestock\",\n            \"icon\": livestock,\n            \"atl\": \"nnFiNyv\",\n            \"page\": \"/product-category/livestock-food\"\n        }\n    ]\n\n    \n    // const [mobile, setMobile] = useState({ defaultMode: false, tableMode: false, mobileMode: false })\n\n    // if (window.screen.width <= 1199) {\n    //     setMobile({ defaultMode: true })\n    //     // console.log('WIDTH: ' + mobile)\n    // } else if (window.screen.width <= 768) {\n    //     setMobile({ tabletMode: true })\n    //     console.log(\"TABLE: \" + mobile.tableMode)\n    // } else {\n    //     setMobile({ defaultMode: false })\n    //}\n    const [drawer, setDrawer] = useState(true);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully.')\n        handleDrawerToggle()\n    }\n\n    const SearchBar = () => {\n        return (\n            <Box style={{display: 'flex', flex: 'auto', justifyContent: 'center'}} >\n                <Route render={({ history }) => <Search history={history} />} />\n            </Box>\n        )\n    }\n    const CardInfo = () => {\n        return (\n            <Link to=\"/cart\" className=\"user_cart\" style={{ textDecoration: 'none' }} >\n                <div className=\"user_cart-row pd\">\n                    <div className=\"user_cart-col\">\n                        <span style={{ float: 'left', marginRight: '1rem' }}>\n                            <i className=\" fas fa-shopping-cart\"></i>\n                            <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                        </span>\n                    </div>\n                    <div className=\"user_cart-col\">\n                        <span>\n                            <p className=\"farm_header_nav_item\" >Cart</p>\n                        </span>\n                    </div>\n                </div>\n            </Link>\n        )\n    }\n    const Login = () => {\n        return (\n            <Link to=\"/login\" >\n                <div className=\"login pd\" style={{ display: 'flex' }} id=\"loginswitch\">\n                    <div style={{ float: 'left', marginRight: '1rem' }}>\n                        <i className=\"farm_header_nav_svg far fa-user\"></i>\n                    </div>\n                    <div>\n                        <p className=\"farm_header_nav_item\" style={{ float: 'left' }}>Login</p>\n\n                    </div>\n                </div>\n            </Link>\n        )\n    }\n\n    let cart_amount = <span id=\"cart_amount\">{cartItems.length}</span>;\n\n    const Bar = () => {\n        return (\n            <Stack direction=\"row\" sx={{ paddingLeft: 2, paddingRight: 2, flex: '1' }}  spacing={2} className=\"inner__navigation-mb\">\n                <Box style={{alignSelf: 'center'}}>\n                        <div className=\"navbrand\">\n                            <Link to=\"/\">\n                                <img src=\"/images/logo.png\" alt=\"logo\" />\n                            </Link>\n                        </div>\n                    {/* <Stack direction=\"row\" spacing={2}>\n                        <MenuIcon id=\"menu_icon-farm\" edge=\"start\" style={{cursor: 'pointer'}} onClick={handleDrawerToggle} />\n                    </Stack> */}\n                </Box>\n\n                <Box style={{flex: 'auto'}} id=\"desktop_searfield_notSigned\">\n                    {/* <Route render={({ history }) => <SearchField history={history} />} /> */}\n                    <SearchBar />\n                </Box>\n\n                <Box style={{flex: '1', maxWidth: 'fit-content'}}>\n                    {window.innerWidth >= 900 ?\n                        <Stack direction=\"row\" spacing={2} id=\"account_cart_stack\">\n                            <Link to=\"/login\" style={{ textDecoration: 'none', placeSelf: 'center' }} >\n                                <IconButton>\n                                    <Stack direction=\"row\" spacing={2}>\n                                        <AccountCircleOutlinedIcon />\n                                        <Typography style={{placeSelf: 'center', marginLeft: '.3rem', fontSize: ''}}>Login</Typography>\n                                    </Stack>\n                                </IconButton>\n                            </Link>\n\n                            <Link to=\"/cart\" style={{ textDecoration: 'none', placeSelf: 'center', marginLeft: '0' }} >\n                                <IconButton aria-label=\"cart\" id=\"icon_btn-badge\" style={{marginLeft: '0'}}>\n                                    <Badge badgeContent={cart_amount} id=\"badge_wrapper\" color=\"secondary\">\n                                        <ShoppingCartOutlinedIcon />\n                                    </Badge>\n                                </IconButton>\n                            </Link>\n                        </Stack>\n                    :\n                        <MenuIcon id=\"menu_icon-farm\" edge=\"start\" style={{cursor: 'pointer'}} onClick={handleDrawerToggle} />\n                    }\n                </Box>\n            </Stack>\n        )\n    }\n\n    const SearchField = ({history}) => {\n        const [keyword, setKeyword] = useState('');\n\n        const searchHandler = (e) => {\n            e.preventDefault()\n\n            if (keyword.trim()) {\n                history.push(`/search/${keyword}`)\n            } else {\n                history.push('/search')\n            }\n\n           if(window.innerWidth >= 500 ) {\n               return null\n           } else {\n            handleDrawerToggle()\n           }\n        }\n\n       \n\n        return (\n            <Stack direction={window.innerWidth >= 500 ? 'row' : 'column'} spacing={2} id=\"search_sidebar\">\n                <SearchBox id=\"search__box\" onSubmit={searchHandler} autocomplete=\"off\">\n                    <SearchIconWrapper id=\"search__wrapper\">\n                        <SearchIcon />\n                        </SearchIconWrapper>\n                    <StyledInputBase\n                        placeholder=\"Search…\"\n                        inputProps={{ 'aria-label': 'search' }}\n                        id=\"input_base__search\"\n                        onChange={(e) => setKeyword(e.target.value)}\n                    />\n                </SearchBox>\n\n               {window.innerWidth >= 600 ? <Button id=\"search_btn\" onClick={searchHandler} size=\"small\" >search</Button> : null}\n            </Stack>\n        )\n    }\n\n    const BarMobile = () => {\n        return (\n            <Stack direction=\"row\" sx={{ paddingLeft: 2, paddingRight: 2 }} spacing={2} className=\"inner__navigation-mb\">\n                <Box style={{ alignSelf: 'center' }}>                    \n                    <div className=\"navbrand\">\n                        <Link to=\"/\">\n                            <img src=\"/images/logo.png\" alt=\"logo\" />\n                        </Link>\n                    </div>\n                </Box>\n                <Box style={{ alignSelf: 'center' }}>\n                    <MenuIcon id=\"menu_icon-farm\" edge=\"start\" style={{ cursor: 'pointer' }} onClick={handleDrawerToggle} />\n                </Box>\n            </Stack>\n        )\n    }\n\n    const Account = () => {\n        return (\n            <>\n                {user ?\n                    (\n                        <>\n                            <Divider style={{ margin: '.8rem 1.6rem', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\n                                <Stack direction='row' spacing={2} >\n                                    <Avatar\n                                        src={user.avatar && user.avatar.url}\n                                        alt={user && user.name}\n                                        className=\"avatar_img_sidebar\"\n                                    />\n                                    <ListItemText primary={user && user.name} id=\"list_item_text\" style={{color: '#ffffff!important', textTransform: 'capitalize'}} />\n                                </Stack>\n                            </Divider>\n                            {user && user.role === 'admin' && (\n                                <Link to=\"/dashboard\" style={{ textDecoration: 'none', placeSelf: 'center' }} onClick={handleDrawerToggle}>\n                                    <Stack direction=\"row\" className=\"farm-sidebar__stack_item\" spacing={2} style={{marginTop: '2rem'}}>\n                                        <AdminPanelSettingsIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                                        <ListItemText primary={'Dashboard'} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\n                                    </Stack>\n                                </Link>\n                            )}\n                            <Link to=\"/cart\" style={{ textDecoration: 'none', placeSelf: 'center' }} onClick={handleDrawerToggle}>\n                                <Stack direction=\"row\" className=\"farm-sidebar__stack_item\" spacing={2} >\n                                    <IconButton aria-label=\"cart\" id=\"icon_btn-badge\" style={{ marginLeft: '0' }}>\n                                        <Badge badgeContent={cart_amount} id=\"badge_wrapper\" color=\"secondary\">\n                                            <ShoppingCartOutlinedIcon className=\"icon_svg_sidebar\" id=\"cart_svg_sidebar\" />\n                                        </Badge>\n                                    </IconButton>\n                                    <ListItemText primary={'Cart'} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\n                                </Stack>\n                            </Link>\n                            <Link to=\"/orders/me\" style={{ textDecoration: 'none', placeSelf: 'center' }} onClick={handleDrawerToggle}>\n                                <Box style={{ margin: '1.2rem 0' }}>\n                                    <Stack direction=\"row\" className=\"farm-sidebar__stack_item\" spacing={2} style={user.role !== 'admin' ? {marginTop: '2rem'} : {}}>\n                                        <LocalOfferIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                                        <ListItemText primary={'Orders'} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\n                                    </Stack>\n                                </Box>\n                            </Link>\n                            <Link to=\"/me\" style={{ textDecoration: 'none', placeSelf: 'center' }} onClick={handleDrawerToggle}>\n                               <Box style={{ margin: '1.2rem 0' }}>\n                               <Stack direction=\"row\" className=\"farm-sidebar__stack_item\" spacing={2} >\n                                    <ManageAccountsIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                                    <ListItemText primary={'Profile'} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\n                                </Stack>\n                               </Box>\n                            </Link>\n                            <Link to=\"/\" style={{ textDecoration: 'none', placeSelf: 'center' }} onClick={logoutHandler}>\n                                <Stack direction=\"row\" className=\"farm-sidebar__stack_item\" spacing={2} >\n                                    <LogoutIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                                    <ListItemText primary={'Logout'} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\n                                </Stack>\n                            </Link>\n                        </>\n                    )\n                    :\n                    (\n                        <>\n                            <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\n                                <Chip label=\"Account\" />\n                            </Divider>\n                            <Link to=\"/login\" style={{ textDecoration: 'none', placeSelf: 'center' }} onClick={handleDrawerToggle}>\n                                <Stack direction=\"row\" spacing={2} >\n                                    <AccountCircleOutlinedIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                                    <ListItemText primary={'Login'} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\n                                </Stack>\n                            </Link>\n                            <Link to=\"/cart\" style={{ textDecoration: 'none', placeSelf: 'center' }} onClick={handleDrawerToggle}>\n                                <Stack direction=\"row\" spacing={2} >\n                                    <IconButton aria-label=\"cart\" id=\"icon_btn-badge\" style={{ marginLeft: '0' }}>\n                                        <Badge badgeContent={cart_amount} id=\"badge_wrapper\" color=\"secondary\">\n                                            <ShoppingCartOutlinedIcon className=\"icon_svg_sidebar\" id=\"cart_svg_sidebar\" />\n                                        </Badge>\n                                    </IconButton>\n                                    <ListItemText primary={'Cart'} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\n                                </Stack>\n                            </Link>\n                        </>\n                    )}\n\n            </>\n        )\n    }\n\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n  function handleDrawerToggle() {\n      setMobileOpen(!mobileOpen)\n    }\n  const sidedrawer = (\n      <div>\n        <List>\n       {window.innerWidth >= 500 ? null : ( <ListItem ><Route render={({ history }) => <SearchField history={history} />} /></ListItem>)}\n        \n            <ListItem style={{display: 'block'}}>\n                <Account />\n            </ListItem>\n            \n    \n        <Divider style={{margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)'}} className=\"divider_sidebar\">\n            <Chip label=\"Category\"  />\n        </Divider>\n            {categories.map((item, index) => {\n                return (\n                    <ListItem key={index}>\n                        <Link to={item.page} style={{width: '100%'}} onClick={handleDrawerToggle}>\n                            <Stack direction='row' spacing={2} >\n                                <Avatar\n                                    alt={item.atl}\n                                    src={item.icon}\n                                    className=\"avatar_img_sidebar\"\n                                />\n                                <ListItemText primary={item.title} id=\"list_item_text\" style={{color: '#ffffff!important'}} />\n                            </Stack>\n                        </Link>\n                    </ListItem>\n                )\n            })}\n           \n        </List>\n      </div>\n    );\n\n    \n\n    const Draw = () => {\n        return (\n            <div className={classes.drawer}>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n            id=\"drawer__container-wrapper\"\n          >\n            <IconButton onClick={handleDrawerToggle} className={classes.closeMenuButton}>\n              <CloseIcon/>\n            </IconButton>\n            {sidedrawer}\n\n          </Drawer>\n        </Hidden>\n<Hidden xsDown implementation=\"css\">\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            id=\"drawer__container-wrapper\"\n          >\n            <div className={classes.toolbar} />\n            {sidedrawer}\n          </Drawer>  \n        </Hidden>\n      </div>\n        )\n    }\n\n    function CustomizedMenus() {\n        const [anchorEl, setAnchorEl] = React.useState(null);\n        const open = Boolean(anchorEl);\n        const handleClick = (event) => {\n          setAnchorEl(event.currentTarget);\n        };\n        const handleClose = () => {\n          setAnchorEl(null);\n        };\n\n        function handleMenu() {\n            handleClose();\n            handleDrawerToggle();\n        }\n      \n        return (\n          <div>\n            <Button\n              id=\"demo-customized-button\"\n              aria-controls=\"demo-customized-menu\"\n              aria-haspopup=\"true\"\n              aria-expanded={open ? 'true' : undefined}\n              variant=\"contained\"\n              disableElevation\n              onClick={handleClick}\n              endIcon={<KeyboardArrowDownIcon />}\n            >\n             {user && \n                <Stack direction=\"row\" spacing={2}>\n                    <Avatar\n                        src={user.avatar && user.avatar.url}\n                        alt={user && user.name}\n                        className=\"avatar_img_sidebar\"\n                    />\n                    <ListItemText primary={user && user.name} id=\"list_item_text\" style={{ textTransform: 'capitalize' }} />\n                </Stack>\n             }\n            \n            </Button>\n            <StyledMenu\n              id=\"demo-customized-menu\"\n              MenuListProps={{\n                'aria-labelledby': 'demo-customized-button',\n              }}\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n            >\n              {user && user.role === 'admin' && (\n                   <Link to=\"/dashboard\" className=\"link__dropdown_item\">\n                       <MenuItem onClick={handleClose} disableRipple className=\"dropDown_menu_list__item\">\n                       <AdminPanelSettingsIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                       Dashboard\n                    </MenuItem>\n                    </Link>\n                )}\n                {window.innerWidth < 600 && (\n                    <MenuItem onClick={handleMenu} disableRipple className=\"dropDown_menu_list__item\">\n                     <ViewSidebarIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                     Menu\n                 </MenuItem>\n                )}\n                    <Link to=\"/orders/me\" className=\"link__dropdown_item\">\n                <MenuItem onClick={handleClose} disableRipple className=\"dropDown_menu_list__item\">\n                    <ManageAccountsIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                    Orders\n                </MenuItem>\n                </Link>\n                <Link to=\"/me\" className=\"link__dropdown_item\">\n                <MenuItem onClick={handleClose} disableRipple className=\"dropDown_menu_list__item\">\n                    <ManageAccountsIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                    Profile\n                </MenuItem>\n                </Link>\n              <Divider sx={{ my: 0.5 }} />\n              <Link to=\"/\" className=\"link__dropdown_item\" onClick={logoutHandler}>\n                <MenuItem onClick={handleClose} disableRipple className=\"dropDown_menu_list__item\">\n                <LogoutIcon className=\"icon_svg_sidebar\" id=\"login_svg_sidebar\" />\n                    Sign Out\n                </MenuItem>\n             </Link>\n            </StyledMenu>\n          </div>\n        );\n      }\n\n\n    return (\n        <Fragment>\n            <header className=\"farm-header\" id=\"homeView\">\n                <section className={`wrapper ${user ? '' : ' isNot__login'}`}>\n                    {\n                        user ?\n                            (\n                                <Stack direction=\"row\" spacing={2}  sx={{ paddingLeft: 2, paddingRight: 2 }} id=\"stack_header_mobile\">\n\n                                    {/* LOGO */}\n                                    <Box style={{flex: '1', maxWidth: 'fit-content'}}>\n                                        <Link to=\"/\">\n                                            <img src=\"/images/logo.png\" id=\"logo_avatar\" alt=\"logo\" />\n                                        </Link>\n                                    </Box>\n\n                                    {/* SEARCG BAR */}\n                                   {window.innerWidth < 600 ? null :  <SearchBar />}\n                                    {/* {window.innerWidth === 500 ? <Route render={({ history }) => <SearchField history={history} />} /> : null} */}\n\n                                    {/* RIGHT SIDE TOOLS */}\n                                    <Box style={{ alignSelf: 'center', flex: '1' }} id=\"box_menu_icon\">\n                                        {window.innerWidth < 500 ? (\n                                            <MenuIcon id=\"menu_icon-farm\" edge=\"start\" style={{ cursor: 'pointer' }} onClick={handleDrawerToggle} />\n                                        )\n                                            :\n                                            (\n                                                <Stack direction=\"row\" spacing={2} style={{ alignItems: 'center' }}>\n                                                    <Box>\n                                                        <CustomizedMenus />\n                                                    </Box>\n                                                    {/* <IconButton>\n                                                    <Stack direction=\"row\" spacing={2}>\n                                                    <Avatar\n                                                        src={user.avatar && user.avatar.url}\n                                                        alt={user && user.name}\n                                                        className=\"avatar_img_sidebar\"\n                                                    />\n                                                    <ListItemText primary={user && user.name} id=\"list_item_text\" style={{textTransform: 'capitalize'}} />\n                                                    </Stack>\n                                                    </IconButton> */}\n\n                                                    <Box>\n                                                        <Link to=\"/cart\" style={{ textDecoration: 'none', placeSelf: 'center', marginLeft: '0' }} >\n                                                            <IconButton aria-label=\"cart\" id=\"icon_btn-badge\" style={{ marginLeft: '0' }}>\n                                                                <Badge badgeContent={cart_amount} id=\"badge_wrapper\" color=\"secondary\">\n                                                                    <ShoppingCartOutlinedIcon />\n                                                                </Badge>\n                                                            </IconButton>\n                                                        </Link>\n                                                    </Box>\n\n                                                    {/* <MenuIcon id=\"menu_icon-farm\" edge=\"start\" style={{ cursor: 'pointer' }} onClick={handleDrawerToggle} /> */}\n                                                </Stack>\n                                            )}\n                                    </Box>\n                                </Stack>\n                            )\n                            :\n                            (\n                                <>\n                                    {window.innerWidth < 500 ? <BarMobile /> : <Bar />}\n                                </>\n                            )\n\n                    }\n                    {mobileOpen ? <Draw /> : null}\n\n                </section>\n            </header>\n        </Fragment>\n    )\n}\n\nexport default Header\n\n\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\RealEstate.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Poultry.js",["776","777"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport SideBarFielter from './sidebar/Sidebar'\r\nimport '../../layout/mCustomscrollbar.css'\r\nimport './category_responsive.css'\r\nimport Crumb from './breadcrumb/Breadcrumb'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../../layout/MetaData'\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Stack from '@mui/material/Stack';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport FilterCt from './breadcrumb/Filter';\r\nimport Paper from '@mui/material/Paper';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n\r\n\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Buttone from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Paginatione from 'react-js-pagination'\r\nimport { Range } from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProductsCategory } from '../../../actions/productActions'\r\nimport '../../../styles/Locataire.css'\r\n\r\nimport ProductList from '../../product/ProductList';\r\nimport backToFarm from '../../../images/category/forwardslash.svg'\r\nimport { HiViewGrid } from 'react-icons/hi'\r\nimport { FaListUl } from 'react-icons/fa'\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport Categories from './Category.json';\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport laying_hens from '../../layout/categoryImages/sidebar/laying_hens.svg'\r\nimport broiler from '../../layout/categoryImages/sidebar/broiler.svg'\r\nimport chick_flesh from '../../layout/categoryImages/sidebar/chick_flesh.svg'\r\nimport fowl from '../../layout/categoryImages/sidebar/fowl.svg'\r\nimport grey_goose from '../../layout/categoryImages/sidebar/grey_goose.svg'\r\nimport laying_chick from '../../layout/categoryImages/sidebar/laying_chick.svg'\r\nimport mallard_duck from '../../layout/categoryImages/sidebar/mallard-duck_dribbble_4x.png'\r\nimport ornamental_duck from '../../layout/categoryImages/sidebar/ornamental_duck.jpg'\r\nimport pigeons from '../../layout/categoryImages/sidebar/pigeon.svg'\r\nimport quail from '../../layout/categoryImages/sidebar/quail.svg'\r\nimport rooster from '../../layout/categoryImages/sidebar/rooster.svg'\r\nimport runner_duck from '../../layout/categoryImages/sidebar/runner_duck.jpg'\r\nimport turkey from '../../layout/categoryImages/sidebar/turkey.svg'\r\nimport white_goose from '../../layout/categoryImages/sidebar/white_goose.svg'\r\n\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: theme.spacing(3),\r\n        color: theme.palette.grey[800],\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: '1.6rem!important',\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n}\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            // Purple and green play nicely together.#4CAF50\r\n            main: '#e91e63',\r\n            fontSize: '1.6rem'\r\n        },\r\n        secondary: {\r\n            // This is green.A700 as hex.\r\n            main: '#dc004e',\r\n        },\r\n        third: {\r\n            main: '#F50057',\r\n        },\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    moot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '1.6rem!important',\r\n        float: 'right',\r\n        '&:hover ': {\r\n            backgroundColor: '#424242'\r\n        }\r\n    },\r\n    paper: {\r\n        fontSize: '1.6rem!important', \r\n    }\r\n}));\r\n\r\n\r\nexport default function Poultry({ match }) {\r\n\r\n    const poultryCategories = [\r\n        {\r\n            title: 'laying chick',\r\n            icon: laying_chick,\r\n            alt: 'laying chick'\r\n        },\r\n        {\r\n            title: 'chick flesh',\r\n            icon: chick_flesh,\r\n            alt: 'chick flesh'\r\n        },\r\n        {\r\n            title: 'laying hens',\r\n            icon: laying_hens,\r\n            alt: 'laying hens'\r\n        },\r\n        {\r\n            \"title\": \"broiler chickens\",\r\n            \"icon\": broiler,\r\n            \"atl\": \"EyCVOYElP\"\r\n        },\r\n        {\r\n            \"title\": \"rooster\",\r\n            \"icon\": rooster,\r\n            \"atl\": \"XgcabxkzflU\"\r\n        },\r\n        {\r\n            \"title\": \"mullard duck - barbarian\",\r\n            \"icon\": mallard_duck,\r\n            \"atl\": \"tkTOAnrTpGM\"\r\n        },\r\n        {\r\n            \"title\": \"runner duck\",\r\n            \"icon\": runner_duck,\r\n            \"atl\": \"nnFiNyv\"\r\n        },\r\n        {\r\n            \"title\": \"ornamental duck\",\r\n            \"icon\": ornamental_duck,\r\n            \"atl\": \"nnFiNyv\"\r\n        },\r\n        {\r\n            \"title\": \"white goose\",\r\n            \"icon\": white_goose,\r\n            \"atl\": \"nnFiNyv\"\r\n        },\r\n        {\r\n            \"title\": \"grey goose\",\r\n            \"icon\": grey_goose,\r\n            \"atl\": \"nnFiNyv\"\r\n        },\r\n        {\r\n            \"title\": \"quail\",\r\n            \"icon\": quail,\r\n            \"atl\": \"nnFiNyv\"\r\n        },\r\n        {\r\n            \"title\": \"chapon\",\r\n            \"icon\": broiler,\r\n            \"atl\": \"nnFiNyv\"\r\n        },\r\n        {\r\n            \"title\": \"bronze turkey\",\r\n            \"icon\": turkey,\r\n            \"atl\": \"nnFiNyv\"\r\n        },\r\n        {\r\n            \"title\": \"pigeons\",\r\n            \"icon\": pigeons,\r\n            \"atl\": \"nnFiNyv\"\r\n        },\r\n        {\r\n            \"title\": \"guinea fowl\",\r\n            \"icon\": fowl,\r\n            \"atl\": \"nnFiNyv\"\r\n        }\r\n    ]\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categoryFilter, setCategoryFilter] = useState();\r\n    let app = document.getElementById('root');\r\n    useEffect(() => {\r\n        app.clientWidth < 700 ? setCategoryFilter(true) : setCategoryFilter(false);\r\n    }, [categoryFilter, setCategoryFilter, app.clientWidth])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 450])\r\n    const [size, setSize] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    console.log('THE FILTER IS: ' + name)\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProductsCategory(keyword, currentPage, price, name, rating, size, color));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, name, rating, size, color])\r\n\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n\r\n\r\n    const [grid, setGrid] = useState(true);\r\n    const [list, setList] = useState();\r\n\r\n    const handleGrid = () => {\r\n        setGrid(prevState => prevState = true)\r\n        setList(prevState => prevState = false)\r\n    }\r\n    const handleList = () => {\r\n        setGrid(prevState => prevState = false)\r\n        setList(prevState => prevState = true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // const reducedArray = array.reduce((acc, curr) => `${acc}${curr.lat},${curr.lon}|`, '')\r\n\r\n\r\n\r\n    const productSize = [\r\n        '2 KG',\r\n        '0 KG',\r\n    ]\r\n\r\n    // const names = [\r\n    //     \"laying chick\",\r\n    //     \"chick flesh\",\r\n    //     \"Laying Hens\",\r\n    //     \"broiler chickens\",\r\n    //     \"rooster\",\r\n    //     \"mullard duck - barbarian\",\r\n    //     \"runner duck\",\r\n    //     \"ornamental duck\",\r\n    //     \"white goose\",\r\n    //     \"grey goose\",\r\n    //     \"quail\",\r\n    //     \"chapon\",\r\n    //     \"bronze turkey\",\r\n    //     \"pigeons\",\r\n    //     \"guinea fowl\",\r\n    // ]\r\n\r\n    // const productColor = [\r\n    //     'Grey',\r\n    //     'White',\r\n    //     'Bronze',\r\n    //     'Maroon',\r\n    //     'Blue',\r\n    //     'Black',\r\n    //     'Yellow'\r\n    // ]\r\n\r\n\r\n    const handleClearFilter = () => {\r\n        setName('');\r\n        setSize('');\r\n        setRating(0);\r\n       \r\n    }\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen)\r\n    }\r\n\r\n    const sidedrawer = (\r\n        <div>\r\n            <List>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Price\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box>\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </Box>\r\n                </ListItem>\r\n                <br />\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Category\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflowY: 'scroll', height: 200}}>\r\n                        {poultryCategories.map((item, index) => {\r\n                            return (\r\n                                <ListItem key={index}  style={{padding: '0', cursor: 'pointer'}} className=\"shop_sidebar__item\">\r\n                                    <Stack direction='row' spacing={2} onClick={() => {setName(item.title); handleDrawerToggle()}}>\r\n                                        <Avatar\r\n                                            alt={item.atl}\r\n                                            src={item.icon}\r\n                                            className=\"avatar_img_sidebar\"\r\n                                        />\r\n                                        <ListItemText primary={item.title} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                    </Stack>\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Size\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        {productSize.map((size, index) => {\r\n                            return (\r\n                                <ListItem key={index} onClick={() => {setSize(size); handleDrawerToggle()}} style={{cursor: 'pointer'}}>\r\n                                    <ListItemText primary={size} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Rating\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }} >\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star}>\r\n                                    <div className=\"rating-outer\" onClick={() => {setRating(star); handleDrawerToggle()}}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </Box>\r\n                </ListItem>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    // SIDEBAR\r\n    const Sidebar = () => {\r\n        return (\r\n            <aside  className={`category_list ${window.innerWidth < 700 ? ' isNull' : ''}`} id=\"filter_shop\">\r\n                <section className=\"filterByPrice mgt\">\r\n                    <h2 style={{ marginBottom: \"2.5rem\" }}>filter by price</h2>\r\n                    <div className=\"filterRange\">\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbycategory mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by category</h2>\r\n                    <div id=\"category-list-wrapper\">\r\n                        {Categories.map(category => (\r\n                            <div className=\"category-item\" key={category.atl} onClick={() => setName(category.title)}>\r\n                                <img\r\n                                    className=\"category-icon\"\r\n                                    src={category.icon}\r\n                                    alt={category.atl}\r\n                                />\r\n\r\n                                <p className=\"ctg-name\">{category.title}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbysize mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by size</h2>\r\n                    <div id=\"category-size-wrapper\">\r\n                        {productSize.map((size, key) => (\r\n                            <div className=\"size-item\" key={key}>\r\n                                <p onClick={() => setSize(size)}>{size}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbyrating mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by rating</h2>\r\n                    <div id=\"category-rating-wrapper\">\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => setRating(star)}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n\r\n    const Breadcrumb = () => {\r\n        return (\r\n            <div className=\"breadcrumb\" >\r\n                <div className=\"crumb\">\r\n                    <div className=\"back-to-farm\">\r\n                        <Link to=\"/\">\r\n                            <img src={backToFarm} alt=\"back to farm icon\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"crumb-wrap\">\r\n                        <Crumb navigationA=\"/\" nameA=\"farm\" nameB=\"Poultry\" />\r\n                    </div>\r\n                    {\r\n                       window.innerWidth < 700 ? \r\n                      null\r\n\r\n                       :\r\n\r\n                       (\r\n                        name || size || rating ?\r\n                        (\r\n                            <>\r\n                                <div className=\"userFilter\" id=\"remove_filter\">\r\n                                <StyledBreadcrumb\r\n                                                    component=\"a\"\r\n                                                    label=\"filter\"\r\n                                                    icon={<FilterAltIcon />}\r\n                                                    onClick={handleClick}\r\n                                                />\r\n                                    <div className=\"remove_filter\" >\r\n                                        <span><i>{name}</i></span>\r\n                                        <span><i>{size}</i></span>\r\n                                        <span><i> {rating ? `rating: ${rating}` : ''}</i></span>\r\n\r\n                                        <ThemeProvider theme={theme}>\r\n                                            <Buttone\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button + ' clear_filter'}\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={handleClearFilter}\r\n                                            >\r\n                                                Clear filter\r\n                                            </Buttone>\r\n                                        </ThemeProvider>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n\r\n                            </>\r\n                        )\r\n                       )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"products-view\">\r\n                    <div id=\"gridView\" >\r\n                        <HiViewGrid className={grid ? 'active_grid' : 'not-active'} onClick={handleGrid} />\r\n                    </div>\r\n                    <div id=\"listView\" >\r\n                        <FaListUl className={list ? 'active_list' : 'not-active'} onClick={handleList} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const Filter = () => {\r\n        return (\r\n           <div id=\"category__filter\" style={{margin: '2rem 2rem'}}>\r\n               {\r\n                   name || size || rating ?\r\n                   (\r\n                    <ThemeProvider theme={theme}>\r\n                        <Buttone\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button + ' clear_filter'}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleClearFilter}\r\n                        >\r\n                            Clear filter\r\n                        </Buttone>\r\n                    </ThemeProvider>\r\n                   )\r\n                   :\r\n                   null\r\n               }\r\n                <Button onClick={handleDrawerToggle} className={classes.button} variant=\"contained\" color=\"success\">\r\n                filters\r\n            </Button>\r\n           </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"category-page\">\r\n            <MetaData title='Poultry' />\r\n            {mobileOpen && <SideBarFielter drawerContent={sidedrawer} mobileView={mobileOpen} drawerToggle={handleDrawerToggle} />}\r\n            <div id=\"poultry_banner\" />\r\n            <div className={` poultry ${window.innerWidth < 700 ? 'cat_fielter' : '' } `}>\r\n                { window.innerWidth < 700 ?\r\n                        null\r\n                    :\r\n                    <div className='filter_category' id=\"filter_shop_desktop\">\r\n                        <Sidebar />\r\n                    </div>\r\n                }\r\n               \r\n                <div className=\"main_products\">\r\n                    <Breadcrumb />\r\n                    {window.innerWidth < 700 ? <Filter /> :  null}\r\n                    { window.innerWidth < 700 ? \r\n                        (\r\n                            name || size || rating ?\r\n                            (\r\n                                <>\r\n                                    <div className=\"userFilter\" id=\"remove_filter\" >\r\n                                        {\r\n                                            window.innerWidth <= 420 ?\r\n                                            (\r\n                                                <>\r\n                                                    <Accordion elevation={4}>\r\n                                                        <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon />}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <StyledBreadcrumb\r\n                                                                component=\"a\"\r\n                                                                label=\"filter\"\r\n                                                                icon={<FilterAltIcon />}\r\n                                                                onClick={handleClick}\r\n                                                            />\r\n                                                        </AccordionSummary>\r\n                                                        <AccordionDetails>\r\n                                                        {name ? <Typography>{name}</Typography> : null}\r\n                                                        {size ? <Typography>{size}</Typography> : null}\r\n                                                        {rating ? <Typography>{`rating: ${rating}`}</Typography> : null}\r\n                                                        </AccordionDetails>\r\n                                                    </Accordion>\r\n                                                </>\r\n                                            )\r\n                                            :\r\n                                            <Paper elevation={3} style={{paddingLeft: '1.5rem'}}>\r\n                                                <FilterCt  \r\n                                                    nameA=\"filter\" \r\n                                                    nameB={name}\r\n                                                    nameC={size}\r\n                                                    nameD={rating ? `rating: ${rating}` : ''} \r\n                                                />\r\n                                            </Paper>\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                            :\r\n                            (\r\n                                <>\r\n\r\n                                </>\r\n                            )\r\n                        )\r\n                        :\r\n                        null\r\n                    }\r\n                    \r\n\r\n                    <div className=\"poultry_products\">\r\n                        <div className={grid ? \"row producstWrapper\" : \"col listMode\"}>\r\n\r\n                            {\r\n                                grid ?\r\n                                    (\r\n                                        products.map((poultryItem) => (\r\n                                            // <ProductList key={poultryItem._id} product={poultryItem} col={4} />\r\n\r\n                                            <div className=\"product farmStyle\" key={poultryItem._id}>\r\n                                                <div className=\"img-container\">\r\n                                                    <img src={poultryItem.images[0].url} alt={poultryItem.name} />\r\n                                                    <div className=\"addCart\">\r\n                                                        <i className=\"fas fa-shopping-cart\"></i>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"side-icons\">\r\n                                                        <span><i className=\"fas fa-search\"></i></span>\r\n                                                        <span><i className=\"far fa-heart\"></i></span>\r\n                                                        <span><i className=\"fas fa-sliders-h\"></i></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"bottom\">\r\n                                                    <h6 className=\"product_title\"><Link to={`/product/${poultryItem._id}`}>{poultryItem.name}</Link></h6>\r\n                                                    <div className=\"price\">\r\n                                                        <span>${poultryItem.price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    )\r\n\r\n                                    :\r\n\r\n                                    (\r\n                                        products.map((poultryItem) => (\r\n                                            <ProductList key={poultryItem._id} product={poultryItem} col={4} />\r\n                                        ))\r\n                                    )\r\n\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5 paginationWrapper\">\r\n                            <Paginatione\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={products.length}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n\r\n                        </div>\r\n                    )}\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Eggs.js",["778","779"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../../layout/mCustomscrollbar.css'\r\nimport './category_responsive.css'\r\nimport Crumb from './breadcrumb/Breadcrumb'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../../layout/MetaData'\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Buttone from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport Box from '@mui/material/Box';\r\nimport SideBarFielter from './sidebar/Sidebar'\r\n\r\nimport FilterCt from './breadcrumb/Filter';\r\nimport Paper from '@mui/material/Paper';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport Paginatione from 'react-js-pagination'\r\nimport { Range } from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProductsCategory } from '../../../actions/productActions'\r\nimport '../../../styles/Locataire.css'\r\n\r\nimport ProductList from '../../product/ProductList';\r\nimport backToFarm from '../../../images/category/forwardslash.svg'\r\nimport { HiViewGrid } from 'react-icons/hi'\r\nimport { FaListUl } from 'react-icons/fa'\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: theme.spacing(3),\r\n        color: theme.palette.grey[800],\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: '1.6rem!important',\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n}\r\n\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            // Purple and green play nicely together.#4CAF50\r\n            main: '#e91e63',\r\n            fontSize: '1.6rem'\r\n        },\r\n        secondary: {\r\n            // This is green.A700 as hex.\r\n            main: '#dc004e',\r\n        },\r\n        third: {\r\n            main: '#F50057',\r\n        },\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    moot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '1.6rem!important',\r\n        float: 'right',\r\n        '&:hover ': {\r\n            backgroundColor: '#424242'\r\n        }\r\n    },\r\n    paper: {\r\n        fontSize: '1.6rem!important', \r\n    }\r\n}));\r\n\r\n\r\nexport default function Eggs({ match }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categoryFilter, setCategoryFilter] = useState();\r\n    let app = document.getElementById('root');\r\n    useEffect(() => {\r\n        app.clientWidth < 700 ? setCategoryFilter(true) : setCategoryFilter(false);\r\n    }, [categoryFilter, setCategoryFilter, app.clientWidth])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 450])\r\n    const [size, setSize] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    console.log('THE FILTER IS: ' + name)\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProductsCategory(keyword, currentPage, price, name, rating, size, color));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, name, rating, size, color])\r\n\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n\r\n\r\n    const [grid, setGrid] = useState(true);\r\n    const [list, setList] = useState();\r\n\r\n    const handleGrid = () => {\r\n        setGrid(prevState => prevState = true)\r\n        setList(prevState => prevState = false)\r\n    }\r\n    const handleList = () => {\r\n        setGrid(prevState => prevState = false)\r\n        setList(prevState => prevState = true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // const reducedArray = array.reduce((acc, curr) => `${acc}${curr.lat},${curr.lon}|`, '')\r\n\r\n\r\n\r\n    const productSize = [\r\n        'Medium',\r\n        'Large',\r\n    ]\r\n\r\n    const names = [\r\n        \"12 CHICKEN EGG WHITES\",\r\n        \"12 HEN EGGS MARON\",\r\n        \"24 CHICKEN EGGS\",\r\n        \"30 CHICKEN EGGS\",\r\n        \"30 CHICKEN EGGS\",\r\n        \"12 QUAIL EGGS\",\r\n        \"12 DUCK EGGS\"\r\n    ]\r\n\r\n    // const productColor = [\r\n    //     'Grey',\r\n    //     'White',\r\n    //     'Bronze',\r\n    //     'Maroon',\r\n    //     'Blue',\r\n    //     'Black',\r\n    //     'Yellow'\r\n    // ]\r\n\r\n\r\n    const handleClearFilter = () => {\r\n        setName('');\r\n        setSize('');\r\n        setRating(0);\r\n    }\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen)\r\n    }\r\n\r\n    const sidedrawer = (\r\n        <div>\r\n            <List>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Price\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box>\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </Box>\r\n                </ListItem>\r\n                <br />\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Category\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflowY: 'scroll', height: 200}}>\r\n                        {names.map((name, index) => {\r\n                            return (\r\n                                <ListItem key={index} style={{padding: '0', cursor: 'pointer'}} className=\"shop_sidebar__item\" onClick={() => {setName(name); handleDrawerToggle()}}>\r\n                                    <ListItemText primary={name} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Size\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        {productSize.map((size, index) => {\r\n                            return (\r\n                                <ListItem key={index} onClick={() => setSize(size)} style={{cursor: 'pointer'}}>\r\n                                    <ListItemText primary={size} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Rating\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => {setRating(star); handleDrawerToggle()}}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </Box>\r\n                </ListItem>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    // SIDEBAR\r\n    const Sidebar = () => {\r\n        return (\r\n            <aside  className={`category_list ${window.innerWidth < 700 ? ' isNull' : ''}`} id=\"filter_shop\">\r\n                <section className=\"filterByPrice mgt\">\r\n                    <h2 style={{ marginBottom: \"2.5rem\" }}>filter by price</h2>\r\n                    <div className=\"filterRange\">\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbycategory mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by category</h2>\r\n                    <div id=\"category-list-wrapper\">\r\n                        {names.map(name => (\r\n                            <div className=\"category-item\" key={name} onClick={() => setName(name)}>\r\n                                {/* <img\r\n                                    className=\"category-icon\"\r\n                                    src={name.icon}\r\n                                    alt={name.atl}\r\n                                /> */}\r\n                                {name}\r\n                                {/* <p onClick={() => setName(name)} className=\"ctg-name\">{</p> */}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbysize mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by size</h2>\r\n                    <div id=\"category-size-wrapper\">\r\n                        {productSize.map((size, key) => (\r\n                            <div className=\"size-item\" key={key}>\r\n                                <p onClick={() => setSize(size)}>{size}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbyrating mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by rating</h2>\r\n                    <div id=\"category-rating-wrapper\">\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => setRating(star)}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n\r\n    const Breadcrumb = () => {\r\n        return (\r\n            <div className=\"breadcrumb\">\r\n                <div className=\"crumb\">\r\n                    <div className=\"back-to-farm\">\r\n                        <Link to=\"/\">\r\n                            <img src={backToFarm} alt=\"back to farm icon\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"crumb-wrap\">\r\n                        <Crumb navigationA=\"/\" nameA=\"farm\" nameB=\"Fresh Eggs\" />\r\n                    </div>\r\n                    {\r\n                       window.innerWidth < 700 ? \r\n                      null\r\n\r\n                       :\r\n\r\n                       (\r\n                        name || size || rating ?\r\n                        (\r\n                            <>\r\n                                <div className=\"userFilter\" id=\"remove_filter\">\r\n                                <StyledBreadcrumb\r\n                                                    component=\"a\"\r\n                                                    label=\"filter\"\r\n                                                    icon={<FilterAltIcon />}\r\n                                                    onClick={handleClick}\r\n                                                />\r\n                                    <div className=\"remove_filter\" >\r\n                                        <span><i>{name}</i></span>\r\n                                        <span><i>{size}</i></span>\r\n                                        <span><i> {rating ? `rating: ${rating}` : ''}</i></span>\r\n\r\n                                        <ThemeProvider theme={theme}>\r\n                                            <Buttone\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button + ' clear_filter'}\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={handleClearFilter}\r\n                                            >\r\n                                                Clear filter\r\n                                            </Buttone>\r\n                                        </ThemeProvider>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n\r\n                            </>\r\n                        )\r\n                       )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"products-view\">\r\n                    <div id=\"gridView\" >\r\n                        <HiViewGrid className={grid ? 'active_grid' : 'not-active'} onClick={handleGrid} />\r\n                    </div>\r\n                    <div id=\"listView\" >\r\n                        <FaListUl className={list ? 'active_list' : 'not-active'} onClick={handleList} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const Filter = () => {\r\n        return (\r\n           <div id=\"category__filter\" style={{margin: '2rem 2rem'}}>\r\n               {\r\n                   name || size || rating ?\r\n                   (\r\n                    <ThemeProvider theme={theme}>\r\n                        <Buttone\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button + ' clear_filter'}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleClearFilter}\r\n                        >\r\n                            Clear filter\r\n                        </Buttone>\r\n                    </ThemeProvider>\r\n                   )\r\n                   :\r\n                   null\r\n               }\r\n                <Button onClick={handleDrawerToggle} className={classes.button} variant=\"contained\" color=\"success\">\r\n                filters\r\n            </Button>\r\n           </div>\r\n        )\r\n    }\r\n\r\n \r\n\r\n\r\n\r\n    return (\r\n        <div id=\"category-page\">\r\n            <MetaData title={'Fresh Eggs'} />\r\n            {mobileOpen && <SideBarFielter drawerContent={sidedrawer} mobileView={mobileOpen} drawerToggle={handleDrawerToggle} />}\r\n            <div id=\"poultry_banner\" />\r\n            <div className={` poultry ${window.innerWidth < 700 ? 'cat_fielter' : '' } `}>\r\n            { window.innerWidth < 700 ?\r\n                        null\r\n                    :\r\n                    <div className='filter_category' id=\"filter_shop_desktop\">\r\n                        <Sidebar />\r\n                    </div>\r\n                }\r\n               \r\n                <div className=\"main_products\">\r\n                    <Breadcrumb />\r\n                    {window.innerWidth < 700 ? <Filter /> :  null}\r\n                    { window.innerWidth < 700 ? \r\n                        (\r\n                            name || size || rating ?\r\n                            (\r\n                                <>\r\n                                    <div className=\"userFilter\" id=\"remove_filter\">\r\n                                        {\r\n                                            window.innerWidth <= 420 ?\r\n                                            (\r\n                                                <>\r\n                                                    <Accordion elevation={4}>\r\n                                                        <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon />}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <StyledBreadcrumb\r\n                                                                component=\"a\"\r\n                                                                label=\"filter\"\r\n                                                                icon={<FilterAltIcon />}\r\n                                                                onClick={handleClick}\r\n                                                            />\r\n                                                        </AccordionSummary>\r\n                                                        <AccordionDetails>\r\n                                                        {name ? <Typography>{name}</Typography> : null}\r\n                                                        {size ? <Typography>{size}</Typography> : null}\r\n                                                        {rating ? <Typography>{`rating: ${rating}`}</Typography> : null}\r\n                                                        </AccordionDetails>\r\n                                                    </Accordion>\r\n                                                </>\r\n                                            )\r\n                                            :\r\n                                            <Paper elevation={3} style={{paddingLeft: '1.5rem'}}>\r\n                                                <FilterCt  \r\n                                                    nameA=\"filter\" \r\n                                                    nameB={name}\r\n                                                    nameC={size}\r\n                                                    nameD={rating ? `rating: ${rating}` : ''} \r\n                                                />\r\n                                            </Paper>\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                            :\r\n                            (\r\n                                <>\r\n\r\n                                </>\r\n                            )\r\n                        )\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    <div className=\"poultry_products\">\r\n                        <div className={grid ? \"row producstWrapper\" : \"col listMode\"}>\r\n                            {console.log(\"NAME:\" + name)}\r\n\r\n                            {\r\n                                grid ?\r\n                                    (\r\n                                        products.map((eggProduct) => (\r\n                                            // <ProductList key={eggProduct._id} product={eggProduct} col={4} />\r\n\r\n                                            <div className=\"product farmStyle\" key={eggProduct._id}>\r\n                                                <div className=\"img-container\">\r\n                                                    <img src={eggProduct.images[0].url} alt={eggProduct.name} />\r\n                                                    <div className=\"addCart\">\r\n                                                        <i className=\"fas fa-shopping-cart\"></i>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"side-icons\">\r\n                                                        <span><i className=\"fas fa-search\"></i></span>\r\n                                                        <span><i className=\"far fa-heart\"></i></span>\r\n                                                        <span><i className=\"fas fa-sliders-h\"></i></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"bottom\">\r\n                                                    <h6 className=\"product_title\"><Link to={`/product/${eggProduct._id}`}>{eggProduct.name}</Link></h6>\r\n                                                    <div className=\"price\">\r\n                                                        <span>${eggProduct.price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    )\r\n\r\n                                    :\r\n\r\n                                    (\r\n                                        products.map((eggProduct) => (\r\n                                            <ProductList key={eggProduct._id} product={eggProduct} col={4} />\r\n                                        ))\r\n                                    )\r\n\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5 paginationWrapper\">\r\n                            <Paginatione\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={products.length}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Pigsty.js",["780","781"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../../layout/mCustomscrollbar.css'\r\nimport './category_responsive.css'\r\n\r\nimport Crumb from './breadcrumb/Breadcrumb'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../../layout/MetaData'\r\n\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Buttone from '@material-ui/core/Button';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport FilterCt from './breadcrumb/Filter';\r\nimport Paper from '@mui/material/Paper';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n\r\nimport Paginatione from 'react-js-pagination'\r\nimport { Range } from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProductsCategory } from '../../../actions/productActions'\r\nimport '../../../styles/Locataire.css'\r\n\r\nimport ProductList from '../../product/ProductList';\r\nimport backToFarm from '../../../images/category/forwardslash.svg'\r\nimport { HiViewGrid } from 'react-icons/hi'\r\nimport { FaListUl } from 'react-icons/fa'\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport Divider from '@mui/material/Divider';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport SideBarFielter from './sidebar/Sidebar'\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: theme.spacing(3),\r\n        color: theme.palette.grey[800],\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: '1.6rem!important',\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n}\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            // Purple and green play nicely together.#4CAF50\r\n            main: '#e91e63',\r\n            fontSize: '1.6rem'\r\n        },\r\n        secondary: {\r\n            // This is green.A700 as hex.\r\n            main: '#dc004e',\r\n        },\r\n        third: {\r\n            main: '#F50057',\r\n        },\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    moot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '1.6rem!important',\r\n        float: 'right',\r\n        '&:hover ': {\r\n            backgroundColor: '#424242'\r\n        }\r\n    },\r\n    paper: {\r\n        fontSize: '1.6rem!important', \r\n    }\r\n}));\r\n\r\n\r\nexport default function Pigsty({ match }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categoryFilter, setCategoryFilter] = useState();\r\n    let app = document.getElementById('root');\r\n    useEffect(() => {\r\n        app.clientWidth < 700 ? setCategoryFilter(true) : setCategoryFilter(false);\r\n    }, [categoryFilter, setCategoryFilter, app.clientWidth])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 450])\r\n    const [size, setSize] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    console.log('THE FILTER IS: ' + name)\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProductsCategory(keyword, currentPage, price, name, rating, size, color));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, name, rating, size, color])\r\n\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n\r\n\r\n    const [grid, setGrid] = useState(true);\r\n    const [list, setList] = useState();\r\n\r\n    const handleGrid = () => {\r\n        setGrid(prevState => prevState = true)\r\n        setList(prevState => prevState = false)\r\n    }\r\n    const handleList = () => {\r\n        setGrid(prevState => prevState = false)\r\n        setList(prevState => prevState = true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // const reducedArray = array.reduce((acc, curr) => `${acc}${curr.lat},${curr.lon}|`, '')\r\n\r\n\r\n\r\n    const productSize = [\r\n        'verrat',\r\n        'trout',\r\n    ]\r\n\r\n    const names = [\r\n        \"Landrace\",\r\n        \"Large white\",\r\n        \"Duroc\",\r\n        \"Pietrain\",\r\n        \"chester\",\r\n        \"crus\",\r\n    ]\r\n\r\n    // const productColor = [\r\n    //     'Grey',\r\n    //     'White',\r\n    //     'Bronze',\r\n    //     'Maroon',\r\n    //     'Blue',\r\n    //     'Black',\r\n    //     'Yellow'\r\n    // ]\r\n\r\n\r\n    const handleClearFilter = () => {\r\n        setName('');\r\n        setSize('');\r\n        setRating(0);\r\n    }\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen)\r\n    }\r\n\r\n    const sidedrawer = (\r\n        <div>\r\n            <List>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Price\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box>\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </Box>\r\n                </ListItem>\r\n                <br />\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Category\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflowY: 'scroll', height: 200}}>\r\n                        {names.map((name, index) => {\r\n                            return (\r\n                                <ListItem key={index} style={{padding: '0', cursor: 'pointer'}} className=\"shop_sidebar__item\" onClick={() => {setName(name); handleDrawerToggle()}}>\r\n                                    <ListItemText primary={name} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Size\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        {productSize.map((size, index) => {\r\n                            return (\r\n                                <ListItem key={index} onClick={() => {setSize(size); handleDrawerToggle()}} style={{cursor: 'pointer'}}>\r\n                                    <ListItemText primary={size} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Rating\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => {setRating(star); handleDrawerToggle()}}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </Box>\r\n                </ListItem>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    // SIDEBAR\r\n    const Sidebar = () => {\r\n        return (\r\n            <aside className={`category_list ${window.innerWidth < 700 ? ' isNull' : ''}`} id=\"filter_shop\">\r\n                <section className=\"filterByPrice mgt\">\r\n                    <h2 style={{ marginBottom: \"2.5rem\" }}>filter by price</h2>\r\n                    <div className=\"filterRange\">\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbycategory mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by category</h2>\r\n                    <div id=\"category-list-wrapper\">\r\n                        {names.map(name => (\r\n                            <div className=\"category-item\" key={name} onClick={() => setName(name)}>\r\n                                {/* <img\r\n                                    className=\"category-icon\"\r\n                                    src={name.icon}\r\n                                    alt={name.atl}\r\n                                /> */}\r\n                                {name}\r\n                                {/* <p onClick={() => setName(name)} className=\"ctg-name\">{</p> */}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbysize mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by size</h2>\r\n                    <div id=\"category-size-wrapper\">\r\n                        {productSize.map((size, key) => (\r\n                            <div className=\"size-item\" key={key}>\r\n                                <p onClick={() => setSize(size)}>{size}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbyrating mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by rating</h2>\r\n                    <div id=\"category-rating-wrapper\">\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => setRating(star)}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n\r\n    const Breadcrumb = () => {\r\n        return (\r\n            <div className=\"breadcrumb\">\r\n                <div className=\"crumb\">\r\n                    <div className=\"back-to-farm\">\r\n                        <Link to=\"/\">\r\n                            <img src={backToFarm} alt=\"back to farm icon\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"crumb-wrap\">\r\n                        <Crumb navigationA=\"/\" nameA=\"farm\" nameB=\"Pigsty\" />\r\n                    </div>\r\n                    {\r\n                       window.innerWidth < 700 ? \r\n                      null\r\n\r\n                       :\r\n\r\n                       (\r\n                        name || size || rating ?\r\n                        (\r\n                            <>\r\n                                <div className=\"userFilter\" id=\"remove_filter\">\r\n                                <StyledBreadcrumb\r\n                                                    component=\"a\"\r\n                                                    label=\"filter\"\r\n                                                    icon={<FilterAltIcon />}\r\n                                                    onClick={handleClick}\r\n                                                />\r\n                                    <div className=\"remove_filter\" >\r\n                                        <span><i>{name}</i></span>\r\n                                        <span><i>{size}</i></span>\r\n                                        <span><i> {rating ? `rating: ${rating}` : ''}</i></span>\r\n\r\n                                        <ThemeProvider theme={theme}>\r\n                                            <Buttone\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button + ' clear_filter'}\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={handleClearFilter}\r\n                                            >\r\n                                                Clear filter\r\n                                            </Buttone>\r\n                                        </ThemeProvider>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n\r\n                            </>\r\n                        )\r\n                       )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"products-view\">\r\n                    <div id=\"gridView\" >\r\n                        <HiViewGrid className={grid ? 'active_grid' : 'not-active'} onClick={handleGrid} />\r\n                    </div>\r\n                    <div id=\"listView\" >\r\n                        <FaListUl className={list ? 'active_list' : 'not-active'} onClick={handleList} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    const Filter = () => {\r\n        return (\r\n           <div id=\"category__filter\" style={{margin: '2rem 2rem'}}>\r\n               {\r\n                   name || size || rating ?\r\n                   (\r\n                    <ThemeProvider theme={theme}>\r\n                        <Buttone\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button + ' clear_filter'}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleClearFilter}\r\n                        >\r\n                            Clear filter\r\n                        </Buttone>\r\n                    </ThemeProvider>\r\n                   )\r\n                   :\r\n                   null\r\n               }\r\n                <Button onClick={handleDrawerToggle} className={classes.button} variant=\"contained\" color=\"success\">\r\n                filters\r\n            </Button>\r\n           </div>\r\n        )\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div  id=\"category-page\">\r\n            <MetaData title={'Pigsty'} />\r\n            {mobileOpen && <SideBarFielter drawerContent={sidedrawer} mobileView={mobileOpen} drawerToggle={handleDrawerToggle} />}\r\n            <div id=\"poultry_banner\" />\r\n            <div  className={` poultry ${window.innerWidth < 700 ? 'cat_fielter' : '' } `}>\r\n            { window.innerWidth < 700 ?\r\n                        null\r\n                    :\r\n                    <div className='filter_category' id=\"filter_shop_desktop\">\r\n                        <Sidebar />\r\n                    </div>\r\n                }\r\n                <div className=\"main_products\">\r\n                    <Breadcrumb />\r\n                    {window.innerWidth < 700 ? <Filter /> :  null}\r\n                    { window.innerWidth < 700 ? \r\n                        (\r\n                            name || size || rating ?\r\n                            (\r\n                                <>\r\n                                    <div className=\"userFilter\" id=\"remove_filter\">\r\n                                        {\r\n                                            window.innerWidth <= 420 ?\r\n                                            (\r\n                                                <>\r\n                                                    <Accordion elevation={4}>\r\n                                                        <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon />}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <StyledBreadcrumb\r\n                                                                component=\"a\"\r\n                                                                label=\"filter\"\r\n                                                                icon={<FilterAltIcon />}\r\n                                                                onClick={handleClick}\r\n                                                            />\r\n                                                        </AccordionSummary>\r\n                                                        <AccordionDetails>\r\n                                                        {name ? <Typography>{name}</Typography> : null}\r\n                                                        {size ? <Typography>{size}</Typography> : null}\r\n                                                        {rating ? <Typography>{`rating: ${rating}`}</Typography> : null}\r\n                                                        </AccordionDetails>\r\n                                                    </Accordion>\r\n                                                </>\r\n                                            )\r\n                                            :\r\n                                            <Paper elevation={3} style={{paddingLeft: '1.5rem'}}>\r\n                                                <FilterCt  \r\n                                                    nameA=\"filter\" \r\n                                                    nameB={name}\r\n                                                    nameC={size}\r\n                                                    nameD={rating ? `rating: ${rating}` : ''} \r\n                                                />\r\n                                            </Paper>\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                            :\r\n                            (\r\n                                <>\r\n\r\n                                </>\r\n                            )\r\n                        )\r\n                        :\r\n                        null\r\n                    }\r\n                    <div className=\"poultry_products\">\r\n                        <div className={grid ? \"row producstWrapper\" : \"col listMode\"}>\r\n                            {console.log(\"NAME:\" + name)}\r\n\r\n                            {\r\n                                grid ?\r\n                                    (\r\n                                        products.map((eggProduct) => (\r\n                                            // <ProductList key={eggProduct._id} product={eggProduct} col={4} />\r\n\r\n                                            <div className=\"product farmStyle\" key={eggProduct._id}>\r\n                                                <div className=\"img-container\">\r\n                                                    <img src={eggProduct.images[0].url} alt={eggProduct.name} />\r\n                                                    <div className=\"addCart\">\r\n                                                        <i className=\"fas fa-shopping-cart\"></i>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"side-icons\">\r\n                                                        <span><i className=\"fas fa-search\"></i></span>\r\n                                                        <span><i className=\"far fa-heart\"></i></span>\r\n                                                        <span><i className=\"fas fa-sliders-h\"></i></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"bottom\">\r\n                                                    <h6 className=\"product_title\"><Link to={`/product/${eggProduct._id}`}>{eggProduct.name}</Link></h6>\r\n                                                    <div className=\"price\">\r\n                                                        <span>${eggProduct.price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    )\r\n\r\n                                    :\r\n\r\n                                    (\r\n                                        products.map((eggProduct) => (\r\n                                            <ProductList key={eggProduct._id} product={eggProduct} col={4} />\r\n                                        ))\r\n                                    )\r\n\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5 paginationWrapper\">\r\n                            <Paginatione\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={products.length}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Others.js",["782","783"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../../layout/mCustomscrollbar.css'\r\nimport './category_responsive.css'\r\nimport Crumb from './breadcrumb/Breadcrumb'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../../layout/MetaData'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport SideBarFielter from './sidebar/Sidebar'\r\n\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Buttone from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nimport FilterCt from './breadcrumb/Filter';\r\nimport Paper from '@mui/material/Paper';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n\r\nimport Paginatione from 'react-js-pagination'\r\nimport { Range } from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProductsCategory } from '../../../actions/productActions'\r\nimport '../../../styles/Locataire.css'\r\n\r\nimport ProductList from '../../product/ProductList';\r\nimport backToFarm from '../../../images/category/forwardslash.svg'\r\nimport { HiViewGrid } from 'react-icons/hi'\r\nimport { FaListUl } from 'react-icons/fa'\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: theme.spacing(3),\r\n        color: theme.palette.grey[800],\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: '1.6rem!important',\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n}\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            // Purple and green play nicely together.#4CAF50\r\n            main: '#e91e63',\r\n            fontSize: '1.6rem'\r\n        },\r\n        secondary: {\r\n            // This is green.A700 as hex.\r\n            main: '#dc004e',\r\n        },\r\n        third: {\r\n            main: '#F50057',\r\n        },\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    moot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '1.6rem!important',\r\n        float: 'right',\r\n        '&:hover ': {\r\n            backgroundColor: '#424242'\r\n        }\r\n    },\r\n    paper: {\r\n        fontSize: '1.6rem!important', \r\n    }\r\n}));\r\n\r\n\r\nexport default function Mammals({ match }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categoryFilter, setCategoryFilter] = useState();\r\n    let app = document.getElementById('root');\r\n    useEffect(() => {\r\n        app.clientWidth < 700 ? setCategoryFilter(true) : setCategoryFilter(false);\r\n    }, [categoryFilter, setCategoryFilter, app.clientWidth])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 450])\r\n    const [size, setSize] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    console.log('THE FILTER IS: ' + name)\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProductsCategory(keyword, currentPage, price, name, rating, size, color));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, name, rating, size, color])\r\n\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n\r\n\r\n    const [grid, setGrid] = useState(true);\r\n    const [list, setList] = useState();\r\n\r\n    const handleGrid = () => {\r\n        setGrid(prevState => prevState = true)\r\n        setList(prevState => prevState = false)\r\n    }\r\n    const handleList = () => {\r\n        setGrid(prevState => prevState = false)\r\n        setList(prevState => prevState = true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // const reducedArray = array.reduce((acc, curr) => `${acc}${curr.lat},${curr.lon}|`, '')\r\n\r\n\r\n\r\n    const productSize = [\r\n        'verrat',\r\n        'trout',\r\n    ]\r\n\r\n    const names = [\r\n        \"Beef\",\r\n        \"Cow\",\r\n        \"Paon blue\",\r\n        \"Paon nigripenne\"\r\n    ]\r\n\r\n    // const productColor = [\r\n    //     'Grey',\r\n    //     'White',\r\n    //     'Bronze',\r\n    //     'Maroon',\r\n    //     'Blue',\r\n    //     'Black',\r\n    //     'Yellow'\r\n    // ]\r\n\r\n\r\n    const handleClearFilter = () => {\r\n        setName('');\r\n        setRating(0);\r\n        handleDrawerToggle()\r\n    }\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen)\r\n    }\r\n\r\n    const sidedrawer = (\r\n        <div>\r\n            <List>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Price\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box>\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </Box>\r\n                </ListItem>\r\n                <br />\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Category\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflowY: 'scroll', height: 200}}>\r\n                        {names.map((name, index) => {\r\n                            return (\r\n                                <ListItem key={index} style={{padding: '0', cursor: 'pointer'}} className=\"shop_sidebar__item\" onClick={() => {setName(name); handleDrawerToggle()}}>\r\n                                    <ListItemText primary={name} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Size\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        {productSize.map((size, index) => {\r\n                            return (\r\n                                <ListItem key={index} onClick={() => {setSize(size); handleDrawerToggle()}} style={{cursor: 'pointer'}}>\r\n                                    <ListItemText primary={size} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Rating\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => {setRating(star); handleDrawerToggle()}}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </Box>\r\n                </ListItem>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    // SIDEBAR\r\n    const Sidebar = () => {\r\n        return (\r\n            <aside className={`category_list ${window.innerWidth < 700 ? ' isNull' : ''}`} id=\"filter_shop\">\r\n                <section className=\"filterByPrice mgt\" style={{ display: 'none' }}>\r\n                    <h2 style={{ marginBottom: \"2.5rem\" }}>filter by price</h2>\r\n                    <div className=\"filterRange\">\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbycategory mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by category</h2>\r\n                    <div id=\"category-list-wrapper\">\r\n                        {names.map(name => (\r\n                            <div className=\"category-item\" key={name} onClick={() => setName(name)}>\r\n                                {/* <img\r\n                                    className=\"category-icon\"\r\n                                    src={name.icon}\r\n                                    alt={name.atl}\r\n                                /> */}\r\n                                {name}\r\n                                {/* <p onClick={() => setName(name)} className=\"ctg-name\">{</p> */}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"filterbyrating mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by rating</h2>\r\n                    <div id=\"category-rating-wrapper\">\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => setRating(star)}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n\r\n    const Breadcrumb = () => {\r\n        return (\r\n            <div className=\"breadcrumb\">\r\n                <div className=\"crumb\">\r\n                    <div className=\"back-to-farm\">\r\n                        <Link to=\"/\">\r\n                            <img src={backToFarm} alt=\"back to farm icon\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"crumb-wrap\">\r\n                        <Crumb navigationA=\"/\" nameA=\"farm\" nameB=\"Park Animals\" />\r\n                    </div>\r\n                    {\r\n                       window.innerWidth < 700 ? \r\n                      null\r\n\r\n                       :\r\n\r\n                       (\r\n                        name || size || rating ?\r\n                        (\r\n                            <>\r\n                                <div className=\"userFilter\" id=\"remove_filter\">\r\n                                <StyledBreadcrumb\r\n                                                    component=\"a\"\r\n                                                    label=\"filter\"\r\n                                                    icon={<FilterAltIcon />}\r\n                                                    onClick={handleClick}\r\n                                                />\r\n                                    <div className=\"remove_filter\" >\r\n                                        <span><i>{name}</i></span>\r\n                                        <span><i>{size}</i></span>\r\n                                        <span><i> {rating ? `rating: ${rating}` : ''}</i></span>\r\n\r\n                                        <ThemeProvider theme={theme}>\r\n                                            <Buttone\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button + ' clear_filter'}\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={handleClearFilter}\r\n                                            >\r\n                                                Clear filter\r\n                                            </Buttone>\r\n                                        </ThemeProvider>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n\r\n                            </>\r\n                        )\r\n                       )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"products-view\">\r\n                    <div id=\"gridView\" >\r\n                        <HiViewGrid className={grid ? 'active_grid' : 'not-active'} onClick={handleGrid} />\r\n                    </div>\r\n                    <div id=\"listView\" >\r\n                        <FaListUl className={list ? 'active_list' : 'not-active'} onClick={handleList} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const Filter = () => {\r\n        return (\r\n           <div id=\"category__filter\" style={{margin: '2rem 2rem'}}>\r\n               {\r\n                   name || size || rating ?\r\n                   (\r\n                    <ThemeProvider theme={theme}>\r\n                        <Buttone\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button + ' clear_filter'}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleClearFilter}\r\n                        >\r\n                            Clear filter\r\n                        </Buttone>\r\n                    </ThemeProvider>\r\n                   )\r\n                   :\r\n                   null\r\n               }\r\n                <Button onClick={handleDrawerToggle} className={classes.button} variant=\"contained\" color=\"success\">\r\n                filters\r\n            </Button>\r\n           </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"category-page\">\r\n            <MetaData title={'Park'} />\r\n            {mobileOpen && <SideBarFielter drawerContent={sidedrawer} mobileView={mobileOpen} drawerToggle={handleDrawerToggle} />}\r\n            <div id=\"poultry_banner\" />\r\n            <div className={` poultry ${window.innerWidth < 700 ? 'cat_fielter' : '' } `}>\r\n            { window.innerWidth < 700 ?\r\n                        null\r\n                    :\r\n                    <div className='filter_category' id=\"filter_shop_desktop\">\r\n                        <Sidebar />\r\n                    </div>\r\n                }\r\n                <div className=\"main_products\">\r\n                    <Breadcrumb />\r\n                    {window.innerWidth < 700 ? <Filter /> :  null}\r\n                    { window.innerWidth < 700 ? \r\n                        (\r\n                            name || size || rating ?\r\n                            (\r\n                                <>\r\n                                    <div className=\"userFilter\" id=\"remove_filter\">\r\n                                        {\r\n                                            window.innerWidth <= 420 ?\r\n                                            (\r\n                                                <>\r\n                                                    <Accordion elevation={4}>\r\n                                                        <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon />}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <StyledBreadcrumb\r\n                                                                component=\"a\"\r\n                                                                label=\"filter\"\r\n                                                                icon={<FilterAltIcon />}\r\n                                                                onClick={handleClick}\r\n                                                            />\r\n                                                        </AccordionSummary>\r\n                                                        <AccordionDetails>\r\n                                                        {name ? <Typography>{name}</Typography> : null}\r\n                                                        {size ? <Typography>{size}</Typography> : null}\r\n                                                        {rating ? <Typography>{`rating: ${rating}`}</Typography> : null}\r\n                                                        </AccordionDetails>\r\n                                                    </Accordion>\r\n                                                </>\r\n                                            )\r\n                                            :\r\n                                            <Paper elevation={3} style={{paddingLeft: '1.5rem'}}>\r\n                                                <FilterCt  \r\n                                                    nameA=\"filter\" \r\n                                                    nameB={name}\r\n                                                    nameC={size}\r\n                                                    nameD={rating ? `rating: ${rating}` : ''} \r\n                                                />\r\n                                            </Paper>\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                            :\r\n                            (\r\n                                <>\r\n\r\n                                </>\r\n                            )\r\n                        )\r\n                        :\r\n                        null\r\n                    }\r\n                    <div className=\"poultry_products\">\r\n                        <div className={grid ? \"row producstWrapper\" : \"col listMode\"}>\r\n                            {console.log(\"NAME:\" + name)}\r\n\r\n                            {\r\n                                grid ?\r\n                                    (\r\n                                        products.map((eggProduct) => (\r\n                                            // <ProductList key={eggProduct._id} product={eggProduct} col={4} />\r\n\r\n                                            <div className=\"product farmStyle\" key={eggProduct._id}>\r\n                                                <div className=\"img-container\">\r\n                                                    <img src={eggProduct.images[0].url} alt={eggProduct.name} />\r\n                                                    <div className=\"addCart\">\r\n                                                        <i className=\"fas fa-shopping-cart\"></i>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"side-icons\">\r\n                                                        <span><i className=\"fas fa-search\"></i></span>\r\n                                                        <span><i className=\"far fa-heart\"></i></span>\r\n                                                        <span><i className=\"fas fa-sliders-h\"></i></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"bottom\">\r\n                                                    <h6 className=\"product_title\"><Link to={`/product/${eggProduct._id}`}>{eggProduct.name}</Link></h6>\r\n                                                    <div className=\"price\">\r\n                                                        <span>${eggProduct.price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    )\r\n\r\n                                    :\r\n\r\n                                    (\r\n                                        products.map((eggProduct) => (\r\n                                            <ProductList key={eggProduct._id} product={eggProduct} col={4} />\r\n                                        ))\r\n                                    )\r\n\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5 paginationWrapper\">\r\n                            <Paginatione\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={products.length}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Purebred.js",["784","785"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../../layout/mCustomscrollbar.css'\r\nimport './category_responsive.css'\r\nimport Crumb from './breadcrumb/Breadcrumb'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../../layout/MetaData'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport Divider from '@mui/material/Divider';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport SideBarFielter from './sidebar/Sidebar'\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nimport FilterCt from './breadcrumb/Filter';\r\nimport Paper from '@mui/material/Paper';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Buttone from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Paginatione from 'react-js-pagination'\r\nimport { Range } from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProductsCategory } from '../../../actions/productActions'\r\nimport '../../../styles/Locataire.css'\r\n\r\nimport ProductList from '../../product/ProductList';\r\nimport backToFarm from '../../../images/category/forwardslash.svg'\r\nimport { HiViewGrid } from 'react-icons/hi'\r\nimport { FaListUl } from 'react-icons/fa'\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: theme.spacing(3),\r\n        color: theme.palette.grey[800],\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: '1.6rem!important',\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n}\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            // Purple and green play nicely together.#4CAF50\r\n            main: '#e91e63',\r\n            fontSize: '1.6rem'\r\n        },\r\n        secondary: {\r\n            // This is green.A700 as hex.\r\n            main: '#dc004e',\r\n        },\r\n        third: {\r\n            main: '#F50057',\r\n        },\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    moot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '1.6rem!important',\r\n        float: 'right',\r\n        '&:hover ': {\r\n            backgroundColor: '#424242'\r\n        }\r\n    },\r\n    paper: {\r\n        fontSize: '1.6rem!important', \r\n    }\r\n}));\r\n\r\n\r\nexport default function Purebred({ match }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categoryFilter, setCategoryFilter] = useState();\r\n    let app = document.getElementById('root');\r\n    useEffect(() => {\r\n        app.clientWidth < 700 ? setCategoryFilter(true) : setCategoryFilter(false);\r\n    }, [categoryFilter, setCategoryFilter, app.clientWidth])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 450])\r\n    const [size, setSize] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    console.log('THE FILTER IS: ' + name)\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProductsCategory(keyword, currentPage, price, name, rating, size, color));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, name, rating, size, color])\r\n\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n\r\n\r\n    const [grid, setGrid] = useState(true);\r\n    const [list, setList] = useState();\r\n\r\n    const handleGrid = () => {\r\n        setGrid(prevState => prevState = true)\r\n        setList(prevState => prevState = false)\r\n    }\r\n    const handleList = () => {\r\n        setGrid(prevState => prevState = false)\r\n        setList(prevState => prevState = true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // const reducedArray = array.reduce((acc, curr) => `${acc}${curr.lat},${curr.lon}|`, '')\r\n\r\n\r\n\r\n    const productSize = [\r\n        '1 dose'\r\n    ]\r\n\r\n    const names = [\r\n        \"Fress pig seed\",\r\n        \"Frozen swine seed\",\r\n        \"Sheep seed\",\r\n        \"Maron cattle seed\",\r\n        \"Black cattle seed\",\r\n        \"White livestock seed\",\r\n        \"Crossbred cattle seed\"\r\n    ]\r\n\r\n    // const productColor = [\r\n    //     'Grey',\r\n    //     'White',\r\n    //     'Bronze',\r\n    //     'Maroon',\r\n    //     'Blue',\r\n    //     'Black',\r\n    //     'Yellow'\r\n    // ]\r\n\r\n\r\n    const handleClearFilter = () => {\r\n        setName('');\r\n        setSize('');\r\n        setRating(0);\r\n    }\r\n\r\n\r\n    // SIDEBAR\r\n    const Sidebar = () => {\r\n        return (\r\n            <aside className={`category_list ${window.innerWidth < 700 ? ' isNull' : ''}`} id=\"filter_shop\">\r\n                <section className=\"filterByPrice mgt\">\r\n                    <h2 style={{ marginBottom: \"2.5rem\" }}>filter by price</h2>\r\n                    <div className=\"filterRange\">\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbycategory mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by category</h2>\r\n                    <div id=\"category-list-wrapper\">\r\n                        {names.map(name => (\r\n                            <div className=\"category-item\" key={name} onClick={() => setName(name)}>\r\n                                {/* <img\r\n                                    className=\"category-icon\"\r\n                                    src={name.icon}\r\n                                    alt={name.atl}\r\n                                /> */}\r\n                                {name}\r\n                                {/* <p onClick={() => setName(name)} className=\"ctg-name\">{</p> */}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbysize mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by size</h2>\r\n                    <div id=\"category-size-wrapper\">\r\n                        {productSize.map((size, key) => (\r\n                            <div className=\"size-item\" key={key}>\r\n                                <p onClick={() => setSize(size)}>{size}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbyrating mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by rating</h2>\r\n                    <div id=\"category-rating-wrapper\">\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => setRating(star)}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n\r\n    const Breadcrumb = () => {\r\n        return (\r\n            <div className=\"breadcrumb\">\r\n                <div className=\"crumb\">\r\n                    <div className=\"back-to-farm\">\r\n                        <Link to=\"/\">\r\n                            <img src={backToFarm} alt=\"back to farm icon\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"crumb-wrap\">\r\n                        <Crumb navigationA=\"/\" nameA=\"farm\" nameB=\"Purebred\" />\r\n                    </div>\r\n                    {\r\n                       window.innerWidth < 700 ? \r\n                      null\r\n\r\n                       :\r\n\r\n                       (\r\n                        name || size || rating ?\r\n                        (\r\n                            <>\r\n                                <div className=\"userFilter\" id=\"remove_filter\">\r\n                                <StyledBreadcrumb\r\n                                                    component=\"a\"\r\n                                                    label=\"filter\"\r\n                                                    icon={<FilterAltIcon />}\r\n                                                    onClick={handleClick}\r\n                                                />\r\n                                    <div className=\"remove_filter\" >\r\n                                        <span><i>{name}</i></span>\r\n                                        <span><i>{size}</i></span>\r\n                                        <span><i> {rating ? `rating: ${rating}` : ''}</i></span>\r\n\r\n                                        <ThemeProvider theme={theme}>\r\n                                            <Buttone\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button + ' clear_filter'}\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={handleClearFilter}\r\n                                            >\r\n                                                Clear filter\r\n                                            </Buttone>\r\n                                        </ThemeProvider>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n\r\n                            </>\r\n                        )\r\n                       )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"products-view\">\r\n                    <div id=\"gridView\" >\r\n                        <HiViewGrid className={grid ? 'active_grid' : 'not-active'} onClick={handleGrid} />\r\n                    </div>\r\n                    <div id=\"listView\" >\r\n                        <FaListUl className={list ? 'active_list' : 'not-active'} onClick={handleList} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen)\r\n    }\r\n\r\n    const sidedrawer = (\r\n        <div>\r\n            <List>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Price\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box>\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </Box>\r\n                </ListItem>\r\n                <br />\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Category\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflowY: 'scroll', height: 200}}>\r\n                        {names.map((name, index) => {\r\n                            return (\r\n                                <ListItem key={index} style={{padding: '0', cursor: 'pointer'}} className=\"shop_sidebar__item\" onClick={() => {setName(name); handleDrawerToggle()}}>\r\n                                    <ListItemText primary={name} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Size\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        {productSize.map((size, index) => {\r\n                            return (\r\n                                <ListItem key={index} onClick={() => {setSize(size); handleDrawerToggle()}} style={{cursor: 'pointer'}}>\r\n                                    <ListItemText primary={size} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Rating\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => {setRating(star); handleDrawerToggle()}}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </Box>\r\n                </ListItem>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const Filter = () => {\r\n        return (\r\n           <div id=\"category__filter\" style={{margin: '2rem 2rem'}}>\r\n               {\r\n                   name || size || rating ?\r\n                   (\r\n                    <ThemeProvider theme={theme}>\r\n                        <Buttone\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button + ' clear_filter'}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleClearFilter}\r\n                        >\r\n                            Clear filter\r\n                        </Buttone>\r\n                    </ThemeProvider>\r\n                   )\r\n                   :\r\n                   null\r\n               }\r\n                <Button onClick={handleDrawerToggle} className={classes.button} variant=\"contained\" color=\"success\">\r\n                filters\r\n            </Button>\r\n           </div>\r\n        )\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <div id=\"category-page\">\r\n            <MetaData title={'Purebred SEED : ARTIFICIAL INSEMINATION'} />\r\n            {mobileOpen && <SideBarFielter drawerContent={sidedrawer} mobileView={mobileOpen} drawerToggle={handleDrawerToggle} />}\r\n            <div id=\"poultry_banner\" />\r\n            <div className={` poultry ${window.innerWidth < 700 ? 'cat_fielter' : '' } `}>\r\n            { window.innerWidth < 700 ?\r\n                        null\r\n                    :\r\n                    <div className='filter_category' id=\"filter_shop_desktop\">\r\n                        <Sidebar />\r\n                    </div>\r\n                }\r\n                <div className=\"main_products\">\r\n                    <Breadcrumb />\r\n                    {window.innerWidth < 700 ? <Filter /> :  null}\r\n                    { window.innerWidth < 700 ? \r\n                        (\r\n                            name || size || rating ?\r\n                            (\r\n                                <>\r\n                                    <div className=\"userFilter\" id=\"remove_filter\">\r\n                                        {\r\n                                            window.innerWidth <= 420 ?\r\n                                            (\r\n                                                <>\r\n                                                    <Accordion elevation={4}>\r\n                                                        <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon />}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <StyledBreadcrumb\r\n                                                                component=\"a\"\r\n                                                                label=\"filter\"\r\n                                                                icon={<FilterAltIcon />}\r\n                                                                onClick={handleClick}\r\n                                                            />\r\n                                                        </AccordionSummary>\r\n                                                        <AccordionDetails>\r\n                                                        {name ? <Typography>{name}</Typography> : null}\r\n                                                        {size ? <Typography>{size}</Typography> : null}\r\n                                                        {rating ? <Typography>{`rating: ${rating}`}</Typography> : null}\r\n                                                        </AccordionDetails>\r\n                                                    </Accordion>\r\n                                                </>\r\n                                            )\r\n                                            :\r\n                                            <Paper elevation={3} style={{paddingLeft: '1.5rem'}}>\r\n                                                <FilterCt  \r\n                                                    nameA=\"filter\" \r\n                                                    nameB={name}\r\n                                                    nameC={size}\r\n                                                    nameD={rating ? `rating: ${rating}` : ''} \r\n                                                />\r\n                                            </Paper>\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                            :\r\n                            (\r\n                                <>\r\n\r\n                                </>\r\n                            )\r\n                        )\r\n                        :\r\n                        null\r\n                    }\r\n                    <div className=\"poultry_products\">\r\n                        <div className={grid ? \"row producstWrapper\" : \"col listMode\"}>\r\n\r\n                            {\r\n                                grid ?\r\n                                    (\r\n                                        products.map((poultryItem) => (\r\n                                            // <ProductList key={poultryItem._id} product={poultryItem} col={4} />\r\n\r\n                                            <div className=\"product farmStyle\" key={poultryItem._id}>\r\n                                                <div className=\"img-container\">\r\n                                                    <img src={poultryItem.images[0].url} alt={poultryItem.name} />\r\n                                                    <div className=\"addCart\">\r\n                                                        <i className=\"fas fa-shopping-cart\"></i>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"side-icons\">\r\n                                                        <span><i className=\"fas fa-search\"></i></span>\r\n                                                        <span><i className=\"far fa-heart\"></i></span>\r\n                                                        <span><i className=\"fas fa-sliders-h\"></i></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"bottom\">\r\n                                                    <h6 className=\"product_title\"><Link to={`/product/${poultryItem._id}`}>{poultryItem.name}</Link></h6>\r\n                                                    <div className=\"price\">\r\n                                                        <span>${poultryItem.price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    )\r\n\r\n                                    :\r\n\r\n                                    (\r\n                                        products.map((poultryItem) => (\r\n                                            <ProductList key={poultryItem._id} product={poultryItem} col={4} />\r\n                                        ))\r\n                                    )\r\n\r\n                            }\r\n\r\n                        </div>\r\n                        <br />\r\n\r\n\r\n                    </div>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5 paginationWrapper\">\r\n                            <Paginatione\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={products.length}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\Mammals.js",["786","787","788","789"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../../layout/mCustomscrollbar.css'\r\nimport './category_responsive.css'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport SideBarFielter from './sidebar/Sidebar'\r\n\r\nimport Crumb from './breadcrumb/Breadcrumb'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../../layout/MetaData'\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nimport FilterCt from './breadcrumb/Filter';\r\nimport Paper from '@mui/material/Paper';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Buttone from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Paginatione from 'react-js-pagination'\r\nimport { Range } from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProductsCategory } from '../../../actions/productActions'\r\nimport '../../../styles/Locataire.css'\r\n\r\nimport ProductList from '../../product/ProductList';\r\nimport backToFarm from '../../../images/category/forwardslash.svg'\r\nimport { HiViewGrid } from 'react-icons/hi'\r\nimport { FaListUl } from 'react-icons/fa'\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: theme.spacing(3),\r\n        color: theme.palette.grey[800],\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: '1.6rem!important',\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n}\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            // Purple and green play nicely together.#4CAF50\r\n            main: '#e91e63',\r\n            fontSize: '1.6rem'\r\n        },\r\n        secondary: {\r\n            // This is green.A700 as hex.\r\n            main: '#dc004e',\r\n        },\r\n        third: {\r\n            main: '#F50057',\r\n        },\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    moot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '1.6rem!important',\r\n        float: 'right',\r\n        '&:hover ': {\r\n            backgroundColor: '#424242'\r\n        }\r\n    },\r\n    paper: {\r\n        fontSize: '1.6rem!important', \r\n    }\r\n}));\r\n\r\nexport default function Mammals({ match }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categoryFilter, setCategoryFilter] = useState();\r\n    let app = document.getElementById('root');\r\n    useEffect(() => {\r\n        app.clientWidth < 700 ? setCategoryFilter(true) : setCategoryFilter(false);\r\n    }, [categoryFilter, setCategoryFilter, app.clientWidth])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 450])\r\n    const [size, setSize] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    console.log('THE FILTER IS: ' + name)\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProductsCategory(keyword, currentPage, price, name, rating, size, color));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, name, rating, size, color])\r\n\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n\r\n\r\n    const [grid, setGrid] = useState(true);\r\n    const [list, setList] = useState();\r\n\r\n    const handleGrid = () => {\r\n        setGrid(prevState => prevState = true)\r\n        setList(prevState => prevState = false)\r\n    }\r\n    const handleList = () => {\r\n        setGrid(prevState => prevState = false)\r\n        setList(prevState => prevState = true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // const reducedArray = array.reduce((acc, curr) => `${acc}${curr.lat},${curr.lon}|`, '')\r\n\r\n\r\n\r\n    const productSize = [\r\n        'verrat',\r\n        'trout',\r\n    ]\r\n\r\n    const names = [\r\n        \"sahel goat\",\r\n        \"dwarf goat\",\r\n        \"cameroon sheep\",\r\n        \"caprins sahel goat\",\r\n        \"ovins caprins\",\r\n        \"sheep touabir\",\r\n        \"sheep targui\",\r\n        \"maradi's goat\",\r\n        \"White Rabbit\",\r\n        \"blue rabbit from vienna\",\r\n        \"belgian hare rabbit\"\r\n    ]\r\n\r\n    // const productColor = [\r\n    //     'Grey',\r\n    //     'White',\r\n    //     'Bronze',\r\n    //     'Maroon',\r\n    //     'Blue',\r\n    //     'Black',\r\n    //     'Yellow'\r\n    // ]\r\n\r\n\r\n    const handleClearFilter = () => {\r\n        setName('');\r\n        setRating(0);\r\n    }\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen)\r\n    }\r\n\r\n    const sidedrawer = (\r\n        <div>\r\n            <List>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Price\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box>\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </Box>\r\n                </ListItem>\r\n                <br />\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Category\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflowY: 'scroll', height: 200}}>\r\n                        {names.map((name, index) => {\r\n                            return (\r\n                                <ListItem key={index} style={{padding: '0', cursor: 'pointer'}} className=\"shop_sidebar__item\" onClick={() => {setName(name); handleDrawerToggle()}}>\r\n                                    <ListItemText primary={name} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n               \r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Rating\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => {setRating(star); handleDrawerToggle()}}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </Box>\r\n                </ListItem>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    // SIDEBAR\r\n    const Sidebar = () => {\r\n        return (\r\n            <aside  className={`category_list ${window.innerWidth < 700 ? ' isNull' : ''}`} id=\"filter_shop\">\r\n                <section className=\"filterByPrice mgt\">\r\n                    <h2 style={{ marginBottom: \"2.5rem\" }}>filter by price</h2>\r\n                    <div className=\"filterRange\">\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbycategory mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by category</h2>\r\n                    <div id=\"category-list-wrapper\">\r\n                        {names.map(name => (\r\n                            <div className=\"category-item\" key={name} onClick={() => setName(name)}>\r\n                                {/* <img\r\n                                    className=\"category-icon\"\r\n                                    src={name.icon}\r\n                                    alt={name.atl}\r\n                                /> */}\r\n                                {name}\r\n                                {/* <p onClick={() => setName(name)} className=\"ctg-name\">{</p> */}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"filterbyrating mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by rating</h2>\r\n                    <div id=\"category-rating-wrapper\">\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => setRating(star)}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n\r\n    const Breadcrumb = () => {\r\n        return (\r\n            <div className=\"breadcrumb\">\r\n                <div className=\"crumb\">\r\n                    <div className=\"back-to-farm\">\r\n                        <Link to=\"/\">\r\n                            <img src={backToFarm} alt=\"back to farm icon\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"crumb-wrap\">\r\n                        <Crumb navigationA=\"/\" nameA=\"farm\" nameB=\"Mammals\" />\r\n                    </div>\r\n                    {\r\n                       window.innerWidth < 700 ? \r\n                      null\r\n\r\n                       :\r\n\r\n                       (\r\n                        name || size || rating ?\r\n                        (\r\n                            <>\r\n                                <div className=\"userFilter\" id=\"remove_filter\">\r\n                                <StyledBreadcrumb\r\n                                                    component=\"a\"\r\n                                                    label=\"filter\"\r\n                                                    icon={<FilterAltIcon />}\r\n                                                    onClick={handleClick}\r\n                                                />\r\n                                    <div className=\"remove_filter\" >\r\n                                        <span><i>{name}</i></span>\r\n                                        <span><i>{size}</i></span>\r\n                                        <span><i> {rating ? `rating: ${rating}` : ''}</i></span>\r\n\r\n                                        <ThemeProvider theme={theme}>\r\n                                            <Buttone\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button + ' clear_filter'}\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={handleClearFilter}\r\n                                            >\r\n                                                Clear filter\r\n                                            </Buttone>\r\n                                        </ThemeProvider>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n\r\n                            </>\r\n                        )\r\n                       )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"products-view\">\r\n                    <div id=\"gridView\" >\r\n                        <HiViewGrid className={grid ? 'active_grid' : 'not-active'} onClick={handleGrid} />\r\n                    </div>\r\n                    <div id=\"listView\" >\r\n                        <FaListUl className={list ? 'active_list' : 'not-active'} onClick={handleList} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const Filter = () => {\r\n        return (\r\n           <div id=\"category__filter\" style={{margin: '2rem 2rem'}}>\r\n               {\r\n                   name || size || rating ?\r\n                   (\r\n                    <ThemeProvider theme={theme}>\r\n                        <Buttone\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button + ' clear_filter'}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleClearFilter}\r\n                        >\r\n                            Clear filter\r\n                        </Buttone>\r\n                    </ThemeProvider>\r\n                   )\r\n                   :\r\n                   null\r\n               }\r\n                <Button onClick={handleDrawerToggle} className={classes.button} variant=\"contained\" color=\"success\">\r\n                filters\r\n            </Button>\r\n           </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div id=\"category-page\">\r\n            <MetaData title={'Mammals'} />\r\n            {mobileOpen && <SideBarFielter drawerContent={sidedrawer} mobileView={mobileOpen} drawerToggle={handleDrawerToggle} />}\r\n            <div id=\"poultry_banner\" />\r\n            <div className={` poultry ${window.innerWidth < 700 ? 'cat_fielter' : '' } `}>\r\n            { window.innerWidth < 700 ?\r\n                        null\r\n                    :\r\n                    <div className='filter_category' id=\"filter_shop_desktop\">\r\n                        <Sidebar />\r\n                    </div>\r\n                }\r\n                <div className=\"main_products\">\r\n                    <Breadcrumb />\r\n                    {window.innerWidth < 700 ? <Filter /> :  null}\r\n                    { window.innerWidth < 700 ? \r\n                        (\r\n                            name || size || rating ?\r\n                            (\r\n                                <>\r\n                                    <div className=\"userFilter\" id=\"remove_filter\">\r\n                                        {\r\n                                            window.innerWidth <= 420 ?\r\n                                            (\r\n                                                <>\r\n                                                    <Accordion elevation={4}>\r\n                                                        <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon />}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <StyledBreadcrumb\r\n                                                                component=\"a\"\r\n                                                                label=\"filter\"\r\n                                                                icon={<FilterAltIcon />}\r\n                                                                onClick={handleClick}\r\n                                                            />\r\n                                                        </AccordionSummary>\r\n                                                        <AccordionDetails>\r\n                                                        {name ? <Typography>{name}</Typography> : null}\r\n                                                        {size ? <Typography>{size}</Typography> : null}\r\n                                                        {rating ? <Typography>{`rating: ${rating}`}</Typography> : null}\r\n                                                        </AccordionDetails>\r\n                                                    </Accordion>\r\n                                                </>\r\n                                            )\r\n                                            :\r\n                                            <Paper elevation={3} style={{paddingLeft: '1.5rem'}}>\r\n                                                <FilterCt  \r\n                                                    nameA=\"filter\" \r\n                                                    nameB={name}\r\n                                                    nameC={size}\r\n                                                    nameD={rating ? `rating: ${rating}` : ''} \r\n                                                />\r\n                                            </Paper>\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                            :\r\n                            (\r\n                                <>\r\n\r\n                                </>\r\n                            )\r\n                        )\r\n                        :\r\n                        null\r\n                    }\r\n                    <div className=\"poultry_products\">\r\n                        <div className={grid ? \"row producstWrapper\" : \"col listMode\"}>\r\n                            {console.log(\"NAME:\" + name)}\r\n\r\n                            {\r\n                                grid ?\r\n                                    (\r\n                                        products.map((eggProduct) => (\r\n                                            // <ProductList key={eggProduct._id} product={eggProduct} col={4} />\r\n\r\n                                            <div className=\"product farmStyle\" key={eggProduct._id}>\r\n                                                <div className=\"img-container\">\r\n                                                    <img src={eggProduct.images[0].url} alt={eggProduct.name} />\r\n                                                    <div className=\"addCart\">\r\n                                                        <i className=\"fas fa-shopping-cart\"></i>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"side-icons\">\r\n                                                        <span><i className=\"fas fa-search\"></i></span>\r\n                                                        <span><i className=\"far fa-heart\"></i></span>\r\n                                                        <span><i className=\"fas fa-sliders-h\"></i></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"bottom\">\r\n                                                    <h6 className=\"product_title\"><Link to={`/product/${eggProduct._id}`}>{eggProduct.name}</Link></h6>\r\n                                                    <div className=\"price\">\r\n                                                        <span>${eggProduct.price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    )\r\n\r\n                                    :\r\n\r\n                                    (\r\n                                        products.map((eggProduct) => (\r\n                                            <ProductList key={eggProduct._id} product={eggProduct} col={4} />\r\n                                        ))\r\n                                    )\r\n\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5 paginationWrapper\">\r\n                            <Paginatione\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={products.length}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\LivestockFood.js",["790","791"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../../layout/mCustomscrollbar.css'\r\nimport './category_responsive.css'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport Box from '@mui/material/Box';\r\nimport SideBarFielter from './sidebar/Sidebar'\r\n\r\nimport Crumb from './breadcrumb/Breadcrumb'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../../layout/MetaData'\r\n\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Buttone from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nimport FilterCt from './breadcrumb/Filter';\r\nimport Paper from '@mui/material/Paper';\r\nimport { emphasize, withStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport Paginatione from 'react-js-pagination'\r\nimport { Range } from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProductsCategory } from '../../../actions/productActions'\r\nimport '../../../styles/Locataire.css'\r\n\r\nimport ProductList from '../../product/ProductList';\r\nimport backToFarm from '../../../images/category/forwardslash.svg'\r\nimport { HiViewGrid } from 'react-icons/hi'\r\nimport { FaListUl } from 'react-icons/fa'\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: theme.spacing(3),\r\n        color: theme.palette.grey[800],\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: '1.6rem!important',\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n}\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            // Purple and green play nicely together.#4CAF50\r\n            main: '#e91e63',\r\n            fontSize: '1.6rem'\r\n        },\r\n        secondary: {\r\n            // This is green.A700 as hex.\r\n            main: '#dc004e',\r\n        },\r\n        third: {\r\n            main: '#F50057',\r\n        },\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    moot: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '1.6rem!important',\r\n        float: 'right',\r\n        '&:hover ': {\r\n            backgroundColor: '#424242'\r\n        }\r\n    },\r\n    paper: {\r\n        fontSize: '1.6rem!important', \r\n    }\r\n}));\r\n\r\n\r\nexport default function Purebred({ match }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [categoryFilter, setCategoryFilter] = useState();\r\n    let app = document.getElementById('root');\r\n    useEffect(() => {\r\n        app.clientWidth < 700 ? setCategoryFilter(true) : setCategoryFilter(false);\r\n    }, [categoryFilter, setCategoryFilter, app.clientWidth])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 450])\r\n    const [size, setSize] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    console.log('THE FILTER IS: ' + name)\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProductsCategory(keyword, currentPage, price, name, rating, size, color));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, name, rating, size, color])\r\n\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n\r\n\r\n    const [grid, setGrid] = useState(true);\r\n    const [list, setList] = useState();\r\n\r\n    const handleGrid = () => {\r\n        setGrid(prevState => prevState = true)\r\n        setList(prevState => prevState = false)\r\n    }\r\n    const handleList = () => {\r\n        setGrid(prevState => prevState = false)\r\n        setList(prevState => prevState = true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // const reducedArray = array.reduce((acc, curr) => `${acc}${curr.lat},${curr.lon}|`, '')\r\n\r\n\r\n\r\n    const productSize = [\r\n        '1 T'\r\n    ]\r\n\r\n    const names = [\r\n        \"Soybean meal\",\r\n        \"Concentrate flesh\",\r\n        \"Concentrate laying hens\",\r\n        \"Premix laying hens\",\r\n        \"Premix flesh\",\r\n        \"Yellow corn\",\r\n        \"Alveole for 12 eggs\",\r\n        \"Alveole for 30 eggs\",\r\n        \"Alveole for 24 eggs\",\r\n        \"Poultry drinkers\",\r\n        \"Feeders\",\r\n        \"Laying hens batteries\",\r\n        \"Bridge cage\",\r\n        \"Manure\",\r\n    ]\r\n\r\n    // const productColor = [\r\n    //     'Grey',\r\n    //     'White',\r\n    //     'Bronze',\r\n    //     'Maroon',\r\n    //     'Blue',\r\n    //     'Black',\r\n    //     'Yellow'\r\n    // ]\r\n\r\n\r\n    const handleClearFilter = () => {\r\n        setName('');\r\n        setSize('');\r\n        setRating(0);\r\n    }\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen)\r\n    }\r\n\r\n    const sidedrawer = (\r\n        <div>\r\n            <List>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Price\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box>\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </Box>\r\n                </ListItem>\r\n                <br />\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Category\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflowY: 'scroll', height: 200}}>\r\n                        {names.map((name, index) => {\r\n                            return (\r\n                                <ListItem key={index} style={{padding: '0', cursor: 'pointer'}} className=\"shop_sidebar__item\" onClick={() => {setName(name); handleDrawerToggle()}}>\r\n                                    <ListItemText primary={name} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Size\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        {productSize.map((size, index) => {\r\n                            return (\r\n                                <ListItem key={index} onClick={() => {setSize(size); handleDrawerToggle()}} style={{cursor: 'pointer'}}>\r\n                                    <ListItemText primary={size} id=\"list_item_text\" style={{ color: '#ffffff!important' }} />\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </Box>\r\n                </ListItem>\r\n                <Divider style={{ margin: '8px 16px', borderColor: 'rgb(255 255 255 / 12%)' }} className=\"divider_sidebar\">\r\n                    Filter By Rating\r\n                </Divider>\r\n                <ListItem style={{ display: 'block' }}>\r\n                    <Box component=\"div\" sx={{ overflow: 'auto', my: 2 }}>\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => {setRating(star); handleDrawerToggle()}}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </Box>\r\n                </ListItem>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    // SIDEBAR\r\n    const Sidebar = () => {\r\n        return (\r\n            <aside className={`category_list ${window.innerWidth < 700 ? ' isNull' : ''}`} id=\"filter_shop\">\r\n                <section className=\"filterByPrice mgt\">\r\n                    <h2 style={{ marginBottom: \"2.5rem\" }}>filter by price</h2>\r\n                    <div className=\"filterRange\">\r\n                        <Range\r\n                            marks={{\r\n                                1: `$1`,\r\n                                450: `$450`,\r\n                            }}\r\n                            min={1}\r\n                            max={450}\r\n                            defaultValue={[1, 450]}\r\n                            tipFormatter={(value) => `$${value}`}\r\n                            tipProps={{\r\n                                placement: \"top\",\r\n                                visible: true,\r\n                            }}\r\n                            value={price}\r\n                        />\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbycategory mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by category</h2>\r\n                    <div id=\"category-list-wrapper\">\r\n                        {names.map(name => (\r\n                            <div className=\"category-item\" key={name} onClick={() => setName(name)}>\r\n                                {/* <img\r\n                                    className=\"category-icon\"\r\n                                    src={name.icon}\r\n                                    alt={name.atl}\r\n                                /> */}\r\n                                {name}\r\n                                {/* <p onClick={() => setName(name)} className=\"ctg-name\">{</p> */}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbysize mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by size</h2>\r\n                    <div id=\"category-size-wrapper\">\r\n                        {productSize.map((size, key) => (\r\n                            <div className=\"size-item\" key={key}>\r\n                                <p onClick={() => setSize(size)}>{size}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section className=\"filterbyrating mgt\">\r\n                    <h2 style={{ marginBottom: \"1rem\" }}>filter by rating</h2>\r\n                    <div id=\"category-rating-wrapper\">\r\n                        <ul className=\"pl-0\">\r\n                            {[5, 4, 3, 2, 1].map((star) => (\r\n                                <li style={{ cursor: \"pointer\", listStyleType: \"none\", }} key={star} >\r\n                                    <div className=\"rating-outer\" onClick={() => setRating(star)}>\r\n                                        <div className=\"rating-inner\" style={{ width: `${star * 20}%` }} />\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n\r\n    const Breadcrumb = () => {\r\n        return (\r\n            <div className=\"breadcrumb\">\r\n                <div className=\"crumb\">\r\n                    <div className=\"back-to-farm\">\r\n                        <Link to=\"/\">\r\n                            <img src={backToFarm} alt=\"back to farm icon\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"crumb-wrap\">\r\n                        <Crumb navigationA=\"/\" nameA=\"farm\" nameB=\"Food | Livestock\" />\r\n                    </div>\r\n                    {\r\n                       window.innerWidth < 700 ? \r\n                      null\r\n\r\n                       :\r\n\r\n                       (\r\n                        name || size || rating ?\r\n                        (\r\n                            <>\r\n                                <div className=\"userFilter\" id=\"remove_filter\">\r\n                                <StyledBreadcrumb\r\n                                                    component=\"a\"\r\n                                                    label=\"filter\"\r\n                                                    icon={<FilterAltIcon />}\r\n                                                    onClick={handleClick}\r\n                                                />\r\n                                    <div className=\"remove_filter\" >\r\n                                        <span><i>{name}</i></span>\r\n                                        <span><i>{size}</i></span>\r\n                                        <span><i> {rating ? `rating: ${rating}` : ''}</i></span>\r\n\r\n                                        <ThemeProvider theme={theme}>\r\n                                            <Buttone\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button + ' clear_filter'}\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={handleClearFilter}\r\n                                            >\r\n                                                Clear filter\r\n                                            </Buttone>\r\n                                        </ThemeProvider>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <>\r\n\r\n                            </>\r\n                        )\r\n                       )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"products-view\">\r\n                    <div id=\"gridView\" >\r\n                        <HiViewGrid className={grid ? 'active_grid' : 'not-active'} onClick={handleGrid} />\r\n                    </div>\r\n                    <div id=\"listView\" >\r\n                        <FaListUl className={list ? 'active_list' : 'not-active'} onClick={handleList} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const Filter = () => {\r\n        return (\r\n           <div id=\"category__filter\" style={{margin: '2rem 2rem'}}>\r\n               {\r\n                   name || size || rating ?\r\n                   (\r\n                    <ThemeProvider theme={theme}>\r\n                        <Buttone\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button + ' clear_filter'}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleClearFilter}\r\n                        >\r\n                            Clear filter\r\n                        </Buttone>\r\n                    </ThemeProvider>\r\n                   )\r\n                   :\r\n                   null\r\n               }\r\n                <Button onClick={handleDrawerToggle} className={classes.button} variant=\"contained\" color=\"success\">\r\n                filters\r\n            </Button>\r\n           </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div id=\"category-page\">\r\n            <MetaData title={'Food | Livestock'} />\r\n            {mobileOpen && <SideBarFielter drawerContent={sidedrawer} mobileView={mobileOpen} drawerToggle={handleDrawerToggle} />}\r\n            <div id=\"poultry_banner\" />\r\n            <div className={` poultry ${window.innerWidth < 700 ? 'cat_fielter' : '' } `}>\r\n            { window.innerWidth < 700 ?\r\n                        null\r\n                    :\r\n                    <div className='filter_category' id=\"filter_shop_desktop\">\r\n                        <Sidebar />\r\n                    </div>\r\n                }\r\n                <div className=\"main_products\">\r\n                    <Breadcrumb />\r\n                    {window.innerWidth < 700 ? <Filter /> :  null}\r\n                    { window.innerWidth < 700 ? \r\n                        (\r\n                            name || size || rating ?\r\n                            (\r\n                                <>\r\n                                    <div className=\"userFilter\" id=\"remove_filter\">\r\n                                        {\r\n                                            window.innerWidth <= 420 ?\r\n                                            (\r\n                                                <>\r\n                                                    <Accordion elevation={4}>\r\n                                                        <AccordionSummary\r\n                                                        expandIcon={<ExpandMoreIcon />}\r\n                                                        aria-controls=\"panel1a-content\"\r\n                                                        id=\"panel1a-header\"\r\n                                                        >\r\n                                                            <StyledBreadcrumb\r\n                                                                component=\"a\"\r\n                                                                label=\"filter\"\r\n                                                                icon={<FilterAltIcon />}\r\n                                                                onClick={handleClick}\r\n                                                            />\r\n                                                        </AccordionSummary>\r\n                                                        <AccordionDetails>\r\n                                                        {name ? <Typography>{name}</Typography> : null}\r\n                                                        {size ? <Typography>{size}</Typography> : null}\r\n                                                        {rating ? <Typography>{`rating: ${rating}`}</Typography> : null}\r\n                                                        </AccordionDetails>\r\n                                                    </Accordion>\r\n                                                </>\r\n                                            )\r\n                                            :\r\n                                            <Paper elevation={3} style={{paddingLeft: '1.5rem'}}>\r\n                                                <FilterCt  \r\n                                                    nameA=\"filter\" \r\n                                                    nameB={name}\r\n                                                    nameC={size}\r\n                                                    nameD={rating ? `rating: ${rating}` : ''} \r\n                                                />\r\n                                            </Paper>\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                            :\r\n                            (\r\n                                <>\r\n\r\n                                </>\r\n                            )\r\n                        )\r\n                        :\r\n                        null\r\n                    }\r\n                    <div className=\"poultry_products\">\r\n                        <div className={grid ? \"row producstWrapper\" : \"col listMode\"}>\r\n\r\n                            {\r\n                                grid ?\r\n                                    (\r\n                                        products.map((poultryItem) => (\r\n                                            // <ProductList key={poultryItem._id} product={poultryItem} col={4} />\r\n                                            <div className=\"product farmStyle\" key={poultryItem._id}>\r\n                                                {console.log('THE LIVESTOCK:' + poultryItem.name)}\r\n                                                <div className=\"img-container\">\r\n                                                    <img src={poultryItem.images[0].url} alt={poultryItem.name} />\r\n                                                    <div className=\"addCart\">\r\n                                                        <i className=\"fas fa-shopping-cart\"></i>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"side-icons\">\r\n                                                        <span><i className=\"fas fa-search\"></i></span>\r\n                                                        <span><i className=\"far fa-heart\"></i></span>\r\n                                                        <span><i className=\"fas fa-sliders-h\"></i></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"bottom\">\r\n                                                    <h6 className=\"product_title\"><Link to={`/product/${poultryItem._id}`}>{poultryItem.name}</Link></h6>\r\n                                                    <div className=\"price\">\r\n                                                        <span>${poultryItem.price}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    )\r\n\r\n                                    :\r\n\r\n                                    (\r\n                                        products.map((poultryItem) => (\r\n                                            <ProductList key={poultryItem._id} product={poultryItem} col={4} />\r\n                                        ))\r\n                                    )\r\n\r\n                            }\r\n\r\n                        </div>\r\n                        <br />\r\n\r\n                        {resPerPage <= count && (\r\n                            <div className=\"d-flex justify-content-center mt-5 paginationWrapper\">\r\n                                <Paginatione\r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={products.length}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass=\"page-item\"\r\n                                    linkClass=\"page-link\"\r\n                                />\r\n\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\about\\Header.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\about\\Main.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\actions\\productActions.js",["792"],"import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\n//category\nexport const getProductsCategory = (keyword = '', currentPage = 1, price, name, rating = 0, size, color) => async (dispatch) => {\n    let pageTitle = document.title;\n    const livestock = 'Food | Livestock - Locataire';\n    const poultry = 'Poultry - Locataire';\n    const pigsty = 'Pigsty - Locataire';\n    const mammals = 'Mammals - Locataire';\n    const park = 'Park - Locataire';\n    const purebred = 'Purebred SEED : ARTIFICIAL INSEMINATION';\n    const eggs = 'Fresh Eggs - Locataire';\n\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/products?${pageTitle === livestock ? 'category=Livestock' : pageTitle === poultry ? 'category=Poultry' : pageTitle === pigsty ? 'category=Pigsty' : pageTitle === mammals ? 'category=Mammals' : pageTitle === park ? 'category=Park' : pageTitle === purebred ? 'category=Purebred' : pageTitle === eggs ? 'category=Eggs' : null}&keyword=${keyword}&page=${currentPage}${pageTitle === livestock ? '&' : `&price[lte]=${price[1]}&price[gte]=${price[0]}&`}ratings[gte]=${rating}`\n\n        if (name) {\n            link = `/api/v1/products?${pageTitle === livestock ? 'category=Livestock' : pageTitle === poultry ? 'category=Poultry' : pageTitle === pigsty ? 'category=Pigsty' : pageTitle === mammals ? 'category=Mammals' : pageTitle === park ? 'category=Park' : pageTitle === purebred ? 'category=Purebred' : pageTitle === eggs ? 'category=Eggs' : null}&keyword=${keyword}&page=${currentPage}${pageTitle === livestock ? '&' : `&price[lte]=${price[1]}&price[gte]=${price[0]}&`}name=${name}&ratings[gte]=${rating}`\n        }\n\n        if (size) {\n            link = `/api/v1/products?${pageTitle === livestock ? 'category=Livestock' : pageTitle === poultry ? 'category=Poultry' : pageTitle === pigsty ? 'category=Pigsty' : pageTitle === mammals ? 'category=Mammals' : pageTitle === park ? 'category=Park' : pageTitle === purebred ? 'category=Purebred' : pageTitle === eggs ? 'category=Eggs' : null}&keyword=${keyword}&page=${currentPage}${pageTitle === livestock ? '&' : `&price[lte]=${price[1]}&price[gte]=${price[0]}&`}ratings[gte]=${rating}&size=${size}`\n        }\n\n        if (color) {\n            link = `/api/v1/products?${pageTitle === livestock ? 'category=Livestock' : pageTitle === poultry ? 'category=Poultry' : pageTitle === pigsty ? 'category=Pigsty' : pageTitle === mammals ? 'category=Mammals' : pageTitle === park ? 'category=Park' : pageTitle === purebred ? 'category=Purebred' : pageTitle === eggs ? 'category=Eggs' : null}&keyword=${keyword}&page=${currentPage}${pageTitle === livestock ? '&' : `&price[lte]=${price[1]}&price[gte]=${price[0]}&`}ratings[gte]=${rating}&color=${color}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getRandomProducts = (keyword = '', currentPage = 1, price, name, rating = 0, size, color) => async (dispatch) => {\n\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/sales/products`\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProducts = (keyword = '', currentPage = 1, price, name, rating = 0, size, color) => async (dispatch) => {\n\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&ratings[gte]=${rating}`\n\n        if (name) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&category=${name}&ratings[gte]=${rating}`\n        }\n\n        if (size) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&ratings[gte]=${rating}&size=${size}`\n        }\n\n        if (color) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&ratings[gte]=${rating}&color=${color}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Select.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\Realtymb.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\realty_about_layout.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\breadcrumb\\Filter.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\buttonNine.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\ButtonEight.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\main\\Main_Desktop.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\product\\ProductList.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Category\\sidebar\\Sidebar.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\IMG\\MobileC.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\ButtonPrt.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\buttonSix.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\buttonSeven.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\SVG\\Svg.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\SidebarData.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\buttonOne.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\ButtonThree.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\IMG\\MobileB.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\IMG\\Mobile.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\SlickProperty.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\buttons\\Contact_btn.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\Slick.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\Realty\\SlickInvestment.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\sectionIdentifier\\Title.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\sectionIdentifier\\IntroText.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\MobileSideBarFarm.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Drawer.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\Header.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\Context\\OrderContext.js",["793"],"import {createContext, useContext, useState} from 'react'\r\n\r\nexport const orderContext = createContext({\r\n    orders: null\r\n})\r\n\r\nconst ORDER = {order: 3};\r\n\r\nexport function TotalOrder({children}) {\r\n    const [allOrders, setAllOrder ] = useState(ORDER);\r\n    return  <orderContext.Provider value={{allOrders}}>{children}</orderContext.Provider>\r\n}\r\n\r\nexport function useOrderContext() {\r\n    const {orders} = useContext(orderContext);\r\n\r\n    return {orders};\r\n}","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Notification\\Notification.js",["794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813"],"import React, { useEffect, useState, useContext, memo } from 'react'\r\nimport Paper from '@mui/material/Paper';\r\nimport { noCase } from 'change-case';\r\nimport { Icon } from '@iconify/react';\r\nimport { set, sub, formatDistanceToNow } from 'date-fns';\r\nimport { Popover } from '@mui/material';\r\nimport { Chip } from '@mui/material';\r\nimport { OrderContext } from '../../Context/OrderContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { ListItem, ListItemIcon } from '@mui/material'\r\nimport {\r\n    Box,\r\n    List,\r\n    Badge,\r\n    Button,\r\n    Avatar,\r\n    Tooltip,\r\n    Divider,\r\n    IconButton,\r\n    Typography,\r\n    Stack,\r\n    ListItemText,\r\n    ListSubheader,\r\n    ListItemAvatar,\r\n    ListItemButton\r\n} from '@mui/material';\r\nimport bellFill from '@iconify/icons-eva/bell-fill';\r\nimport clockFill from '@iconify/icons-eva/clock-fill';\r\nimport doneAllFill from '@iconify/icons-eva/done-all-fill';\r\nimport './notify.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts } from '../../../../../actions/productActions'\r\nimport { allOrders } from '../../../../../actions/orderActions'\r\nimport { allUsers } from '../../../../../actions/userActions'\r\nimport { Time } from './icons/Notice'\r\n\r\nfunction Notification() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(allOrders())\r\n        dispatch(allUsers())\r\n    }, [dispatch])\r\n\r\n    const { products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.allUsers)\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\r\n\r\n\r\n    // ADD COLORS TO IDENTIFY EACH ORDER TYPE $$\r\n    //  REMOVE BOTTOM AND TOP MARGIN. $$\r\n    // REMOVE FIXED HEIGHT AND WIDTH  $$\r\n    // MAKE IT POP UP\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                '& > :not(style)': {\r\n                    m: 1,\r\n                    mt: 8,\r\n                    width: '40em',\r\n                    height: 'auto',\r\n                },\r\n            }}\r\n            id=\"notification__wrapper\"\r\n        >\r\n            <Paper elevation={3} className=\"notification\">\r\n                {/* NOTIFIC HEADER */}\r\n                <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }} id=\"notification__header\">\r\n                    <Box sx={{ flexGrow: 1 }} >\r\n                        <Typography variant=\"h6\" className=\"__heading\">Notifications</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: '#000000' }} className=\"__msgText\">\r\n                            You have {orders && orders.length} new orders\r\n                        </Typography>\r\n                    </Box>\r\n\r\n\r\n                    <Tooltip title=\" Mark all as read\">\r\n                        <IconButton color=\"primary\" className=\"__iconNotice\">\r\n                            <Icon icon={doneAllFill} width={20} height={20} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Box>\r\n\r\n                <Divider />\r\n\r\n                <Box sx={{ flexGrow: 1 }} id=\"notification__newNotice\">\r\n                    <Typography variant=\"h6\" className=\"__heading\">\r\n                        new\r\n                    </Typography>\r\n\r\n                    <Box className=\"__newNotice\">\r\n                        <List >\r\n                            {orders && orders.map((order, index) => (\r\n                                <>\r\n                                    {order.orderStatus === 'Processing' && \r\n                                    <Link to={`/admin/order/${order._id}`} key={index}>\r\n                                        <ListItem button className=\"__listItem __processing\">\r\n                                            <ListItemIcon>\r\n                                                <IconButton>\r\n                                                    <Avatar\r\n                                                        src='https://minimal-kit-react.vercel.app/static/icons/ic_notification_package.svg'\r\n                                                        alt='new order'\r\n                                                        className=\"__avatar_img\"\r\n                                                    />                                                   \r\n                                                </IconButton>\r\n                                            </ListItemIcon>\r\n                                            <div className=\"__content\">\r\n                                                <>\r\n                                                    <Stack direction='row' spacing={2} sx={{mb: 1.5}} className=\"__content_stack\" >\r\n                                                        <Chip label={order.shippingInfo.name && order.shippingInfo.name} className=\"__orderName\" />\r\n                                                        <Chip  color=\"primary\" label={order.shippingInfo.city && order.shippingInfo.city} className=\"__orderCity\" />                                                       \r\n                                                    </Stack>\r\n                                                    \r\n                                                    <Typography variant=\"h5\" className=\"__noticeTitle\">\r\n                                                        New order placed !! <span>waiting to be process</span>\r\n                                                    </Typography>\r\n                                                    <span className=\"__noticeTime\"><Time />{order.createdAt && order.createdAt}</span>\r\n                                                </>\r\n                                            </div>\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                }\r\n                                </>\r\n                            ))}\r\n                        </List>\r\n                    </Box>\r\n                    \r\n                    <Typography variant=\"h6\" className=\"__heading\">\r\n                        before that\r\n                    </Typography>\r\n\r\n                    <Box className=\"__oldNotice\">\r\n                        <List>\r\n                        {orders && orders.map((order, index) => {\r\n                                return (\r\n                                    <Link to={`/admin/order/${order._id}`} key={index}>\r\n                                        <ListItem button className=\"__listItem __processing\">\r\n                                            <ListItemIcon>\r\n                                                <IconButton>\r\n                                                    {order.orderStatus === 'Delivered' && \r\n                                                        <Avatar\r\n                                                            src='https://minimal-kit-react.vercel.app/static/icons/ic_notification_shipping.svg'\r\n                                                            alt='new order'\r\n                                                            className=\"__avatar_img\"\r\n                                                        />\r\n                                                    }\r\n                                                </IconButton>\r\n                                            </ListItemIcon>\r\n                                            <div className=\"__content\">\r\n                                                {order.orderStatus === 'Delivered' && \r\n                                                    <>\r\n                                                        <Stack direction='row' spacing={2} sx={{mb: 1.5}} className=\"__content_stack\" >\r\n                                                            <Chip label={order.shippingInfo.name && order.shippingInfo.name} className=\"__orderName\" />\r\n                                                            <Chip  color=\"secondary\" label={order.shippingInfo.city && order.shippingInfo.city} className=\"__orderCity\" />                                                       \r\n                                                        </Stack>\r\n                                                        \r\n                                                        <Typography variant=\"h5\" className=\"__noticeTitle\">\r\n                                                            Order was Delivered. <span>no action required</span>\r\n                                                        </Typography>\r\n                                                        <span className=\"__noticeTime\"><Time />{order.createdAt && order.createdAt}</span>\r\n                                                    </>\r\n                                                }\r\n                                            </div>\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </Box>\r\n                </Box>\r\n\r\n\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default memo(Notification)","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme.tsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Category.js",["814","815","816"],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\product\\Topsell.js",["817","818","819","820","821","822","823","824"],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\drawer\\Tab.jsx",["825","826"],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Main.jsx",["827","828","829"],"import React, { memo, useMemo } from 'react'\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Container from '@mui/material/Container';\r\nimport { useSelector } from 'react-redux'\r\nimport './drawer/drawer.css'\r\nimport ProductView from './highlights/view/View'\r\nimport Users from './highlights/view/User'\r\nimport OrderList from './highlights/view/OrderList'\r\nimport Review from './highlights/view/Review'\r\nimport Highlights from './highlights/Highlights.jsx'\r\nimport Order from './order/Order'\r\nimport User from './user/User'\r\nimport OutOfStock from './stock/OutOfStock'\r\n// theme\r\nimport ThemeConfig from '../../../../theme/index';\r\nimport GlobalStyles from '../../../../theme/globalStyles';\r\nimport Amount from './amount/Amount';\r\n\r\n\r\nfunction Main({ drawerWidth, }) {\r\n\r\n  const { user } = useSelector(state => state.auth)\r\n\r\n  return (\r\n    <ThemeConfig>\r\n      <GlobalStyles />\r\n      <Container className=\"admain__main-view\" id=\"admain__main-view\">\r\n        <section className=\"admin__content_item view active\">\r\n          <Box sx={{ pb: 5 }}>\r\n            <Typography variant=\"h4\"  sx={{ fontWeight: 700, lineHeight: 1.5 }} id=\"dashboard__greetings\">Hi <span sx={{ textTransform: 'capitalize' }}>{user && user.name}</span>, Welcome back</Typography>\r\n          </Box>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Highlights />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Order />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <User />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <OutOfStock />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Amount />\r\n        </section>\r\n\r\n        <section  className=\"admin__content_item view\">\r\n          <ProductView />\r\n        </section>\r\n\r\n        <section className=\"admin__content_item view useView\">\r\n          <User />\r\n          <br />\r\n          <Users />\r\n        </section>\r\n\r\n        <section className=\"admin__content_item view useView\">\r\n          <Order />\r\n          <br />\r\n          <OrderList />\r\n        </section>\r\n\r\n        <sectiom className=\"admin__content_item view useView\">\r\n          <Review />\r\n        </sectiom>\r\n      </Container>\r\n    </ThemeConfig>\r\n  )\r\n}\r\n\r\nexport default memo(Main);","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Drawer.jsx",["830"],"import React, { memo } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport {  useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport NewProduct from '../../NewProduct';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport logo from '../../../../images/logoblack.png';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Avatar } from '@material-ui/core';\r\nimport './drawer/drawer.css';\r\nimport { Stack } from '@mui/material';\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport Content from './drawer/Content';\r\n\r\nfunction SideDrawer({ drawerWidth, mobileOpen  }) {\r\n\r\n  const { user } = useSelector(state => state.auth)\r\n\r\n  const handleCloseSideBar = () => {\r\n    const mainDash = document.getElementsByClassName('main_dash')[0]\r\n    const pageContent = document.getElementById('admain__main-view');\r\n    const sidebar = document.getElementById('admin__dashboard')\r\n    pageContent.classList.remove('overflow__on');\r\n    var sidebarItems = document.getElementsByClassName('admin-list_item_wrapper');\r\n    mainDash.classList.remove('main_dash_lay');\r\n    sidebar.classList.remove('dashboard__sidebar_open');\r\n\r\n      for (let i = 0; i < sidebarItems.length; i++) {\r\n        const element = sidebarItems[i];\r\n        element.addEventListener('click', () => {\r\n          mainDash.classList.remove('main_dash_lay');\r\n          pageContent.classList.remove('overflow__on');\r\n          sidebar.classList.remove('dashboard__sidebar_open');\r\n        })\r\n      }\r\n  }\r\n//   useEffect(() => {\r\n//     dispatch(allUsers())\r\n// }, [dispatch])\r\n\r\n  const drawer = (\r\n    <div id=\"drawer__container_content\">\r\n      <Box component=\"div\">\r\n        <Box className='drawer__logo-container'>\r\n          {window.innerWidth <= 899 ? \r\n          <Stack direction=\"row\" justifyContent={'space-between'} >\r\n             <Link to=\"/\">\r\n             <img className='logo' src={logo} alt='logo' />\r\n             </Link>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleCloseSideBar}\r\n              color=\"inherit\"\r\n              \r\n            >\r\n              <CloseIcon className=\"admin__dashboard_menu\" />\r\n            </IconButton>\r\n          </Stack>\r\n          :\r\n          <img className='logo' src={logo} alt='logo' />\r\n          }\r\n\r\n          <Stack direction='row' spacing={3} sx={{padding: '1.6rem 2rem', mt: 4, borderRadius: '1.2rem', backgroundColor: '#f4f6f8'}}>\r\n            <Avatar\r\n              src={user.avatar && user.avatar.url}\r\n              alt={user && user.name}\r\n              className=\"avatar_img_sidebar\"\r\n            />\r\n            <ListItemText primary={user && user.name} id=\"list_item_text-admin\"  />\r\n          </Stack>\r\n        </Box>\r\n\r\n        <Content />\r\n      </Box>\r\n\r\n\r\n      <Box className=\"create_product-container\">\r\n        <Link to='/admin/product'>\r\n                <Button variant=\"contained\"  startIcon={<AddBoxIcon />}>Create Product</Button>\r\n            </Link>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <Box\r\n        component=\"div\"\r\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        aria-label=\"mailbox folders\"\r\n        className=\"dashboard__sidebar\"\r\n        id=\"admin__dashboard\"\r\n      >\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose=''\r\n          className=\"admin_drawer__inner-container\"\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: 'block', sm: 'none' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n            \r\n          }}\r\n         \r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className=\"admin_drawer__inner-container\"\r\n          sx={{\r\n            display: { xs: 'none', sm: 'block' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n            \r\n          }}\r\n         \r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default memo(SideDrawer);\r\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Bar.jsx",["831","832","833","834","835"],"import React, { useEffect, useState, memo } from 'react'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Badge from '@mui/material/Badge';\r\nimport Stack from '@mui/material/Stack';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport {  useDispatch, useSelector } from 'react-redux'\r\nimport { allOrders } from '../../../../actions/orderActions'\r\nimport Notification from './Notification/Notification';\r\nimport './bar.css'\r\nimport Search from '../../../layout/Search'\r\n\r\n    \r\n\r\n// const Search = styled('div')(({ theme }) => ({\r\n//     position: 'relative',\r\n//     borderRadius: theme.shape.borderRadius,\r\n//     backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n//     '&:hover': {\r\n//         backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n//     },\r\n//     marginRight: theme.spacing(2),\r\n//     marginLeft: 0,\r\n//     width: '100%',\r\n//     [theme.breakpoints.up('sm')]: {\r\n//         marginLeft: theme.spacing(3),\r\n//         width: 'auto',\r\n//     },\r\n// }));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\n\r\nfunction Bar({ drawerWidth, match }) {\r\n\r\n    \r\n    const dispatch = useDispatch();    \r\n    const { user } = useSelector(state => state.auth)\r\n    const { orders } = useSelector(state => state.allOrders)\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(allOrders())\r\n    }, [dispatch])\r\n\r\n    const toggleClass = () => {\r\n        let notification = document.getElementById('notification__wrapper');\r\n        notification.classList.toggle('is_open');\r\n\r\n        // remove class by clicking around\r\n        let farm = document.getElementById('farmSHOP');\r\n\r\n        farm.addEventListener('click', () => { notification.classList.remove('is_open') });\r\n    }\r\n\r\n    const handleSideBar = () => {\r\n        const mainDash = document.getElementsByClassName('main_dash')[0]\r\n        const pageContent = document.getElementById('admain__main-view');\r\n        const sidebar = document.getElementById('admin__dashboard');\r\n        pageContent.classList.add('overflow__on');\r\n        sidebar.classList.add('dashboard__sidebar_open');\r\n        mainDash.classList.add('main_dash_lay');\r\n    }\r\n\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            sx={ window.innerWidth <= 899 ? {\r\n                width: '100%'\r\n            } :\r\n            {\r\n                width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n                ml: { sm: `${drawerWidth}px` },\r\n            }}\r\n            className=\"admin__appBar\"\r\n        >\r\n            <Toolbar>\r\n                <Stack direction=\"row\" className=\"admin__toolbar_innerWrap\">\r\n                    {window.innerWidth <= 899 && \r\n                        <IconButton\r\n                        size=\"large\"\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleSideBar}\r\n                        color=\"inherit\"\r\n                        \r\n                      >\r\n                        <MenuIcon className=\"admin__dashboard_menu\" />\r\n                      </IconButton>\r\n                    }\r\n                    {/* <Search className=\"admin__search\">\r\n                        <SearchIconWrapper className=\"admin__searchWrap\">\r\n                            <SearchIcon />\r\n                        </SearchIconWrapper>\r\n                        <StyledInputBase\r\n                            placeholder=\"Search products\"\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            className=\"admin__searchInput\"\r\n                        />\r\n                    </Search> */}\r\n                   {window.innerWidth <= 499 ? null :  <Search />}\r\n\r\n                    <Notification />\r\n\r\n                    <Stack direction=\"row\" spacing={2} className=\"admin__container-toolbarRight\">\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            aria-label=\"show 17 new notifications\"\r\n                            color=\"inherit\"\r\n                            onClick={toggleClass}\r\n                        >\r\n                            <Badge badgeContent={orders && orders.length} color=\"error\" className=\"admin__badgeNotify\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n\r\n                        <Avatar\r\n                            src={user.avatar && user.avatar.url}\r\n                            alt={user && user.name}\r\n                            className=\"admin__user_avatar\"\r\n                        />\r\n                    </Stack>\r\n                </Stack>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default memo(Bar);","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\farm\\styles\\styleHeader.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Bank.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\review\\ListReviews.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Career\\main\\Main.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Career\\header\\Header.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Nutrition_hero.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\product\\Product.js",["836","837","838","839"],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Dash.js",["840","841"],"import React, { Fragment } from 'react'\n\nconst Dash = () => {\n    return (\n        <Fragment>\n            <section id=\"dash_top \" className=\"_bg\">\n\n\n                <div className=\"dash-item\">\n\n                    <div className=\"dash-item__inner row\">\n                        <div className=\"dash-item__icon col\">\n                            <img src=\"https://res.cloudinary.com/locataire/image/upload/v1616258224/category/kisspng-farm-agriculture-tractor-agriculture-5ac47f7e774fd6.2068085615228271344887_qdjg58.png\" alt=\"TeZnWQYAThpTPdvjDYo\" alt=\"UjuYScFXDuXyTuoLrA\" />\n                        </div>\n                        <div className=\"dash-item__title col\">\n                            <span>attention to hygiene</span>\n                            <div className=\"dash_thumbnail\">\n                                We follow strict guidelines\n                            </div>\n                        </div>\n                    </div>\n\n\n\n                </div>\n\n                <div className=\"dash-item\">\n                    <div className=\"dash-item__inner row\">\n                        <div className=\"dash-item__icon col\">\n                            <img src=\"https://res.cloudinary.com/locataire/image/upload/v1616258224/category/kisspng-farm-agriculture-tractor-agriculture-5ac47f7e774fd6.2068085615228271344887_qdjg58.png\" alt=\"TeZnWQYAThpTPdvjDYo\" />\n                        </div>\n                        <div className=\"dash-item__title col\">\n                            <span>Biosecurity</span>\n                            <div className=\"dash_thumbnail\">\n                                Alternative farming system\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"dash-item\">\n                    <div className=\"dash-item__inner row\">\n                        <div className=\"dash-item__icon col\">\n                            <img src=\"https://res.cloudinary.com/locataire/image/upload/v1616258224/category/kisspng-farm-agriculture-tractor-agriculture-5ac47f7e774fd6.2068085615228271344887_qdjg58.png\" alt=\"TeZnWQYAThpTPdvjDYo\" alt=\"cvMXOgOYXD\" />\n                        </div>\n                        <div className=\"dash-item__title col\">\n                            <span> Organic products</span>\n                            <div className=\"dash_thumbnail\">\n                                Food safety management standards\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </section>\n\n            <section id=\"dash_two\" className=\" _bg\">\n                <a href=\"https://combatcovid.hhs.gov/?utm_source=google&utm_medium=cpc&utm_campaign=mmg\">\n                    <img src=\"https://zz.jumia.is//cms/Home-page-content/COvid-19_TopRight.jpg\" alt=\"covid\" />\n                </a>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default Dash\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\MobileBanner.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\drawer\\Content.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Boostrapp.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\Main.js",["842"],"/* eslint-disable no-undef */\nimport React, { Fragment, useEffect } from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport Card from '@mui/material/Card';\nimport './style.css'\nimport Box from '@mui/material/Box';\n\nimport CardContent from '@mui/material/CardContent';\n\nimport { Content } from './data'\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport { styled } from '@mui/material/styles';\n\nimport Grid from '@mui/material/Grid';\n\nconst GridItem = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    backgroundColor: '#313962',\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nconst Main = () => {\n\n    const loadWowScript = (url) => {\n        var script = document.createElement('script');\n        script.src = url\n        script.type = 'text/javascript'\n        script.async = true\n        document.body.appendChild(script);\n    }\n    useEffect(() => {\n        loadWowScript('https://res.cloudinary.com/locataire/raw/upload/v1621704606/wow%20slider/wowslider_sj5ksw.js');\n        loadWowScript('https://res.cloudinary.com/locataire/raw/upload/v1621704605/wow%20slider/script_oz2o8g.js');\n\n    }, [])\n\n   \n\n\n    useEffect(() => {\n        const script = document.createElement(\"script\");\n\n        script.src = \"https://res.cloudinary.com/locataire/raw/upload/v1638733620/flickity/flickityPArallax_ufgpzk.js\";\n        script.async = true;\n        script.type ='text/javascript';\n\n        document.body.appendChild(script);\n        \n    }, [])\n\n\n\n\n    return (\n\n        <Fragment>\n            <Helmet>\n                <link\n                    rel=\"stylesheet\"\n                    type=\"text/css\"\n                    href=\"https://npmcdn.com/flickity@2/dist/flickity.css\"\n                />\n                <link rel=\"stylesheet\" href=\"https://res.cloudinary.com/locataire/raw/upload/v1621704633/wow%20slider/style_zzarng.css\" />\n            </Helmet>\n\n            {window.innerWidth < 900 ?\n                (\n                    <>\n                        {Content.map((item, index) => {\n                            return (\n                                <Card className=\"risk-content\" style={{ boxShadow: 'unset' }} id=\"risk-content-up\" key={index} >\n                                    {/* IMAGES   */}\n                                    <div className=\"__innerItem-container-img\">\n                                        <div className=\"carousel\" data-flickity='{ \"wrapAround\": true, \"autoPlay\": true,  \"imagesLoaded\": true  }' >\n                                            <div className=\"carousel-cell\">\n                                                <img\n                                                    src={item.img}\n                                                    alt=\"green iguana\"\n                                                />\n                                            </div>\n                                            <div className=\"carousel-cell\">\n                                                <img\n                                                    src={item.imgA}\n                                                    alt=\"green iguana\"\n                                                />\n                                            </div>\n                                            <div className=\"carousel-cell\">\n                                                <img\n                                                    src={item.imgB}\n                                                    alt=\"green iguana\"\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    {/* CONTENT */}\n                                    <CardContent className=\"__innerItem-container-text\">\n                                        <Box>\n                                            <Stack direction=\"column\" spacing={2}>\n                                                <div className=\"_item_text-header\">\n                                                    <h1>{item.title}</h1>\n                                                </div>\n                                                <Item className=\"item-sub-wrap\">\n                                                    <div className=\"item-sub-wrap\">\n                                                        <div className=\"sub-item\">\n                                                            <p>{item.subtitle}</p>\n                                                        </div>\n                                                    </div>\n                                                </Item>\n                                                <div className=\"_item_text\">\n                                                    {item.paragraph}\n                                                </div>\n                                            </Stack>\n                                        </Box>\n                                    </CardContent>\n                                </Card>\n                            )\n                        })}\n                    </>\n                )\n                :\n                (\n                    <>\n                        <div id=\"risk-content-up\">\n                            {Content.map((item, index) => {\n                                return (\n                                    <Box className=\"wrapper_box__risk_content\" sx={{ width: '95%', margin: '0 auto' }} key={index}>\n                                        <Grid className=\"grid_item_wrapper__risk\" container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                            <Grid item xs={6} id=\"gridItem_risk-image\">\n                                                <GridItem >\n                                                    <div className=\"carousel\" data-flickity='{ \"wrapAround\": true, \"autoPlay\": true, \"imagesLoaded\": true  }'>\n                                                        <div className=\"carousel-cell\">\n                                                            <img\n                                                                src={item.img}\n                                                                alt=\"green iguana\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"carousel-cell\">\n                                                            <img\n                                                                src={item.imgA}\n                                                                alt=\"green iguana\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"carousel-cell\">\n                                                            <img\n                                                                src={item.imgB}\n                                                                alt=\"green iguana\"\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </GridItem>\n                                            </Grid>\n                                            <Grid item xs={6} id=\"gridItem_risk-content\">\n                                                <GridItem id=\"gridItem_risk\">\n                                                    <Box>\n                                                        <div className=\"_item_text-header\">\n                                                            <h1>{item.title}</h1>\n                                                        </div>\n                                                    </Box>\n                                                    {(item.subtitleA || item.subtitleB || item.subtitleC) && (\n                                                        <Stack direction=\"row\" spacing={2}>\n                                                            <div className=\"sub-item\">\n                                                                <p>{item.subtitleA}</p>\n                                                            </div>\n                                                            <div id=\"sub_divider\" />\n                                                            <div className=\"sub-item\">\n                                                                <p>{item.subtitleB}</p>\n                                                            </div>\n                                                            <div id=\"sub_divider\" />\n                                                            <div className=\"sub-item\" id=\"sub-item\">\n                                                                <p>\n                                                                    {item.subtitleC}\n                                                                </p>\n                                                            </div>\n                                                        </Stack>\n                                                    )}\n                                                    {item.subtitle && (\n                                                        <Stack direction=\"row\" spacing={2}>\n                                                            <div className=\"sub-item\">\n                                                                <p>{item.subtitle}</p>\n                                                            </div>\n                                                        </Stack>\n                                                    )}\n\n                                                    <Box className=\"box_paragraph_risk\">\n                                                        <div className=\"_item_text\">\n                                                            <p>\n                                                                The purpose is to enhance the degree of confidence in the\n                                                                financial statements, to improve internal controls. This is\n                                                                achieved by our expression of an opinion on whether the\n                                                                financial statements are prepared in accordance with the\n                                                                applicable reporting framework. <br />\n                                                                <br />\n                                                                Our Audit services go beyond merely meeting statutory\n                                                                requirements. We help our clients perform better. We listen to\n                                                                their needs, think about the business implications and tailor\n                                                                our approach accordingly. Because the Audit professionals of\n                                                                Locataire take the time to understand our client's business as\n                                                                well as the industries in which they operate, we can help them\n                                                                identify major risks and opportunities over and above\n                                                                performance of the traditional financial reporting function.\n                                                            </p>\n                                                        </div>\n                                                    </Box>\n                                                </GridItem>\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                )\n                            })}\n                        </div>\n\n\n\n\n\n\n                        {/* 2 */}\n\n\n\n                        {/* 3 */}\n                        {/* <center style={{ marginTop: '5rem', marginBottom: '5rem' }}>\n                            <Slider fade=\"fade\" contentOne={Audit()} contentTwo={Audit_a()} contentThree={Audit_b()} contentFour={Audit_a()} contentFive={Audit_b()} />\n                        </center> */}\n\n                        {/* <center style={{ marginTop: '5rem' }}>\n                            <Slider fade=\"fade\" contentOne={Risk()} contentTwo={Risk_a()} contentThree={Risk_b()} contentFour={Risk_a()} contentFive={Risk_b()} />\n                        </center> */}\n                    </>\n                )\n            }\n        </Fragment>\n    )\n}\n\nexport default Main\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\Header.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\ct\\steps\\layout\\Message.js",["843","844","845","846"],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\Slider.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\data.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\HeaderBSN.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\Risk\\carousel\\Slider.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\Notify.js",["847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865"],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\Notification\\icons\\Notice.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\Highlights.jsx",["866"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from '@iconify/react';\r\nimport shoppingCart from '@iconify/icons-ant-design/shopping-cart-outlined';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, Typography } from '@mui/material';\r\n// utils\r\nimport { getAdminProducts } from '../../../../../actions/productActions'\r\nimport { allOrders } from '../../../../../actions/orderActions'\r\nimport { allUsers } from '../../../../../actions/userActions'\r\n\r\nexport const Highlights = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { products } = useSelector(state => state.products)\r\n    const [isAllProducts, setIsAllProducts] = useState(false)\r\n\r\n    const changeState = () => {\r\n        setIsAllProducts(previousState => { return {...previousState, isAllProducts: true} })\r\n        handleChange()\r\n   }\r\n\r\n   const handleChange = () => {\r\n    const sideItem = document.getElementById('product_view');\r\n    sideItem.click();\r\n   }\r\n\r\n\r\n\r\n    // --------------------------------------------------------------------------------------------\r\n\r\n    const RootStyle = styled(Card)(({ theme }) => ({\r\n        boxShadow: 'none',\r\n        textAlign: 'center',\r\n        padding: theme.spacing(5, 0),\r\n        color: theme.palette.primary.darker,\r\n        backgroundColor: theme.palette.primary.lighter\r\n    }));\r\n\r\n    const IconWrapperStyle = styled('div')(({ theme }) => ({\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        alignItems: 'center',\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n        justifyContent: 'center',\r\n        marginBottom: theme.spacing(3),\r\n        color: theme.palette.primary.dark,\r\n        backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.primary.dark, 0)} 0%, ${alpha(\r\n            theme.palette.primary.dark,\r\n            0.24\r\n        )} 100%)`\r\n    }));\r\n\r\n    // ---------------------------------------------------------------------------------------------------\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(allOrders())\r\n        dispatch(allUsers())\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Link to=\"#\" onClick={changeState}>\r\n            <RootStyle>\r\n                <IconWrapperStyle>\r\n                    <Icon icon={shoppingCart} width={24} height={24} />\r\n                </IconWrapperStyle>\r\n                <Typography variant=\"h3\" className=\"admin__boxText\">{products && products.length}</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ opacity: 0.72, fontSize: '1.6rem' }}  className=\"admin__boxText\">\r\n                    Products\r\n                </Typography>\r\n            </RootStyle>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Highlights","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\number\\number.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\globalStyles.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\index.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\shape.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\shadows.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\typography.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\palette.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\index.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Lists.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\IconButton.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Typography.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Tooltip.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Autocomplete.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Paper.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Button.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Backdrop.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Input.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\theme\\overrides\\Card.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\order\\Order.jsx",["867","868","869","870","871","872","873","874"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Icon } from '@iconify/react';\r\nimport shoppingOutlined  from '@iconify/icons-ant-design/shopping-outlined';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, Typography } from '@mui/material';\r\nimport {Link} from 'react-router-dom';\r\n\r\n// utils\r\nimport { fShortenNumber } from '../number/number';\r\n\r\n// utils\r\nimport { getAdminProducts } from '../../../../../actions/productActions'\r\nimport { allOrders } from '../../../../../actions/orderActions'\r\nimport { allUsers } from '../../../../../actions/userActions'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n    boxShadow: 'none',\r\n    textAlign: 'center',\r\n    padding: theme.spacing(5, 0),\r\n    color: theme.palette.info.darker,\r\n    backgroundColor: theme.palette.info.lighter\r\n  }));\r\n  \r\n  const IconWrapperStyle = styled('div')(({ theme }) => ({\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    alignItems: 'center',\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n    justifyContent: 'center',\r\n    marginBottom: theme.spacing(3),\r\n    color: theme.palette.info.dark,\r\n    backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.info.dark, 0)} 0%, ${alpha(\r\n      theme.palette.info.dark,\r\n      0.24\r\n    )} 100%)`\r\n  }));\r\n\r\nexport const OutOfStock = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.allUsers)\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\r\n\r\n    let outOfStock = 0;\r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStock += 1;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n       \r\n    }, [dispatch])\r\n\r\n    const [isAllProducts, setIsAllProducts] = useState(false)\r\n    const changeState = () => {\r\n        setIsAllProducts(previousState => { return { ...previousState, isAllProducts: true } })\r\n        handleChange()\r\n    }\r\n\r\n    const handleChange = () => {\r\n        const sideItem = document.getElementById('order_view');\r\n        sideItem.click();\r\n    }\r\n\r\n\r\n    return (\r\n      <Link  to='#' onClick={changeState}>\r\n        <RootStyle>\r\n        <IconWrapperStyle>\r\n        <Icon icon={shoppingOutlined } width={24} height={24} />\r\n        </IconWrapperStyle>\r\n        <Typography variant=\"h3\" className=\"admin__boxText\">{orders && orders.length}</Typography>\r\n        <Typography variant=\"subtitle2\" sx={{ opacity: 0.72, fontSize: '1.6rem' }} className=\"admin__boxText\">\r\n          Orders\r\n        </Typography>\r\n      </RootStyle>\r\n      </Link>\r\n    )\r\n}\r\n\r\nexport default OutOfStock","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\user\\User.jsx",["875","876","877","878","879","880","881","882"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Icon } from '@iconify/react';\r\nimport usergroupAddOutlined  from '@iconify/icons-ant-design/usergroup-add-outlined';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { Card, Typography } from '@mui/material';\r\n// utils\r\nimport { fShortenNumber } from '../number/number';\r\n\r\n// utils\r\nimport { getAdminProducts } from '../../../../../actions/productActions'\r\nimport { allOrders } from '../../../../../actions/orderActions'\r\nimport { allUsers } from '../../../../../actions/userActions'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n    boxShadow: 'none',\r\n    textAlign: 'center',\r\n    padding: theme.spacing(5, 0),\r\n    color: theme.palette.warning.darker,\r\n    backgroundColor: theme.palette.warning.lighter\r\n  }));\r\n  \r\n  const IconWrapperStyle = styled('div')(({ theme }) => ({\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    alignItems: 'center',\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n    justifyContent: 'center',\r\n    marginBottom: theme.spacing(3),\r\n    color: theme.palette.warning.dark,\r\n    backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.warning.dark, 0)} 0%, ${alpha(\r\n      theme.palette.warning.dark,\r\n      0.24\r\n    )} 100%)`\r\n  }));\r\n\r\n\r\nexport const OutOfStock = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isAllProducts, setIsAllProducts] = useState(false)\r\n\r\n    const { products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.allUsers)\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\r\n\r\n    let outOfStock = 0;\r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStock += 1;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers())\r\n       \r\n    }, [dispatch])\r\n\r\n    const changeState = () => {\r\n      setIsAllProducts(previousState => { return {...previousState, isAllProducts: true} })\r\n      handleChange()\r\n }\r\n\r\n const handleChange = () => {\r\n  const sideItem = document.getElementById('user_view');\r\n  sideItem.click();\r\n }\r\n\r\n\r\n\r\n    return (\r\n      <Link to=\"#\" onClick={changeState}>\r\n        <RootStyle>\r\n        <IconWrapperStyle>\r\n        <Icon icon={usergroupAddOutlined } width={24} height={24} />\r\n      </IconWrapperStyle>\r\n      <Typography variant=\"h3\" className=\"admin__boxText\">{users && users.length}</Typography>\r\n      <Typography variant=\"subtitle2\" sx={{ opacity: 0.72, fontSize: '1.6rem' }} className=\"admin__boxText\">\r\n          Total Users\r\n        </Typography>\r\n      </RootStyle>\r\n      </Link>\r\n    )\r\n}\r\n\r\nexport default OutOfStock","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\stock\\OutOfStock.jsx",["883","884","885","886","887","888","889","890"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Icon } from '@iconify/react';\r\nimport shopOutlined  from '@iconify/icons-ant-design/shop-outlined';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { Card, Typography } from '@mui/material';\r\n// utils\r\nimport { fShortenNumber } from '../number/number';\r\n\r\n// utils\r\nimport { getAdminProducts } from '../../../../../actions/productActions'\r\nimport { allOrders } from '../../../../../actions/orderActions'\r\nimport { allUsers } from '../../../../../actions/userActions'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n    boxShadow: 'none',\r\n    textAlign: 'center',\r\n    padding: theme.spacing(5, 0),\r\n    color: theme.palette.error.darker,\r\n    backgroundColor: theme.palette.error.lighter\r\n  }));\r\n  \r\n  const IconWrapperStyle = styled('div')(({ theme }) => ({\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    alignItems: 'center',\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n    justifyContent: 'center',\r\n    marginBottom: theme.spacing(3),\r\n    color: theme.palette.error.dark,\r\n    backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.error.dark, 0)} 0%, ${alpha(\r\n      theme.palette.error.dark,\r\n      0.24\r\n    )} 100%)`\r\n  }));\r\n\r\n\r\nexport const OutOfStock = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.allUsers)\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\r\n\r\n    let outOfStock = 0;\r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStock += 1;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n       \r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <RootStyle>\r\n        <IconWrapperStyle>\r\n          <Icon icon={shopOutlined } width={24} height={24} />\r\n        </IconWrapperStyle>\r\n        <Typography variant=\"h3\" className=\"admin__boxText\">{outOfStock}</Typography>\r\n        <Typography variant=\"subtitle2\" sx={{ opacity: 0.72, fontSize: '1.6rem' }} className=\"admin__boxText\">\r\n          Out Of Stock\r\n        </Typography>\r\n      </RootStyle>\r\n    )\r\n}\r\n\r\nexport default OutOfStock","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\amount\\Amount.jsx",["891","892","893"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Icon } from '@iconify/react';\r\nimport androidFilled from '@iconify/icons-ant-design/android-filled';\r\nimport caretUpOutlined from '@iconify/icons-ant-design/caret-up-outline';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, Typography } from '@mui/material';\r\nimport { allOrders } from '../../../../../actions/orderActions'\r\n\r\n\r\nexport const Amount = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { totalAmount } = useSelector(state => state.allOrders)\r\n\r\n    const RootStyle = styled(Card)(({ theme }) => ({\r\n        boxShadow: 'none',\r\n        textAlign: 'center',\r\n        marginTop: '5rem',\r\n        padding: theme.spacing(5, 0),\r\n        color: theme.palette.primary.darker,\r\n        backgroundColor: theme.palette.primary.lighter\r\n    }));\r\n\r\n    const IconWrapperStyle = styled('div')(({ theme }) => ({\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        alignItems: 'center',\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n        justifyContent: 'center',\r\n        marginBottom: theme.spacing(3),\r\n        color: theme.palette.primary.dark,\r\n        backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.primary.dark, 0)} 0%, ${alpha(\r\n            theme.palette.primary.dark,\r\n            0.24\r\n        )} 100%)`\r\n    }));\r\n\r\n  \r\n\r\n    return (\r\n      <RootStyle>\r\n      <IconWrapperStyle>\r\n          <Icon icon={caretUpOutlined} width={24} height={24} />\r\n      </IconWrapperStyle>\r\n      <Typography variant=\"h3\" className=\"admin__boxText\">${totalAmount && totalAmount.toFixed(2)}</Typography>\r\n      <Typography variant=\"subtitle2\" sx={{ opacity: 0.72, fontSize: '1.6rem' }} className=\"admin__boxText\">\r\n      Total Amount\r\n      </Typography>\r\n  </RootStyle>\r\n    )\r\n}\r\n\r\nexport default Amount","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\View.jsx",["894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from '@iconify/react';\r\nimport appstoreOutlined from '@iconify/icons-ant-design/appstore-outlined';\r\nimport editOutlined from '@iconify/icons-ant-design/edit-outlined';\r\nimport unorderedListOutlined from '@iconify/icons-ant-design/unordered-list-outlined';\r\n// material\r\nimport TabMobile from './TabMobile'\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Card, Typography } from '@mui/material';\r\nimport Loader from '../../../../../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\n// utils\r\nimport PRODUCTS from '../products/Products';\r\n\r\nimport ProductSort from '../products/ProductSort';\r\nimport ProductList from '../products/ProductList';\r\nimport ProductCartWidget from '../products/ProductCartWidget';\r\nimport ProductFilterSidebar from '../products/ProductFilterSidebar';\r\nimport Box from '@mui/material/Box';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { Container, Stack } from '@mui/material';\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../../../../../actions/productActions'\r\nimport { allOrders } from '../../../../../../actions/orderActions'\r\nimport { allUsers } from '../../../../../../actions/userActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../../../../../constants/productConstants'\r\nimport PropTypes from 'prop-types';\r\nimport User from './Users'\r\nimport UsersList from './Users';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }} id=\"tabpanel__rendered-child\">\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\nexport const Highlights = ({ history }) => {\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, products } = useSelector(state => state.products);\r\n  const { error: deleteError, isDeleted } = useSelector(state => state.product)\r\n\r\n\r\n  const IconWrapperStyle = styled('div')(({ theme }) => ({\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    alignItems: 'center',\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n    justifyContent: 'center',\r\n    marginBottom: theme.spacing(3),\r\n    color: theme.palette.primary.dark,\r\n    backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.primary.dark, 0)} 0%, ${alpha(\r\n      theme.palette.primary.dark,\r\n      0.24\r\n    )} 100%)`\r\n  }));\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getAdminProducts());\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success('Product deleted successfully');\r\n      history.push('/admin/products');\r\n      dispatch({ type: DELETE_PRODUCT_RESET })\r\n    }\r\n  }, [alert, deleteError, dispatch, error, history, isDeleted])\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  // -------------------------------------------------\r\n\r\n  const productsGridsData = (\r\n    <Container sx={{padding: '0!important', marginTop: '5rem'}}>\r\n      <Typography variant=\"h4\" style={{ marginBottom: '3rem' }} className=\"admin__productsTab-title\">\r\n        Products\r\n      </Typography>\r\n\r\n      {loading ? <Loader /> : <ProductList products={products && products} />}\r\n    </Container>\r\n  )\r\n\r\n  const productsInfoData = (\r\n    <Container sx={{marginTop: '5rem'}}>\r\n      <UsersList />\r\n    </Container>\r\n  )\r\n\r\n  //  ---------------------------------------------------\r\n\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n        {window.innerWidth >= 600 &&\r\n          <>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"icon position tabs example\" centered className=\"admin__tabSelector\">\r\n            <Tab label='Products Grid' sx={{ fontSize: '1.6rem' }} className=\"tabContent\" />\r\n            <IconWrapperStyle className=\"iconWrapper\"><Icon icon={appstoreOutlined} width={24} height={24} /></IconWrapperStyle>\r\n            <Tab label='Modify Products' sx={{ fontSize: '1.6rem' }} className=\"tabContent\" id=\"tabContent\" />\r\n            <IconWrapperStyle className=\"iconWrapper\"><Icon icon={editOutlined} width={24} height={24} /></IconWrapperStyle>\r\n            {/* <Tab label=\"Products List\"  sx={{ fontSize: '1.6rem' }} className=\"tabContent\" />\r\n        <IconWrapperStyle className=\"iconWrapper\"><Icon icon={unorderedListOutlined} width={24} height={24} /></IconWrapperStyle> */}\r\n          </Tabs>\r\n\r\n          <TabPanel value={value} index={0}>\r\n            <Container>\r\n              <Typography variant=\"h4\" style={{ marginBottom: '3rem' }} className=\"admin__productsTab-title\">\r\n                Products\r\n              </Typography>\r\n\r\n              {loading ? <Loader /> : <ProductList products={products && products} />}\r\n\r\n            </Container>\r\n          </TabPanel>\r\n\r\n          <TabPanel value={value} index={2} style={{ backgroundColor: 'aliceblue' }}>\r\n            <Container >\r\n              <UsersList />\r\n            </Container>\r\n          </TabPanel>\r\n          </>\r\n        }\r\n\r\n        {window.innerWidth <= 599 &&\r\n          <>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"icon position tabs example\" centered className=\"admin__tabSelector\">\r\n              <Tab label={`${window.innerWidth <= 350 ? 'Products' : 'Products Grid'}`} sx={{ fontSize: '1.6rem' }} className=\"tabContent\" />\r\n              <Tab label={`${window.innerWidth <= 350 ? 'Edit Products' : 'Modify Products'}`} sx={{ fontSize: '1.6rem' }} className=\"tabContent\" id=\"tabContent\" />\r\n          </Tabs>\r\n\r\n          <TabPanel value={value} index={0}>\r\n            <Container>\r\n              <Typography variant=\"h4\" style={{ marginBottom: '3rem' }} className=\"admin__productsTab-title\">\r\n                Products\r\n              </Typography>\r\n\r\n              {loading ? <Loader /> : <ProductList products={products && products} />}\r\n\r\n            </Container>\r\n          </TabPanel>\r\n\r\n          <TabPanel value={value} index={1} style={{ backgroundColor: 'aliceblue' }}>\r\n            <Container id=\"Tabpanel-product_info__container\">\r\n              <UsersList />\r\n            </Container>\r\n          </TabPanel>\r\n          </>\r\n        }\r\n        \r\n      \r\n\r\n      {/* <TabPanel value={value} index={1}>\r\n        Item Three\r\n      </TabPanel> */}\r\n    </Box>\r\n\r\n  )\r\n}\r\n\r\nexport default Highlights","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\Products.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\mock\\mockImages.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductSort.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductList.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductCartWidget.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductFilterSidebar.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\picker\\ColorManyPicker.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\scrollbar\\Scrollbar.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\products\\ProductCart.jsx",["911","912","913","914","915","916"],"import { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { Box, Card, Link, Typography, Stack } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n// utils\r\nimport { fCurrency } from '../../number/number';\r\n//\r\nimport Label from '../label/Label';\r\nimport ColorPreview from '../color/ColorPreview';\r\nimport Styled from 'styled-components'\r\n\r\n// ----------------------------------------------------------------------\r\nconst Star = Styled.div`\r\n    display: block;\r\n`\r\nconst RatingOuter = Styled.div`\r\n    float: left;\r\n`\r\nconst ProductImgStyle = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute'\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nShopProductCard.propTypes = {\r\n  product: PropTypes.object\r\n};\r\n\r\nexport default function ShopProductCard({ product }) {\r\n  const [rating, setRating] = useState(0)\r\n\r\n  const { category, name, price, stock, ratings, images } = product;\r\n\r\n  return (\r\n    <Card>\r\n      <Link to={`/product/${product._id}`} color=\"inherit\" underline=\"hover\" component={RouterLink} sx={{height: 'fit-content'}}>\r\n        <Box sx={{ pt: '100%', position: 'relative' }}>\r\n          {/* {status && (\r\n            <Label\r\n              variant=\"filled\"\r\n              color={(status === 'sale' && 'error') || 'info'}\r\n              sx={{\r\n                zIndex: 9,\r\n                top: 16,\r\n                right: 16,\r\n                position: 'absolute',\r\n                textTransform: 'uppercase'\r\n              }}\r\n            >\r\n              {status}\r\n            </Label>\r\n          )} */}\r\n          <ProductImgStyle alt={name} src={images[0].url} />\r\n        </Box>\r\n      </Link>\r\n\r\n      <Stack spacing={2} sx={{ p: 3 }}>\r\n        <Star>\r\n          <RatingOuter className=\"rating-outer\">\r\n            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n          </RatingOuter>\r\n        </Star>\r\n\r\n        <Link to={`/product/${product._id}`} color=\"inherit\" underline=\"hover\" component={RouterLink}>\r\n          <Typography variant=\"subtitle2\" noWrap className=\"admin__product_text\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" noWrap className=\"admin__product_text\">\r\n            {category}\r\n          </Typography>\r\n\r\n        </Link>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          {/* <ColorPreview colors={colors} /> */}\r\n          <Typography variant=\"subtitle1\">\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"body1\"\r\n              sx={{\r\n                color: 'text',\r\n                textDecoration: 'none'\r\n              }}\r\n              className=\"admin__product_priceText\"\r\n            >\r\n              {price && fCurrency(price)}\r\n            </Typography>\r\n            {/* &nbsp;\r\n            {fCurrency(price)} */}\r\n          </Typography>\r\n        </Stack>\r\n\r\n\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\label\\Label.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\color\\ColorPreview.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\User.jsx",["917","918","919","920","921","922"],"import React, { useEffect } from 'react'\r\n\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../../../../../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allUsers, deleteUser, clearErrors } from '../../../../../../actions/userActions'\r\nimport { DELETE_USER_RESET } from '../../../../../../constants/userConstants'\r\n\r\n\r\n\r\nexport const User = () => {\r\n\r\n    useEffect(() => {\r\n        const upProfil = document.getElementById('UpdateProfile');\r\n        upProfil.style.display = 'none';\r\n\r\n\r\n        const app = document.getElementsByClassName('App')[0];\r\n        app.classList.add('dashboard_main');\r\n\r\n        const newPass = document.getElementById('NewPassword');\r\n        newPass.style.display = 'none';\r\n\r\n\r\n        return () => {\r\n            app.classList.remove('dashboard_main');\r\n            upProfil.style.display = 'block';\r\n            newPass.style.display = 'block';\r\n        }\r\n    }, [])\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.allUsers);\r\n    const { isDeleted } = useSelector(state => state.user)\r\n\r\n    const deleteUserHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    return (\r\n        <MDBTable bordered className='mdb__table-container'>\r\n        {loading ? <Loader /> \r\n        : \r\n        (\r\n            <>\r\n                <MDBTableHead className='mdb__table-head'>\r\n                <tr className='mdb__table-row'>\r\n                    <th className=\"all_users__table-head\">#</th>\r\n                    <th className=\"all_users__table-head\">User ID</th>\r\n                    <th className=\"all_users__table-head\">Name</th>\r\n                    <th className=\"all_users__table-head\">Email</th>\r\n                    <th className=\"all_users__table-head\">Role</th>\r\n                    <th className=\"all_users__table-head\">Actions</th>\r\n                </tr>\r\n            </MDBTableHead>\r\n\r\n            <MDBTableBody className='mdb__table-body'>\r\n                {users && users.map((user, index) => {\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>{index}</td>\r\n                            <td>{user._id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.role}</td>\r\n                            <td>\r\n                                <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                                    <i className=\"fa fa-pencil\"></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\r\n                                    <i className=\"fa fa-trash\"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </MDBTableBody>\r\n            </>\r\n        )\r\n        \r\n        }\r\n        </MDBTable>\r\n\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\Users.jsx",["923","924"],"import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\n\r\nimport Loader from '../../../../../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../../../../../actions/productActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../../../../../constants/productConstants'\r\n\r\nconst ProductsList = ({ history }) => {\r\n    useEffect(() => {\r\n        const upProfil = document.getElementById('UpdateProfile');\r\n        upProfil.style.display = 'none';\r\n\r\n\r\n        const app = document.getElementsByClassName('App')[0];\r\n        app.classList.add('dashboard_main');\r\n\r\n        const newPass = document.getElementById('NewPassword');\r\n        newPass.style.display = 'none';\r\n\r\n\r\n        return () => {\r\n            app.classList.remove('dashboard_main');\r\n            upProfil.style.display = 'block';\r\n            newPass.style.display = 'block';\r\n        }\r\n    }, [])\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(state => state.products);\r\n    const { error: deleteError, isDeleted } = useSelector(state => state.product)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Product deleted successfully');\r\n            history.push('/admin/products');\r\n            dispatch({ type: DELETE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, deleteError, isDeleted, history])\r\n\r\n    const setProducts = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Price',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Stock',\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        dispatch(deleteProduct(id))\r\n    }\r\n\r\n    let isMobile = window.innerWidth <= 650;\r\n    let isSmallMobile = window.innerWidth <= 420;\r\n\r\n    return (\r\n\r\n        <div id=\"admin__products_list\">\r\n\r\n\r\n            {loading ? <Loader /> : (\r\n                <>\r\n                    {\r\n                        window.innerWidth <= 650 ? (\r\n                            <MDBDataTable\r\n                                data={setProducts()}\r\n                                className=\"px-3 mdb_product_info\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                                entriesOptions={[5, 20, 25]}\r\n                                entries={5}\r\n                                pagesAmount={4}\r\n                            />\r\n                        )\r\n                            :\r\n                            window.innerWidth <= 420 ? (\r\n                            <MDBDataTable\r\n                                data={setProducts()}\r\n                                className=\"px-3 mdb_product_info\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                                entriesOptions={[4, 19, 24]}\r\n                                entries={4}\r\n                                pagesAmount={2}\r\n                            />\r\n                        )\r\n                            :\r\n\r\n                            (\r\n                                <MDBDataTable\r\n                                    data={setProducts()}\r\n                                    className=\"px-3 mdb_product_info\"\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n\r\n                                />\r\n                            )\r\n                    }\r\n                </>\r\n\r\n            )}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductsList","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\OrderList.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\Review.jsx",["925","926"],"import React, { Fragment, useEffect, useState } from 'react'\r\n\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { Link } from 'react-router-dom'\r\nimport { Typography, Box, Button, TextField, Stack } from '@mui/material';\r\nimport Loader from '../../../../../layout/Loader'\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport Chip from '@mui/material/Chip';\r\nimport Divider from '@mui/material/Divider';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductReviews, deleteReview, clearErrors } from '../../../../../../actions/productActions'\r\nimport { DELETE_REVIEW_RESET } from '../../../../../../constants/productConstants'\r\nimport Styled from 'styled-components'\r\n\r\nconst Star = Styled.div`\r\n    display: block;\r\n`\r\nconst RatingOuter = Styled.div`\r\n    float: left;\r\n`\r\n\r\nexport const Review = () => {\r\n\r\n    useEffect(() => {\r\n        const upProfil = document.getElementById('UpdateProfile');\r\n        upProfil.style.display = 'none';\r\n\r\n\r\n        const app = document.getElementsByClassName('App')[0];\r\n        app.classList.add('dashboard_main');\r\n\r\n        const newPass = document.getElementById('NewPassword');\r\n        newPass.style.display = 'none';\r\n\r\n\r\n        return () => {\r\n            app.classList.remove('dashboard_main');\r\n            upProfil.style.display = 'block';\r\n            newPass.style.display = 'block';\r\n        }\r\n    }, [])\r\n\r\n    const [productId, setProductId] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.productReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n\r\n    useEffect(() => {\r\n        const upProfil = document.getElementById('UpdateProfile');\r\n        upProfil.style.display = 'none';\r\n\r\n\r\n        const app = document.getElementsByClassName('App')[0];\r\n        app.classList.add('dashboard_main');\r\n\r\n        const newPass = document.getElementById('NewPassword');\r\n        newPass.style.display = 'none';\r\n\r\n\r\n        return () => {\r\n            app.classList.remove('dashboard_main');\r\n            upProfil.style.display = 'block';\r\n            newPass.style.display = 'block';\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (productId) {\r\n            dispatch(getProductReviews(productId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Review deleted successfully');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\r\n\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, productId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getProductReviews(productId))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& > :not(style)': { m: 1, width: '70ch', display: 'flex', placeContent: 'center' },\r\n                }}\r\n                noValidate\r\n                id=\"box_review\"\r\n                autoComplete=\"off\"\r\n                onSubmit={submitHandler}\r\n            >\r\n                <Stack direction=\"column\" spacing={2} >\r\n                    <TextField id=\"field__review\" value={productId} onChange={(e) => setProductId(e.target.value)} label=\"Enter Product ID\" type=\"text\" variant=\"standard\" sx={{ fontSize: '1.6rem' }} />\r\n                    <Button variant=\"contained\" id=\"btn__review\">SEARCH</Button>\r\n                </Stack>\r\n            </Box>\r\n            \r\n            {reviews && reviews.length > 0 ?\r\n                (\r\n                    <>\r\n                        <MDBTable bordered className='mdb__table-container'>\r\n                            <MDBTableHead className='mdb__table-head'>\r\n                                <tr className='mdb__table-row'>\r\n                                    <th className=\"all_users__table-head\">#</th>\r\n                                    <th className=\"all_users__table-head\">Review ID</th>\r\n                                    <th className=\"all_users__table-head\">Rating</th>\r\n                                    <th className=\"all_users__table-head\">Comment</th>\r\n                                    <th className=\"all_users__table-head\">Name</th>\r\n                                    <th className=\"all_users__table-head\">Actions</th>\r\n                                </tr>\r\n                            </MDBTableHead>\r\n                            <MDBTableBody className='mdb__table-body'>\r\n                                {reviews && reviews.map((review, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{index}</td>\r\n                                            <td>{review._id}</td>\r\n                                            <td>\r\n                                                <Star>\r\n                                                    <RatingOuter className=\"rating-outer\">\r\n                                                        <div className=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\r\n                                                    </RatingOuter>\r\n                                                </Star>\r\n                                            </td>\r\n                                            <td>{review.comment}</td>\r\n                                            <td>{review.name}</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                                                    <i className=\"fa fa-trash\"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </MDBTableBody>\r\n                        </MDBTable>\r\n\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n\r\n                            {reviews && reviews.map((review, index) => (\r\n                        <Card sx={{ maxWidth: 400 }} key={index} id=\"card__review\">\r\n                                    <CardContent>\r\n                                        <Stack direction=\"column\" spacing={2}>\r\n                                            <Box>\r\n                                            <Star>\r\n                                                <RatingOuter className=\"rating-outer\">\r\n                                                    <div className=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\r\n                                                </RatingOuter>\r\n                                            </Star>\r\n                                        </Box>\r\n                                        <Typography variant=\"h3\" color=\"text.primary\" sx={{fontSize: '2rem'}} gutterBottom>\r\n                                            {review.name}\r\n                                        </Typography>\r\n                                        </Stack>\r\n\r\n                                        <Divider sx={{marginLeft: 0}}>\r\n                                            <Chip label=\"comment\" sx={{fontSize: '1.6rem', mb: 1}} className=\"chip__review\" />\r\n                                        </Divider>\r\n                                        <Typography sx={{ fontSize: 16 }} variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                                            {review.comment}\r\n                                        </Typography>\r\n\r\n                                    </CardContent>\r\n\r\n                                    <CardActions>\r\n                                        <Button onClick={() => deleteReviewHandler(review._id)}>\r\n                                            <DeleteForeverIcon sx={{width: '1.5em', height: '1.5em'}} />\r\n                                        </Button>\r\n                                    </CardActions>\r\n                        </Card>\r\n                            ))}\r\n\r\n\r\n                    </>\r\n                )\r\n                :\r\n                (\r\n                    <Typography paragraph >\r\n                        No Reviews.\r\n                    </Typography>\r\n                )\r\n            }\r\n           \r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Review","C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\create\\NewProduct.jsx",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\admin\\main\\utils\\highlights\\view\\TabMobile.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\layout\\homecategories.js",[],"C:\\Users\\nzemb\\Music\\shopit-master-main\\frontend\\src\\components\\Slide.js",["927","928"],{"ruleId":"929","replacedBy":"930"},{"ruleId":"931","replacedBy":"932"},{"ruleId":"933","severity":1,"message":"934","line":43,"column":8,"nodeType":"935","messageId":"936","endLine":43,"endColumn":20},{"ruleId":"933","severity":1,"message":"937","line":48,"column":8,"nodeType":"935","messageId":"936","endLine":48,"endColumn":17},{"ruleId":"933","severity":1,"message":"938","line":108,"column":19,"nodeType":"935","messageId":"936","endLine":108,"endColumn":27},{"ruleId":"933","severity":1,"message":"939","line":3,"column":8,"nodeType":"935","messageId":"936","endLine":3,"endColumn":14},{"ruleId":"933","severity":1,"message":"938","line":137,"column":19,"nodeType":"935","messageId":"936","endLine":137,"endColumn":27},{"ruleId":"933","severity":1,"message":"940","line":3,"column":8,"nodeType":"935","messageId":"936","endLine":3,"endColumn":14},{"ruleId":"933","severity":1,"message":"941","line":16,"column":8,"nodeType":"935","messageId":"936","endLine":16,"endColumn":23},{"ruleId":"933","severity":1,"message":"942","line":5,"column":5,"nodeType":"935","messageId":"936","endLine":5,"endColumn":8},{"ruleId":"933","severity":1,"message":"943","line":6,"column":5,"nodeType":"935","messageId":"936","endLine":6,"endColumn":9},{"ruleId":"933","severity":1,"message":"944","line":7,"column":5,"nodeType":"935","messageId":"936","endLine":7,"endColumn":10},{"ruleId":"933","severity":1,"message":"945","line":8,"column":5,"nodeType":"935","messageId":"936","endLine":8,"endColumn":11},{"ruleId":"933","severity":1,"message":"940","line":9,"column":5,"nodeType":"935","messageId":"936","endLine":9,"endColumn":11},{"ruleId":"933","severity":1,"message":"946","line":10,"column":5,"nodeType":"935","messageId":"936","endLine":10,"endColumn":12},{"ruleId":"933","severity":1,"message":"947","line":11,"column":5,"nodeType":"935","messageId":"936","endLine":11,"endColumn":12},{"ruleId":"933","severity":1,"message":"948","line":12,"column":5,"nodeType":"935","messageId":"936","endLine":12,"endColumn":15},{"ruleId":"933","severity":1,"message":"949","line":13,"column":5,"nodeType":"935","messageId":"936","endLine":13,"endColumn":15},{"ruleId":"933","severity":1,"message":"950","line":14,"column":5,"nodeType":"935","messageId":"936","endLine":14,"endColumn":17},{"ruleId":"933","severity":1,"message":"951","line":15,"column":5,"nodeType":"935","messageId":"936","endLine":15,"endColumn":18},{"ruleId":"933","severity":1,"message":"952","line":16,"column":5,"nodeType":"935","messageId":"936","endLine":16,"endColumn":19},{"ruleId":"933","severity":1,"message":"953","line":17,"column":5,"nodeType":"935","messageId":"936","endLine":17,"endColumn":19},{"ruleId":"933","severity":1,"message":"954","line":25,"column":8,"nodeType":"935","messageId":"936","endLine":25,"endColumn":13},{"ruleId":"933","severity":1,"message":"955","line":26,"column":10,"nodeType":"935","messageId":"936","endLine":26,"endColumn":14},{"ruleId":"933","severity":1,"message":"956","line":27,"column":8,"nodeType":"935","messageId":"936","endLine":27,"endColumn":19},{"ruleId":"933","severity":1,"message":"957","line":36,"column":12,"nodeType":"935","messageId":"936","endLine":36,"endColumn":23},{"ruleId":"933","severity":1,"message":"958","line":36,"column":25,"nodeType":"935","messageId":"936","endLine":36,"endColumn":39},{"ruleId":"959","severity":1,"message":"960","line":78,"column":8,"nodeType":"961","endLine":78,"endColumn":10,"suggestions":"962"},{"ruleId":"933","severity":1,"message":"963","line":99,"column":24,"nodeType":"935","messageId":"936","endLine":99,"endColumn":37},{"ruleId":"933","severity":1,"message":"964","line":2,"column":8,"nodeType":"935","messageId":"936","endLine":2,"endColumn":16},{"ruleId":"933","severity":1,"message":"965","line":4,"column":8,"nodeType":"935","messageId":"936","endLine":4,"endColumn":18},{"ruleId":"933","severity":1,"message":"966","line":5,"column":8,"nodeType":"935","messageId":"936","endLine":5,"endColumn":13},{"ruleId":"933","severity":1,"message":"967","line":6,"column":8,"nodeType":"935","messageId":"936","endLine":6,"endColumn":12},{"ruleId":"933","severity":1,"message":"968","line":8,"column":10,"nodeType":"935","messageId":"936","endLine":8,"endColumn":14},{"ruleId":"933","severity":1,"message":"949","line":9,"column":8,"nodeType":"935","messageId":"936","endLine":9,"endColumn":18},{"ruleId":"933","severity":1,"message":"969","line":19,"column":8,"nodeType":"935","messageId":"936","endLine":19,"endColumn":15},{"ruleId":"933","severity":1,"message":"970","line":33,"column":7,"nodeType":"935","messageId":"936","endLine":33,"endColumn":12},{"ruleId":"933","severity":1,"message":"971","line":50,"column":12,"nodeType":"935","messageId":"936","endLine":50,"endColumn":16},{"ruleId":"933","severity":1,"message":"972","line":51,"column":11,"nodeType":"935","messageId":"936","endLine":51,"endColumn":21},{"ruleId":"933","severity":1,"message":"973","line":52,"column":11,"nodeType":"935","messageId":"936","endLine":52,"endColumn":22},{"ruleId":"959","severity":1,"message":"960","line":80,"column":8,"nodeType":"961","endLine":80,"endColumn":10,"suggestions":"974"},{"ruleId":"933","severity":1,"message":"975","line":162,"column":11,"nodeType":"935","messageId":"936","endLine":162,"endColumn":24},{"ruleId":"933","severity":1,"message":"976","line":1,"column":17,"nodeType":"935","messageId":"936","endLine":1,"endColumn":25},{"ruleId":"933","severity":1,"message":"969","line":4,"column":8,"nodeType":"935","messageId":"936","endLine":4,"endColumn":15},{"ruleId":"959","severity":1,"message":"960","line":47,"column":8,"nodeType":"961","endLine":47,"endColumn":10,"suggestions":"977"},{"ruleId":"933","severity":1,"message":"978","line":6,"column":8,"nodeType":"935","messageId":"936","endLine":6,"endColumn":14},{"ruleId":"933","severity":1,"message":"969","line":7,"column":8,"nodeType":"935","messageId":"936","endLine":7,"endColumn":15},{"ruleId":"959","severity":1,"message":"960","line":71,"column":8,"nodeType":"961","endLine":71,"endColumn":10,"suggestions":"979"},{"ruleId":"933","severity":1,"message":"980","line":119,"column":13,"nodeType":"935","messageId":"936","endLine":119,"endColumn":20},{"ruleId":"933","severity":1,"message":"969","line":4,"column":8,"nodeType":"935","messageId":"936","endLine":4,"endColumn":15},{"ruleId":"933","severity":1,"message":"940","line":10,"column":8,"nodeType":"935","messageId":"936","endLine":10,"endColumn":14},{"ruleId":"959","severity":1,"message":"960","line":47,"column":8,"nodeType":"961","endLine":47,"endColumn":10,"suggestions":"981"},{"ruleId":"933","severity":1,"message":"982","line":3,"column":8,"nodeType":"935","messageId":"936","endLine":3,"endColumn":17},{"ruleId":"933","severity":1,"message":"983","line":4,"column":8,"nodeType":"935","messageId":"936","endLine":4,"endColumn":19},{"ruleId":"933","severity":1,"message":"984","line":20,"column":8,"nodeType":"935","messageId":"936","endLine":20,"endColumn":15},{"ruleId":"933","severity":1,"message":"985","line":22,"column":8,"nodeType":"935","messageId":"936","endLine":22,"endColumn":18},{"ruleId":"933","severity":1,"message":"986","line":25,"column":8,"nodeType":"935","messageId":"936","endLine":25,"endColumn":25},{"ruleId":"933","severity":1,"message":"987","line":28,"column":22,"nodeType":"935","messageId":"936","endLine":28,"endColumn":35},{"ruleId":"933","severity":1,"message":"988","line":34,"column":10,"nodeType":"935","messageId":"936","endLine":34,"endColumn":13},{"ruleId":"933","severity":1,"message":"989","line":46,"column":10,"nodeType":"935","messageId":"936","endLine":46,"endColumn":19},{"ruleId":"933","severity":1,"message":"990","line":46,"column":21,"nodeType":"935","messageId":"936","endLine":46,"endColumn":31},{"ruleId":"933","severity":1,"message":"991","line":49,"column":8,"nodeType":"935","messageId":"936","endLine":49,"endColumn":21},{"ruleId":"933","severity":1,"message":"992","line":61,"column":8,"nodeType":"935","messageId":"936","endLine":61,"endColumn":16},{"ruleId":"933","severity":1,"message":"993","line":62,"column":8,"nodeType":"935","messageId":"936","endLine":62,"endColumn":19},{"ruleId":"933","severity":1,"message":"994","line":63,"column":8,"nodeType":"935","messageId":"936","endLine":63,"endColumn":20},{"ruleId":"933","severity":1,"message":"995","line":64,"column":8,"nodeType":"935","messageId":"936","endLine":64,"endColumn":21},{"ruleId":"933","severity":1,"message":"996","line":150,"column":7,"nodeType":"935","messageId":"936","endLine":150,"endColumn":11},{"ruleId":"933","severity":1,"message":"997","line":258,"column":12,"nodeType":"935","messageId":"936","endLine":258,"endColumn":18},{"ruleId":"933","severity":1,"message":"998","line":258,"column":20,"nodeType":"935","messageId":"936","endLine":258,"endColumn":29},{"ruleId":"933","severity":1,"message":"999","line":262,"column":11,"nodeType":"935","messageId":"936","endLine":262,"endColumn":22},{"ruleId":"933","severity":1,"message":"973","line":266,"column":11,"nodeType":"935","messageId":"936","endLine":266,"endColumn":22},{"ruleId":"933","severity":1,"message":"1000","line":271,"column":11,"nodeType":"935","messageId":"936","endLine":271,"endColumn":13},{"ruleId":"933","severity":1,"message":"980","line":276,"column":19,"nodeType":"935","messageId":"936","endLine":276,"endColumn":26},{"ruleId":"933","severity":1,"message":"1001","line":292,"column":11,"nodeType":"935","messageId":"936","endLine":292,"endColumn":19},{"ruleId":"933","severity":1,"message":"1002","line":311,"column":11,"nodeType":"935","messageId":"936","endLine":311,"endColumn":16},{"ruleId":"933","severity":1,"message":"938","line":223,"column":19,"nodeType":"935","messageId":"936","endLine":223,"endColumn":27},{"ruleId":"933","severity":1,"message":"1003","line":225,"column":19,"nodeType":"935","messageId":"936","endLine":225,"endColumn":27},{"ruleId":"933","severity":1,"message":"938","line":124,"column":19,"nodeType":"935","messageId":"936","endLine":124,"endColumn":27},{"ruleId":"933","severity":1,"message":"1003","line":126,"column":19,"nodeType":"935","messageId":"936","endLine":126,"endColumn":27},{"ruleId":"933","severity":1,"message":"938","line":127,"column":19,"nodeType":"935","messageId":"936","endLine":127,"endColumn":27},{"ruleId":"933","severity":1,"message":"1003","line":129,"column":19,"nodeType":"935","messageId":"936","endLine":129,"endColumn":27},{"ruleId":"933","severity":1,"message":"938","line":127,"column":19,"nodeType":"935","messageId":"936","endLine":127,"endColumn":27},{"ruleId":"933","severity":1,"message":"1003","line":129,"column":19,"nodeType":"935","messageId":"936","endLine":129,"endColumn":27},{"ruleId":"933","severity":1,"message":"938","line":128,"column":19,"nodeType":"935","messageId":"936","endLine":128,"endColumn":27},{"ruleId":"933","severity":1,"message":"1003","line":130,"column":19,"nodeType":"935","messageId":"936","endLine":130,"endColumn":27},{"ruleId":"933","severity":1,"message":"938","line":126,"column":19,"nodeType":"935","messageId":"936","endLine":126,"endColumn":27},{"ruleId":"933","severity":1,"message":"1004","line":127,"column":18,"nodeType":"935","messageId":"936","endLine":127,"endColumn":25},{"ruleId":"933","severity":1,"message":"1003","line":128,"column":19,"nodeType":"935","messageId":"936","endLine":128,"endColumn":27},{"ruleId":"933","severity":1,"message":"1005","line":182,"column":11,"nodeType":"935","messageId":"936","endLine":182,"endColumn":22},{"ruleId":"933","severity":1,"message":"938","line":125,"column":19,"nodeType":"935","messageId":"936","endLine":125,"endColumn":27},{"ruleId":"933","severity":1,"message":"1003","line":127,"column":19,"nodeType":"935","messageId":"936","endLine":127,"endColumn":27},{"ruleId":"933","severity":1,"message":"1006","line":30,"column":5,"nodeType":"935","messageId":"936","endLine":30,"endColumn":24},{"ruleId":"933","severity":1,"message":"1007","line":10,"column":23,"nodeType":"935","messageId":"936","endLine":10,"endColumn":34},{"ruleId":"933","severity":1,"message":"1008","line":1,"column":28,"nodeType":"935","messageId":"936","endLine":1,"endColumn":36},{"ruleId":"933","severity":1,"message":"1009","line":1,"column":38,"nodeType":"935","messageId":"936","endLine":1,"endColumn":48},{"ruleId":"933","severity":1,"message":"1010","line":3,"column":10,"nodeType":"935","messageId":"936","endLine":3,"endColumn":16},{"ruleId":"933","severity":1,"message":"1011","line":5,"column":10,"nodeType":"935","messageId":"936","endLine":5,"endColumn":13},{"ruleId":"933","severity":1,"message":"1012","line":5,"column":15,"nodeType":"935","messageId":"936","endLine":5,"endColumn":18},{"ruleId":"933","severity":1,"message":"1013","line":5,"column":20,"nodeType":"935","messageId":"936","endLine":5,"endColumn":39},{"ruleId":"933","severity":1,"message":"984","line":6,"column":10,"nodeType":"935","messageId":"936","endLine":6,"endColumn":17},{"ruleId":"933","severity":1,"message":"1014","line":8,"column":10,"nodeType":"935","messageId":"936","endLine":8,"endColumn":22},{"ruleId":"933","severity":1,"message":"944","line":14,"column":5,"nodeType":"935","messageId":"936","endLine":14,"endColumn":10},{"ruleId":"933","severity":1,"message":"945","line":15,"column":5,"nodeType":"935","messageId":"936","endLine":15,"endColumn":11},{"ruleId":"933","severity":1,"message":"950","line":22,"column":5,"nodeType":"935","messageId":"936","endLine":22,"endColumn":17},{"ruleId":"933","severity":1,"message":"951","line":23,"column":5,"nodeType":"935","messageId":"936","endLine":23,"endColumn":18},{"ruleId":"933","severity":1,"message":"952","line":24,"column":5,"nodeType":"935","messageId":"936","endLine":24,"endColumn":19},{"ruleId":"933","severity":1,"message":"953","line":25,"column":5,"nodeType":"935","messageId":"936","endLine":25,"endColumn":19},{"ruleId":"933","severity":1,"message":"1015","line":27,"column":8,"nodeType":"935","messageId":"936","endLine":27,"endColumn":16},{"ruleId":"933","severity":1,"message":"1016","line":28,"column":8,"nodeType":"935","messageId":"936","endLine":28,"endColumn":17},{"ruleId":"933","severity":1,"message":"1017","line":46,"column":13,"nodeType":"935","messageId":"936","endLine":46,"endColumn":21},{"ruleId":"933","severity":1,"message":"1018","line":47,"column":13,"nodeType":"935","messageId":"936","endLine":47,"endColumn":18},{"ruleId":"933","severity":1,"message":"1019","line":48,"column":21,"nodeType":"935","messageId":"936","endLine":48,"endColumn":32},{"ruleId":"933","severity":1,"message":"980","line":48,"column":34,"nodeType":"935","messageId":"936","endLine":48,"endColumn":41},{"ruleId":"933","severity":1,"message":"948","line":3,"column":8,"nodeType":"935","messageId":"936","endLine":3,"endColumn":18},{"ruleId":"933","severity":1,"message":"949","line":4,"column":8,"nodeType":"935","messageId":"936","endLine":4,"endColumn":18},{"ruleId":"933","severity":1,"message":"1020","line":10,"column":8,"nodeType":"935","messageId":"936","endLine":10,"endColumn":22},{"ruleId":"933","severity":1,"message":"1021","line":2,"column":10,"nodeType":"935","messageId":"936","endLine":2,"endColumn":18},{"ruleId":"933","severity":1,"message":"942","line":8,"column":8,"nodeType":"935","messageId":"936","endLine":8,"endColumn":11},{"ruleId":"933","severity":1,"message":"1022","line":9,"column":8,"nodeType":"935","messageId":"936","endLine":9,"endColumn":12},{"ruleId":"933","severity":1,"message":"1023","line":10,"column":8,"nodeType":"935","messageId":"936","endLine":10,"endColumn":19},{"ruleId":"933","severity":1,"message":"1024","line":11,"column":8,"nodeType":"935","messageId":"936","endLine":11,"endColumn":19},{"ruleId":"933","severity":1,"message":"945","line":13,"column":8,"nodeType":"935","messageId":"936","endLine":13,"endColumn":14},{"ruleId":"933","severity":1,"message":"949","line":14,"column":8,"nodeType":"935","messageId":"936","endLine":14,"endColumn":18},{"ruleId":"933","severity":1,"message":"1025","line":21,"column":8,"nodeType":"935","messageId":"936","endLine":21,"endColumn":15},{"ruleId":"933","severity":1,"message":"1026","line":1,"column":16,"nodeType":"935","messageId":"936","endLine":1,"endColumn":20},{"ruleId":"933","severity":1,"message":"985","line":10,"column":8,"nodeType":"935","messageId":"936","endLine":10,"endColumn":18},{"ruleId":"933","severity":1,"message":"1027","line":1,"column":23,"nodeType":"935","messageId":"936","endLine":1,"endColumn":30},{"ruleId":"933","severity":1,"message":"1028","line":2,"column":8,"nodeType":"935","messageId":"936","endLine":2,"endColumn":15},{"ruleId":"933","severity":1,"message":"954","line":6,"column":8,"nodeType":"935","messageId":"936","endLine":6,"endColumn":13},{"ruleId":"933","severity":1,"message":"1029","line":7,"column":8,"nodeType":"935","messageId":"936","endLine":7,"endColumn":18},{"ruleId":"933","severity":1,"message":"1008","line":1,"column":28,"nodeType":"935","messageId":"936","endLine":1,"endColumn":36},{"ruleId":"933","severity":1,"message":"1030","line":4,"column":18,"nodeType":"935","messageId":"936","endLine":4,"endColumn":23},{"ruleId":"933","severity":1,"message":"1031","line":9,"column":8,"nodeType":"935","messageId":"936","endLine":9,"endColumn":18},{"ruleId":"933","severity":1,"message":"1032","line":37,"column":7,"nodeType":"935","messageId":"936","endLine":37,"endColumn":22},{"ruleId":"933","severity":1,"message":"1033","line":51,"column":7,"nodeType":"935","messageId":"936","endLine":51,"endColumn":24},{"ruleId":"933","severity":1,"message":"942","line":5,"column":8,"nodeType":"935","messageId":"936","endLine":5,"endColumn":11},{"ruleId":"933","severity":1,"message":"1034","line":7,"column":8,"nodeType":"935","messageId":"936","endLine":7,"endColumn":12},{"ruleId":"933","severity":1,"message":"996","line":10,"column":7,"nodeType":"935","messageId":"936","endLine":10,"endColumn":11},{"ruleId":"1035","severity":1,"message":"1036","line":45,"column":1,"nodeType":"1037","messageId":"1038","endLine":61,"endColumn":24},{"ruleId":"1039","severity":1,"message":"1040","line":13,"column":231,"nodeType":"1041","messageId":"1042","endLine":13,"endColumn":255},{"ruleId":"1039","severity":1,"message":"1040","line":44,"column":231,"nodeType":"1041","messageId":"1042","endLine":44,"endColumn":247},{"ruleId":"933","severity":1,"message":"1008","line":2,"column":38,"nodeType":"935","messageId":"936","endLine":2,"endColumn":46},{"ruleId":"933","severity":1,"message":"1043","line":3,"column":8,"nodeType":"935","messageId":"936","endLine":3,"endColumn":14},{"ruleId":"933","severity":1,"message":"954","line":6,"column":8,"nodeType":"935","messageId":"936","endLine":6,"endColumn":13},{"ruleId":"933","severity":1,"message":"1044","line":17,"column":7,"nodeType":"935","messageId":"936","endLine":17,"endColumn":13},{"ruleId":"933","severity":1,"message":"1045","line":50,"column":11,"nodeType":"935","messageId":"936","endLine":50,"endColumn":17},{"ruleId":"933","severity":1,"message":"1008","line":1,"column":27,"nodeType":"935","messageId":"936","endLine":1,"endColumn":35},{"ruleId":"933","severity":1,"message":"1009","line":1,"column":37,"nodeType":"935","messageId":"936","endLine":1,"endColumn":47},{"ruleId":"933","severity":1,"message":"1010","line":3,"column":10,"nodeType":"935","messageId":"936","endLine":3,"endColumn":16},{"ruleId":"933","severity":1,"message":"1011","line":5,"column":10,"nodeType":"935","messageId":"936","endLine":5,"endColumn":13},{"ruleId":"933","severity":1,"message":"1012","line":5,"column":15,"nodeType":"935","messageId":"936","endLine":5,"endColumn":18},{"ruleId":"933","severity":1,"message":"1013","line":5,"column":20,"nodeType":"935","messageId":"936","endLine":5,"endColumn":39},{"ruleId":"933","severity":1,"message":"984","line":6,"column":10,"nodeType":"935","messageId":"936","endLine":6,"endColumn":17},{"ruleId":"933","severity":1,"message":"943","line":10,"column":5,"nodeType":"935","messageId":"936","endLine":10,"endColumn":9},{"ruleId":"933","severity":1,"message":"944","line":11,"column":5,"nodeType":"935","messageId":"936","endLine":11,"endColumn":10},{"ruleId":"933","severity":1,"message":"945","line":12,"column":5,"nodeType":"935","messageId":"936","endLine":12,"endColumn":11},{"ruleId":"933","severity":1,"message":"940","line":13,"column":5,"nodeType":"935","messageId":"936","endLine":13,"endColumn":11},{"ruleId":"933","severity":1,"message":"950","line":18,"column":5,"nodeType":"935","messageId":"936","endLine":18,"endColumn":17},{"ruleId":"933","severity":1,"message":"951","line":19,"column":5,"nodeType":"935","messageId":"936","endLine":19,"endColumn":18},{"ruleId":"933","severity":1,"message":"952","line":20,"column":5,"nodeType":"935","messageId":"936","endLine":20,"endColumn":19},{"ruleId":"933","severity":1,"message":"953","line":21,"column":5,"nodeType":"935","messageId":"936","endLine":21,"endColumn":19},{"ruleId":"933","severity":1,"message":"1015","line":23,"column":8,"nodeType":"935","messageId":"936","endLine":23,"endColumn":16},{"ruleId":"933","severity":1,"message":"1016","line":24,"column":8,"nodeType":"935","messageId":"936","endLine":24,"endColumn":17},{"ruleId":"933","severity":1,"message":"1019","line":37,"column":21,"nodeType":"935","messageId":"936","endLine":37,"endColumn":32},{"ruleId":"933","severity":1,"message":"980","line":37,"column":34,"nodeType":"935","messageId":"936","endLine":37,"endColumn":41},{"ruleId":"933","severity":1,"message":"1046","line":19,"column":12,"nodeType":"935","messageId":"936","endLine":19,"endColumn":25},{"ruleId":"933","severity":1,"message":"1047","line":11,"column":10,"nodeType":"935","messageId":"936","endLine":11,"endColumn":24},{"ruleId":"933","severity":1,"message":"1048","line":15,"column":10,"nodeType":"935","messageId":"936","endLine":15,"endColumn":19},{"ruleId":"933","severity":1,"message":"1049","line":16,"column":10,"nodeType":"935","messageId":"936","endLine":16,"endColumn":18},{"ruleId":"933","severity":1,"message":"1018","line":49,"column":13,"nodeType":"935","messageId":"936","endLine":49,"endColumn":18},{"ruleId":"933","severity":1,"message":"1019","line":50,"column":21,"nodeType":"935","messageId":"936","endLine":50,"endColumn":32},{"ruleId":"933","severity":1,"message":"980","line":50,"column":34,"nodeType":"935","messageId":"936","endLine":50,"endColumn":41},{"ruleId":"933","severity":1,"message":"1050","line":52,"column":9,"nodeType":"935","messageId":"936","endLine":52,"endColumn":19},{"ruleId":"933","severity":1,"message":"1046","line":64,"column":12,"nodeType":"935","messageId":"936","endLine":64,"endColumn":25},{"ruleId":"933","severity":1,"message":"1047","line":11,"column":10,"nodeType":"935","messageId":"936","endLine":11,"endColumn":24},{"ruleId":"933","severity":1,"message":"1051","line":14,"column":10,"nodeType":"935","messageId":"936","endLine":14,"endColumn":26},{"ruleId":"933","severity":1,"message":"1048","line":15,"column":10,"nodeType":"935","messageId":"936","endLine":15,"endColumn":19},{"ruleId":"933","severity":1,"message":"1046","line":48,"column":12,"nodeType":"935","messageId":"936","endLine":48,"endColumn":25},{"ruleId":"933","severity":1,"message":"1052","line":52,"column":13,"nodeType":"935","messageId":"936","endLine":52,"endColumn":19},{"ruleId":"933","severity":1,"message":"1019","line":52,"column":21,"nodeType":"935","messageId":"936","endLine":52,"endColumn":32},{"ruleId":"933","severity":1,"message":"980","line":52,"column":34,"nodeType":"935","messageId":"936","endLine":52,"endColumn":41},{"ruleId":"933","severity":1,"message":"1050","line":54,"column":9,"nodeType":"935","messageId":"936","endLine":54,"endColumn":19},{"ruleId":"933","severity":1,"message":"968","line":7,"column":9,"nodeType":"935","messageId":"936","endLine":7,"endColumn":13},{"ruleId":"933","severity":1,"message":"1047","line":11,"column":10,"nodeType":"935","messageId":"936","endLine":11,"endColumn":24},{"ruleId":"933","severity":1,"message":"1048","line":15,"column":10,"nodeType":"935","messageId":"936","endLine":15,"endColumn":19},{"ruleId":"933","severity":1,"message":"1049","line":16,"column":10,"nodeType":"935","messageId":"936","endLine":16,"endColumn":18},{"ruleId":"933","severity":1,"message":"1018","line":50,"column":13,"nodeType":"935","messageId":"936","endLine":50,"endColumn":18},{"ruleId":"933","severity":1,"message":"1052","line":51,"column":13,"nodeType":"935","messageId":"936","endLine":51,"endColumn":19},{"ruleId":"933","severity":1,"message":"1019","line":51,"column":21,"nodeType":"935","messageId":"936","endLine":51,"endColumn":32},{"ruleId":"933","severity":1,"message":"980","line":51,"column":34,"nodeType":"935","messageId":"936","endLine":51,"endColumn":41},{"ruleId":"933","severity":1,"message":"1053","line":4,"column":8,"nodeType":"935","messageId":"936","endLine":4,"endColumn":21},{"ruleId":"933","severity":1,"message":"1048","line":9,"column":10,"nodeType":"935","messageId":"936","endLine":9,"endColumn":19},{"ruleId":"933","severity":1,"message":"1054","line":13,"column":11,"nodeType":"935","messageId":"936","endLine":13,"endColumn":19},{"ruleId":"933","severity":1,"message":"1008","line":1,"column":28,"nodeType":"935","messageId":"936","endLine":1,"endColumn":36},{"ruleId":"933","severity":1,"message":"968","line":3,"column":10,"nodeType":"935","messageId":"936","endLine":3,"endColumn":14},{"ruleId":"933","severity":1,"message":"1055","line":7,"column":8,"nodeType":"935","messageId":"936","endLine":7,"endColumn":29},{"ruleId":"933","severity":1,"message":"1056","line":9,"column":8,"nodeType":"935","messageId":"936","endLine":9,"endColumn":17},{"ruleId":"933","severity":1,"message":"1022","line":11,"column":10,"nodeType":"935","messageId":"936","endLine":11,"endColumn":14},{"ruleId":"933","severity":1,"message":"1057","line":15,"column":8,"nodeType":"935","messageId":"936","endLine":15,"endColumn":16},{"ruleId":"933","severity":1,"message":"1058","line":17,"column":8,"nodeType":"935","messageId":"936","endLine":17,"endColumn":19},{"ruleId":"933","severity":1,"message":"1059","line":19,"column":8,"nodeType":"935","messageId":"936","endLine":19,"endColumn":25},{"ruleId":"933","severity":1,"message":"1060","line":20,"column":8,"nodeType":"935","messageId":"936","endLine":20,"endColumn":28},{"ruleId":"933","severity":1,"message":"1061","line":25,"column":10,"nodeType":"935","messageId":"936","endLine":25,"endColumn":19},{"ruleId":"933","severity":1,"message":"1062","line":26,"column":21,"nodeType":"935","messageId":"936","endLine":26,"endColumn":26},{"ruleId":"933","severity":1,"message":"1063","line":27,"column":28,"nodeType":"935","messageId":"936","endLine":27,"endColumn":41},{"ruleId":"933","severity":1,"message":"1048","line":28,"column":10,"nodeType":"935","messageId":"936","endLine":28,"endColumn":19},{"ruleId":"933","severity":1,"message":"1049","line":29,"column":10,"nodeType":"935","messageId":"936","endLine":29,"endColumn":18},{"ruleId":"933","severity":1,"message":"1064","line":32,"column":8,"nodeType":"935","messageId":"936","endLine":32,"endColumn":12},{"ruleId":"933","severity":1,"message":"1065","line":118,"column":9,"nodeType":"935","messageId":"936","endLine":118,"endColumn":26},{"ruleId":"933","severity":1,"message":"1066","line":128,"column":9,"nodeType":"935","messageId":"936","endLine":128,"endColumn":25},{"ruleId":"933","severity":1,"message":"1067","line":10,"column":8,"nodeType":"935","messageId":"936","endLine":10,"endColumn":13},{"ruleId":"933","severity":1,"message":"1068","line":11,"column":8,"nodeType":"935","messageId":"936","endLine":11,"endColumn":20},{"ruleId":"933","severity":1,"message":"1069","line":36,"column":10,"nodeType":"935","messageId":"936","endLine":36,"endColumn":16},{"ruleId":"933","severity":1,"message":"1070","line":36,"column":18,"nodeType":"935","messageId":"936","endLine":36,"endColumn":27},{"ruleId":"933","severity":1,"message":"1071","line":38,"column":34,"nodeType":"935","messageId":"936","endLine":38,"endColumn":39},{"ruleId":"933","severity":1,"message":"1072","line":38,"column":41,"nodeType":"935","messageId":"936","endLine":38,"endColumn":48},{"ruleId":"933","severity":1,"message":"1049","line":9,"column":10,"nodeType":"935","messageId":"936","endLine":9,"endColumn":18},{"ruleId":"933","severity":1,"message":"1073","line":9,"column":32,"nodeType":"935","messageId":"936","endLine":9,"endColumn":43},{"ruleId":"933","severity":1,"message":"1074","line":10,"column":10,"nodeType":"935","messageId":"936","endLine":10,"endColumn":27},{"ruleId":"933","severity":1,"message":"1075","line":35,"column":11,"nodeType":"935","messageId":"936","endLine":35,"endColumn":16},{"ruleId":"933","severity":1,"message":"1076","line":38,"column":22,"nodeType":"935","messageId":"936","endLine":38,"endColumn":27},{"ruleId":"933","severity":1,"message":"1077","line":39,"column":13,"nodeType":"935","messageId":"936","endLine":39,"endColumn":22},{"ruleId":"933","severity":1,"message":"1078","line":115,"column":9,"nodeType":"935","messageId":"936","endLine":115,"endColumn":17},{"ruleId":"933","severity":1,"message":"1079","line":116,"column":9,"nodeType":"935","messageId":"936","endLine":116,"endColumn":22},{"ruleId":"933","severity":1,"message":"968","line":4,"column":10,"nodeType":"935","messageId":"936","endLine":4,"endColumn":14},{"ruleId":"933","severity":1,"message":"978","line":6,"column":8,"nodeType":"935","messageId":"936","endLine":6,"endColumn":14},{"ruleId":"933","severity":1,"message":"1080","line":67,"column":7,"nodeType":"935","messageId":"936","endLine":67,"endColumn":23},{"ruleId":"933","severity":1,"message":"1081","line":70,"column":7,"nodeType":"935","messageId":"936","endLine":70,"endColumn":10},"no-native-reassign",["1082"],"no-negated-in-lhs",["1083"],"no-unused-vars","'ProductsList' is defined but never used.","Identifier","unusedVar","'UsersList' is defined but never used.","'setPrice' is assigned a value but never used.","'Helmet' is defined but never used.","'Avatar' is defined but never used.","'updateImageIlls' is defined but never used.","'Box' is defined but never used.","'List' is defined but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","'Tooltip' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'ListItemText' is defined but never used.","'ListSubheader' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemButton' is defined but never used.","'Paper' is defined but never used.","'Icon' is defined but never used.","'doneAllFill' is defined but never used.","'isDashboard' is assigned a value but never used.","'setIsDashboard' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkDashboard'. Either include it or remove the dependency array.","ArrayExpression",["1084"],"'setMobileOpen' is assigned a value but never used.","'Backdrop' is defined but never used.","'AddBoxIcon' is defined but never used.","'Modal' is defined but never used.","'Fade' is defined but never used.","'Link' is defined but never used.","'Sidebar' is defined but never used.","'style' is assigned a value but never used.","'open' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["1085"],"'submitHandler' is assigned a value but never used.","'Fragment' is defined but never used.",["1086"],"'Loader' is defined but never used.",["1087"],"'loading' is assigned a value but never used.",["1088"],"'PropTypes' is defined but never used.","'CssBaseline' is defined but never used.","'Popover' is defined but never used.","'SideDrawer' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'ThemeProvider' is defined but never used.","'Col' is defined but never used.","'emphasize' is defined but never used.","'withStyles' is defined but never used.","'MobileSideBar' is defined but never used.","'EditIcon' is defined but never used.","'ArchiveIcon' is defined but never used.","'FileCopyIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","'Item' is assigned a value but never used.","'drawer' is assigned a value but never used.","'setDrawer' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'id' is assigned a value but never used.","'CardInfo' is assigned a value but never used.","'Login' is assigned a value but never used.","'setColor' is assigned a value but never used.","'setSize' is assigned a value but never used.","'productSize' is assigned a value but never used.","'DELETE_REVIEW_RESET' is defined but never used.","'setAllOrder' is assigned a value but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'noCase' is defined but never used.","'set' is defined but never used.","'sub' is defined but never used.","'formatDistanceToNow' is defined but never used.","'OrderContext' is defined but never used.","'bellFill' is defined but never used.","'clockFill' is defined but never used.","'products' is assigned a value but never used.","'users' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'CategoriesData' is defined but never used.","'Carousel' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Product' is defined but never used.","'memo' is defined but never used.","'useMemo' is defined but never used.","'Toolbar' is defined but never used.","'NewProduct' is defined but never used.","'alpha' is defined but never used.","'SearchIcon' is defined but never used.","'StyledInputBase' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'Grid' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'styled' is defined but never used.","'schema' is assigned a value but never used.","'formik' is assigned a value but never used.","'isAllProducts' is assigned a value but never used.","'fShortenNumber' is defined but never used.","'allOrders' is defined but never used.","'allUsers' is defined but never used.","'outOfStock' is assigned a value but never used.","'getAdminProducts' is defined but never used.","'orders' is assigned a value but never used.","'androidFilled' is defined but never used.","'dispatch' is assigned a value but never used.","'unorderedListOutlined' is defined but never used.","'TabMobile' is defined but never used.","'PRODUCTS' is defined but never used.","'ProductSort' is defined but never used.","'ProductCartWidget' is defined but never used.","'ProductFilterSidebar' is defined but never used.","'useFormik' is defined but never used.","'Stack' is defined but never used.","'deleteProduct' is defined but never used.","'User' is defined but never used.","'productsGridsData' is assigned a value but never used.","'productsInfoData' is assigned a value but never used.","'Label' is defined but never used.","'ColorPreview' is defined but never used.","'rating' is assigned a value but never used.","'setRating' is assigned a value but never used.","'stock' is assigned a value but never used.","'ratings' is assigned a value but never used.","'clearErrors' is defined but never used.","'DELETE_USER_RESET' is defined but never used.","'alert' is assigned a value but never used.","'error' is assigned a value but never used.","'isDeleted' is assigned a value but never used.","'isMobile' is assigned a value but never used.","'isSmallMobile' is assigned a value but never used.","'MobileBannerItem' is assigned a value but never used.","'IMG' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1089","fix":"1090"},{"desc":"1089","fix":"1091"},{"desc":"1089","fix":"1092"},{"desc":"1089","fix":"1093"},{"desc":"1089","fix":"1094"},"Update the dependencies array to be: [checkDashboard]",{"range":"1095","text":"1096"},{"range":"1097","text":"1096"},{"range":"1098","text":"1096"},{"range":"1099","text":"1096"},{"range":"1100","text":"1096"},[2132,2134],"[checkDashboard]",[2489,2491],[1739,1741],[2590,2592],[1713,1715]]