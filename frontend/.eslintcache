[{"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\index.js":"1","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\App.js":"2","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\store.js":"3","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\About.js":"4","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Risk.js":"5","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Footer.js":"6","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Home.js":"7","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Header.js":"8","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\HeaderBSN.js":"9","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Nutrition_hero.js":"10","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\product\\ProductDetails.js":"11","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Dash.js":"12","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\product\\Topsell.js":"13","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Contact.js":"14","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Shop.js":"15","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\ConfirmOrder.js":"16","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\Shipping.js":"17","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\order\\OrderDetails.js":"18","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\OrderSuccess.js":"19","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\Payment.js":"20","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\Cart.js":"21","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\UpdateProfile.js":"22","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\order\\ListOrders.js":"23","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\Login.js":"24","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\Register.js":"25","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\UpdatePassword.js":"26","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\NewPassword.js":"27","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\Profile.js":"28","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\ProductsList.js":"29","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\NewProduct.js":"30","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\Dashboard.js":"31","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\ForgotPassword.js":"32","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\UpdateProduct.js":"33","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\OrdersList.js":"34","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\UsersList.js":"35","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\ProductReviews.js":"36","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Category.js":"37","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\route\\ProtectedRoute.js":"38","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\UpdateUser.js":"39","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\actions\\userActions.js":"40","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\ProcessOrder.js":"41","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\farm\\Farm.js":"42","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\reducers\\productReducers.js":"43","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\reducers\\cartReducers.js":"44","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\reducers\\userReducers.js":"45","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\reducers\\orderReducers.js":"46","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\about\\Main.js":"47","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\actions\\orderActions.js":"48","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\about\\Header.js":"49","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Loader.js":"50","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\Sidebar.js":"51","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\actions\\productActions.js":"52","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\MetaData.js":"53","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Risk\\Header.js":"54","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Risk\\Main.js":"55","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\constants\\userConstants.js":"56","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\constants\\productConstants.js":"57","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\constants\\orderConstants.js":"58","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\farm\\Header.js":"59","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\constants\\cartConstants.js":"60","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\LoginForm.js":"61","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Risk\\Slider.js":"62","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\farm\\styles\\styleHeader.js":"63","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\sectionIdentifier\\Title.js":"64","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\sectionIdentifier\\IntroText.js":"65","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\about\\Banner_svg.js":"66","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Bank.js":"67","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\CheckoutSteps.js":"68","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\actions\\cartActions.js":"69","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\product\\ProductList.js":"70","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Grid.js":"71","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\List.js":"72","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Catego.js":"73","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Select.js":"74","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Input.js":"75","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\product\\Product.js":"76","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Search.js":"77","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\review\\ListReviews.js":"78","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\ButtonEight.js":"79","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\Contact.tsx":"80","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\Contact.js":"81","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\CtForm.js":"82","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\steps\\Personal.js":"83","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\steps\\Message.js":"84","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\steps\\Business.js":"85","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\RealEstate.js":"86","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\buttonSix.js":"87","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\buttonNine.js":"88","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\buttonSeven.js":"89","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\Realtymb.js":"90","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\realty_about_layout.js":"91","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\Contact_btn.js":"92","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\ButtonThree.js":"93","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\buttonOne.js":"94","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\Slick.js":"95","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\SlickInvestment.js":"96","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\SlickProperty.js":"97","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Navbar.js":"98","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\SidebarData.js":"99","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Boostrapp.js":"100","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\main\\Main_Tablet.js":"101","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\main\\Main_Mobile.js":"102","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\main\\Main_Desktop.js":"103","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\IMG\\Mobile.js":"104","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\IMG\\MobileB.js":"105","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\IMG\\MobileC.js":"106","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\ButtonPrt.js":"107"},{"size":592,"mtime":1624882829304,"results":"108","hashOfConfig":"109"},{"size":6874,"mtime":1630447727651,"results":"110","hashOfConfig":"109"},{"size":1734,"mtime":1616094078238,"results":"111","hashOfConfig":"109"},{"size":488,"mtime":1621001492221,"results":"112","hashOfConfig":"109"},{"size":501,"mtime":1630341132159,"results":"113","hashOfConfig":"109"},{"size":8131,"mtime":1629984233339,"results":"114","hashOfConfig":"109"},{"size":52443,"mtime":1630447840648,"results":"115","hashOfConfig":"109"},{"size":9358,"mtime":1620998475455,"results":"116","hashOfConfig":"109"},{"size":3304,"mtime":1630108438894,"results":"117","hashOfConfig":"109"},{"size":1597,"mtime":1616703294559,"results":"118","hashOfConfig":"109"},{"size":10190,"mtime":1624817781016,"results":"119","hashOfConfig":"109"},{"size":3049,"mtime":1616627791916,"results":"120","hashOfConfig":"109"},{"size":2277,"mtime":1624817845023,"results":"121","hashOfConfig":"109"},{"size":2218,"mtime":1630447878976,"results":"122","hashOfConfig":"109"},{"size":17332,"mtime":1630447849795,"results":"123","hashOfConfig":"109"},{"size":3736,"mtime":1615205329000,"results":"124","hashOfConfig":"109"},{"size":4762,"mtime":1615205329000,"results":"125","hashOfConfig":"109"},{"size":3770,"mtime":1617572869509,"results":"126","hashOfConfig":"109"},{"size":732,"mtime":1615205329000,"results":"127","hashOfConfig":"109"},{"size":5498,"mtime":1615205329000,"results":"128","hashOfConfig":"109"},{"size":50918,"mtime":1630447751894,"results":"129","hashOfConfig":"109"},{"size":5082,"mtime":1630447821056,"results":"130","hashOfConfig":"109"},{"size":6424,"mtime":1617739636537,"results":"131","hashOfConfig":"109"},{"size":3438,"mtime":1629937795549,"results":"132","hashOfConfig":"109"},{"size":10526,"mtime":1630447887716,"results":"133","hashOfConfig":"109"},{"size":2922,"mtime":1615205329000,"results":"134","hashOfConfig":"109"},{"size":2924,"mtime":1615205329000,"results":"135","hashOfConfig":"109"},{"size":8035,"mtime":1617570652815,"results":"136","hashOfConfig":"109"},{"size":3788,"mtime":1615205329000,"results":"137","hashOfConfig":"109"},{"size":8160,"mtime":1616413131658,"results":"138","hashOfConfig":"109"},{"size":5943,"mtime":1617467281367,"results":"139","hashOfConfig":"109"},{"size":5889,"mtime":1630447790646,"results":"140","hashOfConfig":"109"},{"size":11003,"mtime":1617010514550,"results":"141","hashOfConfig":"109"},{"size":3830,"mtime":1615205329000,"results":"142","hashOfConfig":"109"},{"size":3543,"mtime":1615205329000,"results":"143","hashOfConfig":"109"},{"size":5063,"mtime":1615205329000,"results":"144","hashOfConfig":"109"},{"size":1462,"mtime":1617359614786,"results":"145","hashOfConfig":"109"},{"size":920,"mtime":1630449212289,"results":"146","hashOfConfig":"109"},{"size":4587,"mtime":1615205329000,"results":"147","hashOfConfig":"109"},{"size":7420,"mtime":1615205329000,"results":"148","hashOfConfig":"109"},{"size":6278,"mtime":1615205329000,"results":"149","hashOfConfig":"109"},{"size":245,"mtime":1620238486759,"results":"150","hashOfConfig":"109"},{"size":6961,"mtime":1615205329000,"results":"151","hashOfConfig":"109"},{"size":1107,"mtime":1615205329000,"results":"152","hashOfConfig":"109"},{"size":6373,"mtime":1615205329000,"results":"153","hashOfConfig":"109"},{"size":4375,"mtime":1615205329000,"results":"154","hashOfConfig":"109"},{"size":38768,"mtime":1630447812557,"results":"155","hashOfConfig":"109"},{"size":3664,"mtime":1615205329000,"results":"156","hashOfConfig":"109"},{"size":3694,"mtime":1630447958770,"results":"157","hashOfConfig":"109"},{"size":134,"mtime":1615205329000,"results":"158","hashOfConfig":"109"},{"size":1638,"mtime":1615205329000,"results":"159","hashOfConfig":"109"},{"size":6332,"mtime":1617009195139,"results":"160","hashOfConfig":"109"},{"size":229,"mtime":1615205329000,"results":"161","hashOfConfig":"109"},{"size":8089,"mtime":1630356654454,"results":"162","hashOfConfig":"109"},{"size":19889,"mtime":1630447848369,"results":"163","hashOfConfig":"109"},{"size":2213,"mtime":1615205329000,"results":"164","hashOfConfig":"109"},{"size":1905,"mtime":1615205329000,"results":"165","hashOfConfig":"109"},{"size":1160,"mtime":1615205329000,"results":"166","hashOfConfig":"109"},{"size":535,"mtime":1620244897362,"results":"167","hashOfConfig":"109"},{"size":146,"mtime":1615205329000,"results":"168","hashOfConfig":"109"},{"size":11154,"mtime":1617441819365,"results":"169","hashOfConfig":"109"},{"size":1554,"mtime":1630342479059,"results":"170","hashOfConfig":"109"},{"size":0,"mtime":1620290258391,"results":"171","hashOfConfig":"109"},{"size":283,"mtime":1619200529437,"results":"172","hashOfConfig":"109"},{"size":412,"mtime":1619252595126,"results":"173","hashOfConfig":"109"},{"size":139405,"mtime":1618395209912,"results":"174","hashOfConfig":"109"},{"size":2456,"mtime":1629936374536,"results":"175","hashOfConfig":"109"},{"size":1844,"mtime":1615205329000,"results":"176","hashOfConfig":"109"},{"size":1214,"mtime":1617717785890,"results":"177","hashOfConfig":"109"},{"size":3877,"mtime":1624818125071,"results":"178","hashOfConfig":"109"},{"size":147,"mtime":1617286471780,"results":"179","hashOfConfig":"109"},{"size":147,"mtime":1617286452502,"results":"180","hashOfConfig":"109"},{"size":2965,"mtime":1629936463873,"results":"181","hashOfConfig":"109"},{"size":1864,"mtime":1617282839456,"results":"182","hashOfConfig":"109"},{"size":1416,"mtime":1621013423925,"results":"183","hashOfConfig":"109"},{"size":3731,"mtime":1629660529601,"results":"184","hashOfConfig":"109"},{"size":1209,"mtime":1617361520525,"results":"185","hashOfConfig":"109"},{"size":714,"mtime":1615205329000,"results":"186","hashOfConfig":"109"},{"size":391,"mtime":1630062815378,"results":"187","hashOfConfig":"109"},{"size":5045,"mtime":1621287562554,"results":"188","hashOfConfig":"109"},{"size":1682,"mtime":1621287574029,"results":"189","hashOfConfig":"109"},{"size":6829,"mtime":1630447756388,"results":"190","hashOfConfig":"109"},{"size":1673,"mtime":1630447784517,"results":"191","hashOfConfig":"109"},{"size":3233,"mtime":1630447779095,"results":"192","hashOfConfig":"109"},{"size":2087,"mtime":1630447773351,"results":"193","hashOfConfig":"109"},{"size":41105,"mtime":1630077940490,"results":"194","hashOfConfig":"109"},{"size":486,"mtime":1624884521336,"results":"195","hashOfConfig":"109"},{"size":352,"mtime":1630064978051,"results":"196","hashOfConfig":"109"},{"size":353,"mtime":1630065590156,"results":"197","hashOfConfig":"109"},{"size":25700,"mtime":1629984718294,"results":"198","hashOfConfig":"109"},{"size":3038,"mtime":1624621869654,"results":"199","hashOfConfig":"109"},{"size":501,"mtime":1624621667529,"results":"200","hashOfConfig":"109"},{"size":317,"mtime":1624621682169,"results":"201","hashOfConfig":"109"},{"size":313,"mtime":1624621697605,"results":"202","hashOfConfig":"109"},{"size":3526,"mtime":1629839307894,"results":"203","hashOfConfig":"109"},{"size":3540,"mtime":1629839279922,"results":"204","hashOfConfig":"109"},{"size":3550,"mtime":1626020688140,"results":"205","hashOfConfig":"109"},{"size":3273,"mtime":1630108914874,"results":"206","hashOfConfig":"109"},{"size":910,"mtime":1630447868078,"results":"207","hashOfConfig":"109"},{"size":239,"mtime":1626022474606,"results":"208","hashOfConfig":"109"},{"size":425,"mtime":1626280427340,"results":"209","hashOfConfig":"109"},{"size":9620,"mtime":1626299984136,"results":"210","hashOfConfig":"109"},{"size":60455,"mtime":1630448268847,"results":"211","hashOfConfig":"109"},{"size":1601,"mtime":1629835585033,"results":"212","hashOfConfig":"109"},{"size":1883,"mtime":1629838017691,"results":"213","hashOfConfig":"109"},{"size":1149,"mtime":1629838442319,"results":"214","hashOfConfig":"109"},{"size":365,"mtime":1630066072655,"results":"215","hashOfConfig":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},"vp7mhg",{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"218"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"218"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"218"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"218"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"218"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"218"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"218"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"218"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"218"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"218"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"218"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"218"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"218"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"218"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"218"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"218"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"218"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"218"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"218"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"359"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"218"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"218"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"218"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"218"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"218"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"218"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"218"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\index.js",[],["461","462"],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\App.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\store.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\About.js",["463"],"import React, { Fragment, useEffect } from 'react'\r\nimport './components/about/about.min.css'\r\nimport Header from './components/about/Header'\r\nimport Nav from \"./components/layout/Header\"\r\nimport Main from './components/about/Main'\r\n\r\nconst About = () => {\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Nav />\r\n            <div className=\"farm_about\">\r\n                <Header />\r\n                <Main />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Risk.js",["464","465"],"import React, { useEffect } from 'react'\r\nimport { Fragment } from 'react'\r\nimport Header from '../components/layout/Risk/Header'\r\nimport Main from '../components/layout/Risk/Main'\r\nimport Bootstrap from './Boostrapp'\r\n\r\nexport const Risk = () => {\r\n\r\n    return (\r\n        <div className=\"auditNrisk\">\r\n            <Bootstrap link=\"https://res.cloudinary.com/locataire/raw/upload/v1625499877/bootstrap/bootstrap_nnf8yw.css\" />\r\n            <Header />\r\n            <Main />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Home.js",["466","467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Header from \"../components/layout/Header\"\nimport './layout/mCustomscrollbar.css'\nimport Paginatione from 'react-js-pagination'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\n\nimport MetaData from './layout/MetaData'\nimport Product from './product/Product'\nimport Loader from './layout/Loader'\n\nimport Category from './layout/Category'\nimport Dash from './layout/Dash'\nimport { Link, Route } from 'react-router-dom'\n// import TopSell from './components/product/TopSell.json'\nimport Topsell from './product/Topsell'\nimport { Accordion, Button, Card } from 'react-bootstrap'\nimport chick from '../images/delivery.png'\nimport NutritionHero from './layout/Nutrition_hero'\nimport { HiViewGrid } from 'react-icons/hi'\nimport { FaListUl } from \"react-icons/fa\";\n// import FaThList from 'react-icons/fa'\n\nimport Select from './layout/Select'\nimport CategoriesData from './layout/categories.json'\n\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert';\nimport { getProducts } from '../actions/productActions'\nimport Styled from 'styled-components'\nimport '../styles/Locataire.css'\nimport { Helmet } from 'react-helmet';\n\nimport { StrollableContainer, Stroller, Strollable, StrollCaptor } from \"react-stroller\";\nimport Catego from './layout/Catego';\nimport List from './layout/List';\nimport Grid from './layout/Grid';\nimport ProductList from './product/ProductList';\n// import { Alert } from '@material-ui/lab';\nimport Shop from './Shop';\nimport { BiArrowBack } from 'react-icons/bi';\n\n\n\n// style for product\nconst ProductLayout = Styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n    gap: 3rem;\n    max-width: 130rem;\n    margin: 0 auto;\n    padding: 0 1.6rem;\n`\nconst Section = Styled.section`\n    padding: 10rem 0 5rem 0;\n`\n\n\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range)\n\nconst Home = ({ match }) => {\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([1, 450])\n    const [size, setSize] = useState('')\n    const [color, setColor] = useState('')\n    const [category, setCategory] = useState('')\n    const [rating, setRating] = useState(0)\n\n    const [shopnow, setShopnow] = useState(false)\n\n\n\n\n    const categories = [\n        {\n            \"title\": \"Poultry\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616223744/category/animal_tezmcb.svg\",\n            \"atl\": \"LaiWiv\"\n\n        },\n        {\n            \"title\": \"Fresh Eggs\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/eggs_ca7brk.svg\",\n            \"atl\": \"KTrngrIo\"\n        },\n        {\n            \"title\": \"Pigsty\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/pig_nmfagj.svg\",\n            \"atl\": \"EyCVOYElB\"\n        },\n        {\n            \"title\": \"Goats, Sheep & Mammals\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616223741/category/goat_bwpnmu.svg\",\n            \"atl\": \"EyCVOYElP\"\n\n        },\n        {\n            \"title\": \"Park Animals\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/paw-solid_nllgp5.svg\",\n            \"atl\": \"XgcabxkzflU\"\n        },\n        {\n            \"title\": \"Purebred Seed - ARTIFICIAL INSEMINATION\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616223739/category/dna_pycfwt.svg\",\n            \"atl\": \"tkTOAnrTpGM\"\n\n        },\n        {\n            \"title\": \"Food & Livestock Products\",\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/food_xmnbgo.webp\",\n            \"atl\": \"nnFiNyv\"\n        }\n    ]\n\n    const homecategories = [\n        'Poultry',\n        'Fresh Eggs',\n        'Pigsty',\n        'Goats, Sheep & mammals',\n        'Park Animals',\n        'Purebred Seed - ARTIFICIAL INSEMINATION',\n        'Food & Livestock Products'\n    ]\n\n    const productSize = [\n        '0 KG',\n        '2 KG',\n        '50 KG',\n        '3 L',\n        '5 L',\n        '10 L',\n        'Medium',\n        'Large',\n        'Verrat',\n        'Trout',\n        '1 Dose',\n        '1 T'\n    ]\n\n    const productColor = [\n        'Grey',\n        'White',\n        'Bronze',\n        'Maroon',\n        'Blue',\n        'Black',\n        'Yellow'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n\n        dispatch(getProducts(keyword, currentPage, price, category, rating, size, color));\n\n\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating, size, color])\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount;\n    if (keyword) {\n        count = filteredProductsCount\n    }\n\n\n    const Block = ({ children }) => (\n        <div style={{ height: \"100vh\", position: \"relative\" }}>{children}</div>\n    );\n\n    const [view, setView] = useState();\n    console.log(view)\n\n\n    // MALLE\n    const Malle = (match) => {\n\n        useEffect(() => {\n            var sheet = document.createElement('style')\n            sheet.innerHTML = \".icon_grid-2x2 {color: #02843d;}\";\n            document.body.appendChild(sheet);\n            if (view === false || view === undefined) {\n                sheet.innerHTML = \".icon_grid-2x2 {color: #02843d;}\";\n                sheet.innerHTML = \".icon_ui {color: unset;}\";\n                document.body.appendChild(sheet);\n            } else if (view === true) {\n                sheet.innerHTML = \".icon_grid-2x2 {color: unset;}\";\n                sheet.innerHTML = \".icon_ui {color: #02843d;}\";\n                document.body.appendChild(sheet);\n            }\n            else {\n                console.log(\"nothing to color\")\n            }\n\n\n            const n = document.querySelector(\".icon_ui\");\n\n            console.log(n);\n            console.log(view)\n\n            if (view === false) {\n                const m = document.querySelector(\".icon_grid-2x2\");\n                sheet.innerHTML = \".icon_grid-2x2 {color: #02843d;}\";\n                sheet.innerHTML = \".icon_ui {color: unset;}\";\n                m.style.color = \"#02843d\"\n                document.body.appendChild(sheet);\n                console.log(view + ' from false')\n\n            } else if (view === undefined) {\n                const m = document.querySelector(\".icon_grid-2x2\");\n                sheet.innerHTML = \".icon_grid-2x2 {color: #02843d;}\";\n                sheet.innerHTML = \".icon_ui {color: unset;}\";\n                m.style.color = \"#02843d\"\n                document.body.appendChild(sheet);\n                console.log(view + ' from undefined')\n\n            } else {\n                console.log(\"i just do not knpw\")\n            }\n\n\n        }, [])\n\n        return (\n            <div className=\"category-container\">\n                <Block>\n                    <StrollableContainer draggable>\n                        <aside className=\"category_list\">\n                            {/* <Catego /> */}\n                            <section className=\"filterByPrice\">\n                                <h2 style={{ marginBottom: '3.5rem' }}>filter by price</h2>\n                                <div className=\"filterRange\">\n\n                                    <Range\n                                        marks={{\n                                            1: `$1`,\n                                            450: `$450`\n                                        }}\n                                        min={1}\n                                        max={450}\n                                        defaultValue={[1, 450]}\n                                        tipFormatter={value => `$${value}`}\n                                        tipProps={{\n                                            placement: \"top\",\n                                            visible: true\n                                        }}\n                                        value={price}\n                                    // onChange={price => setPrice(price)}\n                                    />\n                                </div>\n                                {/* <div className=\"totalfilter\">\n                                    <p className=\"total-price_range-title\">price:{\" \"}  ${min} — $450</p>\n                                </div> */}\n                            </section>\n                            <hr id=\"filter_divider\" />\n\n                            <section className=\"filterBySize\" >\n                                <Accordion defaultActiveKey=\"0\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                        <h2 id=\"sizefilter\">filter by size</h2>\n                                    </Accordion.Toggle>\n\n                                    <Accordion.Collapse eventKey=\"0\">\n\n                                        <div className=\"filterSize\">\n                                            <StrollableContainer draggable>\n                                                <ul className=\"filtersize-wrap\">\n                                                    {productSize.map((size) => (\n                                                        <li className=\"size-item\" key={size} onClick={() => setSize(size)} >{size}</li>\n                                                    ))}\n                                                </ul>\n                                            </StrollableContainer>\n                                        </div>\n                                    </Accordion.Collapse>\n\n                                </Accordion>\n                            </section>\n\n                            <hr id=\"filter_divider\" />\n                            <section className=\"filterByRating\">\n                                <Accordion defaultActiveKey=\"0\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                        <h2 className=\"ratefilter\">\n                                            Ratings\n                                        </h2>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <div className=\"filterRating\" >\n                                            <div className=\"filterrating-wrap\">\n\n\n\n                                                <ul className=\"pl-0\">\n                                                    {[5, 4, 3, 2, 1].map(star => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={star}\n                                                            onClick={() => setRating(star)}\n                                                        >\n                                                            <div className=\"rating-outer\">\n                                                                <div className=\"rating-inner\"\n                                                                    style={{\n                                                                        width: `${star * 20}%`\n                                                                    }}\n                                                                >\n                                                                </div>\n                                                            </div>\n                                                        </li>\n                                                    ))}\n                                                </ul>\n\n                                            </div>\n                                        </div>\n                                    </Accordion.Collapse>\n                                </Accordion>\n                            </section>\n                            <hr id=\"filter_divider\" />\n                            <section className=\"filterByName\">\n                                <Accordion defaultActiveKey=\"0\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                        <h2>filter by name</h2>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <div className=\"filterName\">\n                                            <ul className=\"filtername-wrap\">\n\n                                                {\n                                                    categories.map((category) => (\n                                                        <li className=\"name-item\" key={category}\n                                                            onClick={() => setCategory(category.title)}\n                                                        >\n                                                            <div>{category.title}</div>\n                                                        </li>\n                                                    ))\n                                                }\n                                            </ul>\n                                        </div>\n                                    </Accordion.Collapse>\n                                </Accordion>\n                            </section>\n                            {/* </section> */}\n\n                            <hr id=\"filter_divider\" />\n\n                            <section className=\"filterByColor\">\n                                <Accordion defaultActiveKey=\"0\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                        <h2>filter by color</h2>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"0\">\n                                        <div className=\"filterColor\">\n                                            <StrollableContainer draggable>\n                                                <ul className=\"filtercolor-wrap\">\n                                                    {productColor.map((color) => (\n                                                        <li className=\"color-item\" key={color} onClick={() => setColor(color)}>\n                                                            <div className={\"item-inner-color \" + color} />\n                                                            <div className=\"item-inner-text\">{color}</div>\n                                                        </li>\n                                                    ))}\n\n                                                </ul>\n                                            </StrollableContainer>\n                                        </div>\n                                    </Accordion.Collapse>\n                                </Accordion>\n                            </section>\n                        </aside>\n                    </StrollableContainer>\n                </Block>\n\n                <main className=\"category_product_main\" style={{ position: 'relative' }}>\n\n                    <div className=\"search-product-wrap\" >\n                        {/* filter item */}\n                        <div className=\"filter__item\">\n                            <div className=\"top_main-shop-nav\">\n                                <div className=\"back_home\" onClick={() => setShopnow(undefined)}>\n                                    <BiArrowBack />\n                                    <span className=\"home_btn\">\n                                        back\n                                    </span>\n                                </div>\n                                <div className=\"col-lg-4 col-md-5\">\n                                    <div className=\"filter__sort\">\n                                        <Select />\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-4 col-md-4\">\n                                    <div className=\"filter__found\">\n                                        <h6>\n                                            <span>{count}</span>\n                                            Products found\n                                        </h6>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-4 col-md-3\">\n                                    <div className=\"filter__option\">\n                                        <span className=\"icon_grid-2x2\" onClick={() => setView(false)}>\n                                            <HiViewGrid />\n                                        </span>\n                                        <span className=\"icon_ui\" onClick={() => setView(true)}>\n                                            <FaListUl />\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* products */}\n                        <div className={view ? \"col active-list-view\" : (view === false) ? \"row\" : \"row not-active\"}>\n                            {\n                                view ?\n                                    (\n                                        products.map(product => (\n                                            <ProductList key={product._id} product={product} col={4} />\n                                        ))\n                                    )\n\n                                    :\n\n                                    (\n                                        products.map(product => (\n                                            <Product key={product._id} product={product} col={4} />\n                                        ))\n                                    )\n\n                            }\n\n                        </div>\n\n                        {/* Pagination */}\n                        {resPerPage <= count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Paginatione\n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass=\"page-item\"\n                                    linkClass=\"page-link\"\n                                />\n\n                            </div>\n                        )}\n\n                    </div>\n\n\n                </main>\n\n            </div>\n        )\n    }\n\n\n\n\n    return (\n        <Fragment className=\"farmStyle\">\n            <Header />\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Buy Best Products Online'} />\n                    {keyword ? (\n                        <>\n                            <div className=\"category-container\">\n                                <Block>\n                                    <StrollableContainer draggable>\n                                        <aside className=\"category_list\">\n                                            {/* <Catego /> */}\n                                            <section className=\"filterByPrice\">\n                                                <h2 style={{ marginBottom: '3.5rem' }}>filter by price</h2>\n                                                <div className=\"filterRange\">\n\n                                                    <Range\n                                                        marks={{\n                                                            1: `$1`,\n                                                            450: `$450`\n                                                        }}\n                                                        min={1}\n                                                        max={450}\n                                                        defaultValue={[1, 450]}\n                                                        tipFormatter={value => `$${value}`}\n                                                        tipProps={{\n                                                            placement: \"top\",\n                                                            visible: true\n                                                        }}\n                                                        value={price}\n                                                    // onChange={price => setPrice(price)}\n                                                    />\n                                                </div>\n                                                {/* <div className=\"totalfilter\">\n                                    <p className=\"total-price_range-title\">price:{\" \"}  ${min} — $450</p>\n                                </div> */}\n                                            </section>\n                                            <hr id=\"filter_divider\" />\n\n                                            <section className=\"filterBySize\" >\n                                                <Accordion defaultActiveKey=\"0\">\n                                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                                        <h2 id=\"sizefilter\">filter by size</h2>\n                                                    </Accordion.Toggle>\n\n                                                    <Accordion.Collapse eventKey=\"0\">\n\n                                                        <div className=\"filterSize\">\n                                                            <StrollableContainer draggable>\n                                                                <ul className=\"filtersize-wrap\">\n                                                                    {productSize.map((size) => (\n                                                                        <li className=\"size-item\" key={size} onClick={() => setSize(size)} >{size}</li>\n                                                                    ))}\n                                                                </ul>\n                                                            </StrollableContainer>\n                                                        </div>\n                                                    </Accordion.Collapse>\n\n                                                </Accordion>\n                                            </section>\n\n                                            <hr id=\"filter_divider\" />\n                                            <section className=\"filterByRating\">\n                                                <Accordion defaultActiveKey=\"0\">\n                                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                                        <h2 className=\"ratefilter\">\n                                                            Ratings\n                                                        </h2>\n                                                    </Accordion.Toggle>\n                                                    <Accordion.Collapse eventKey=\"0\">\n                                                        <div className=\"filterRating\" >\n                                                            <div className=\"filterrating-wrap\">\n\n\n\n                                                                <ul className=\"pl-0\">\n                                                                    {[5, 4, 3, 2, 1].map(star => (\n                                                                        <li\n                                                                            style={{\n                                                                                cursor: 'pointer',\n                                                                                listStyleType: 'none'\n                                                                            }}\n                                                                            key={star}\n                                                                            onClick={() => setRating(star)}\n                                                                        >\n                                                                            <div className=\"rating-outer\">\n                                                                                <div className=\"rating-inner\"\n                                                                                    style={{\n                                                                                        width: `${star * 20}%`\n                                                                                    }}\n                                                                                >\n                                                                                </div>\n                                                                            </div>\n                                                                        </li>\n                                                                    ))}\n                                                                </ul>\n\n                                                            </div>\n                                                        </div>\n                                                    </Accordion.Collapse>\n                                                </Accordion>\n                                            </section>\n                                            <hr id=\"filter_divider\" />\n                                            <section className=\"filterByName\">\n                                                <Accordion defaultActiveKey=\"0\">\n                                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                                        <h2>filter by name</h2>\n                                                    </Accordion.Toggle>\n                                                    <Accordion.Collapse eventKey=\"0\">\n                                                        <div className=\"filterName\">\n                                                            <ul className=\"filtername-wrap\">\n\n                                                                {\n                                                                    categories.map((category) => (\n                                                                        <li className=\"name-item\" key={category}\n                                                                            onClick={() => setCategory(category.title)}\n                                                                        >\n                                                                            <div>{category.title}</div>\n                                                                        </li>\n                                                                    ))\n                                                                }\n                                                            </ul>\n                                                        </div>\n                                                    </Accordion.Collapse>\n                                                </Accordion>\n                                            </section>\n                                            {/* </section> */}\n\n                                            <hr id=\"filter_divider\" />\n\n                                            <section className=\"filterByColor\">\n                                                <Accordion defaultActiveKey=\"0\">\n                                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                                        <h2>filter by color</h2>\n                                                    </Accordion.Toggle>\n                                                    <Accordion.Collapse eventKey=\"0\">\n                                                        <div className=\"filterColor\">\n                                                            <StrollableContainer draggable>\n                                                                <ul className=\"filtercolor-wrap\">\n                                                                    {productColor.map((color) => (\n                                                                        <li className=\"color-item\" key={color} onClick={() => setColor(color)}>\n                                                                            <div className={\"item-inner-color \" + color} />\n                                                                            <div className=\"item-inner-text\">{color}</div>\n                                                                        </li>\n                                                                    ))}\n\n                                                                </ul>\n                                                            </StrollableContainer>\n                                                        </div>\n                                                    </Accordion.Collapse>\n                                                </Accordion>\n                                            </section>\n                                        </aside>\n                                    </StrollableContainer>\n                                </Block>\n\n                                <main className=\"category_product_main\" style={{ position: 'relative' }}>\n\n                                    <div className=\"search-product-wrap\" >\n                                        {/* filter item */}\n                                        <div className=\"filter__item\">\n                                            <div className=\"row\">\n                                                <div className=\"col-lg-4 col-md-5\">\n                                                    <div className=\"filter__sort\">\n                                                        <Select />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-lg-4 col-md-4\">\n                                                    <div className=\"filter__found\">\n                                                        <h6>\n                                                            <span>{count}</span>\n                                                            Products found\n                                                        </h6>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-lg-4 col-md-3\">\n                                                    <div className=\"filter__option\">\n                                                        <span className=\"icon_grid-2x2\" id=\"gride\" onClick={() => setView(false)}>\n                                                            <HiViewGrid />\n                                                        </span>\n                                                        <span className=\"icon_ui\" id=\"listed\" onClick={() => setView(true)}>\n                                                            <FaListUl />\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {/* products */}\n                                        <div className={view ? \"col active-list-view\" : (view === false) ? \"row\" : \"row not-active\"}>\n                                            {\n                                                view ?\n                                                    (\n                                                        products.map(product => (\n                                                            <ProductList key={product._id} product={product} col={4} />\n                                                        ))\n                                                    )\n\n                                                    :\n\n                                                    (\n                                                        products.map(product => (\n                                                            <Product key={product._id} product={product} col={4} />\n                                                        ))\n                                                    )\n\n                                            }\n\n                                        </div>\n\n                                        {/* Pagination */}\n                                        {resPerPage <= count && (\n                                            <div className=\"d-flex justify-content-center mt-5\">\n                                                <Paginatione\n                                                    activePage={currentPage}\n                                                    itemsCountPerPage={resPerPage}\n                                                    totalItemsCount={productsCount}\n                                                    onChange={setCurrentPageNo}\n                                                    nextPageText={'Next'}\n                                                    prevPageText={'Prev'}\n                                                    firstPageText={'First'}\n                                                    lastPageText={'Last'}\n                                                    itemClass=\"page-item\"\n                                                    linkClass=\"page-link\"\n                                                />\n\n                                            </div>\n                                        )}\n\n                                    </div>\n\n\n                                </main>\n\n                            </div>\n                        </>\n                    ) :\n\n\n                        (\n                            // start\n                            <>\n                                {\n                                    shopnow ?\n                                        (\n                                            <>\n                                                {loading ? <Loader /> : (<Malle />)}\n\n                                            </>\n                                        )\n\n                                        :\n\n\n                                        (\n                                            <>\n                                                {loading ? <Loader />\n                                                    :\n                                                    (\n                                                        <main className=\"farm_wrapper\" id=\"farmhome\">\n                                                            <div className=\"farm_inner-wrap row\">\n                                                                <div className=\"top_container\">\n                                                                    <div className=\"home_category\">\n                                                                        <div className=\"inner_category _bg\">\n                                                                            <Category />\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"hero_news\">\n                                                                        {/* <Wow /> */}\n                                                                    </div>\n                                                                    <div className=\"conv_farm\">\n                                                                        <Dash />\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n                                                            <section className=\"farm_select\">\n                                                                <Link to=\"/farm\" >\n                                                                    <div className=\"farm_select_item row _bg\">\n                                                                        <div className=\"_select_item-icon no-paddding col\">\n                                                                            <img src=\"https://zz.jumia.is/cms/Home-page-content/Quiklinks_DT_NewArrivals_22102020.png\" alt=\"JrpQaneBH\" />\n                                                                        </div>\n                                                                        <div className=\"_select_item-text col\">\n                                                                            <span className=\"select_text\">\n                                                                                new products\n                                                                            </span>\n                                                                        </div>\n                                                                    </div>\n                                                                </Link>\n                                                                <Link to=\"/about\">\n                                                                    <div className=\"farm_select_item row _bg\">\n                                                                        <div className=\"_select_item-icon col\">\n                                                                            <img src=\"https://zz.jumia.is/cms/Home-page-content/Artboard-2.jpg\" alt=\"RrIYoAvdMnOUUQVC\" />\n                                                                        </div>\n                                                                        <div className=\"_select_item-text col\">\n                                                                            <span className=\"select_text\">\n                                                                                Get to know the farm\n                                                                            </span>\n                                                                        </div>\n                                                                    </div>\n                                                                </Link>\n\n                                                                <Link to=\"/\" onClick={() => setShopnow(true)}>\n                                                                    <div className=\"farm_select_item row _bg\" >\n                                                                        <div className=\"_select_item-icon col\">\n                                                                            <img src=\"https://zz.jumia.is/cms/Home-page-content/Quiklinks_DT_Brands_22102020.png\" alt=\"DSQTLDiG\" />\n                                                                        </div>\n                                                                        <div className=\"_select_item-text col\">\n                                                                            <span className=\"select_text\" >\n                                                                                shop all products\n                                                                            </span>\n                                                                        </div>\n                                                                    </div>\n                                                                </Link>\n                                                                <Link to=\"/riskmanagement\">\n                                                                    <div className=\"farm_select_item farm_select_item  _bg full-width row\">\n                                                                        <div className=\"_select_item-icon col\">\n                                                                            <img src=\"https://zz.jumia.is/cms/Home-page-content/jumia-global.png\" alt=\"LlTNBvqoGCCPaiFxNIdh\" />\n                                                                        </div>\n                                                                        <div className=\"_select_item-text col\">\n                                                                            <span className=\"select_text\">\n                                                                                locataire global\n                                                                            </span>\n                                                                        </div>\n                                                                    </div>\n                                                                </Link>\n                                                            </section>\n\n                                                            <section className=\"farm_topSell-wrap\">\n                                                                <header><h2>Top sellers</h2></header>\n                                                                <div className=\"container-fluid row\">\n                                                                    {/* <div className=\"topSell_item\"></div> */}\n                                                                    <Topsell />\n\n                                                                </div>\n                                                            </section>\n\n                                                            <section className=\"farm_lBanner\">\n                                                                <div className=\"farm_lBanner__leftWrap\">\n                                                                    <aside className=\"__leftWrap_content\">\n                                                                        <div className=\"lBanner__top-subTitle\">\n                                                                            <span>fresh products</span>\n                                                                        </div>\n                                                                        <div className=\"lBanner__title\">\n                                                                            <h2>\n                                                                                vegetables 100% organic\n                                                                            </h2>\n                                                                        </div>\n                                                                        <div className=\"lBanner__text\">\n                                                                            <p>\n                                                                                We produce organic products of superior quality in accordance with\n                                                                                food safety management standards such as the International Standard ISO 22000.\n                                                                            </p>\n                                                                        </div>\n                                                                        <Link to=\"/\" className=\"lBanner__btn shop_now\">shop now</Link>\n                                                                    </aside>\n                                                                </div>\n                                                                <aside className=\"farm_lBanner__rightWrap\">\n                                                                    <div className=\"__rightWrap-imgWrap\">\n                                                                        <img src={chick} alt=\"chick\" className=\"__rightWrap-img\" />\n                                                                    </div>\n                                                                    <div className=\"__rightWrap-content\">\n                                                                        <p>\n                                                                            Delivery at the expense of the customer. do not hesitate to contact us\n                                                                        </p>\n                                                                    </div>\n                                                                    <Link to=\"/\" className=\"lBanner__btn shop_now\">contact us</Link>\n                                                                </aside>\n                                                            </section>\n\n                                                            <section className=\"fProduct\">\n                                                                <div className=\"fProduct-wrap\">\n                                                                    <h2>featured product</h2>\n                                                                    {/* <span id=\"fProduct_subtext\">\n                                                            select our from superior quality products\n                                                        </span> */}\n                                                                    <section class=\"section products\">\n                                                                        <div className=\"product-layout\">\n                                                                            {\n                                                                                products.map(product => (\n                                                                                    <Product key={product._id} product={product} col={3} />\n                                                                                ))\n\n                                                                            }\n                                                                        </div>\n                                                                    </section>\n                                                                </div>\n                                                            </section>\n\n                                                            <section className=\"bBanner\">\n                                                                <div className=\"bBanner__left bBanner__img\">\n                                                                    <div className=\"bBanner__content sub_-text\">\n                                                                        <span style={{ color: \"#7fad39\" }}>profit more</span>\n                                                                        <div className=\"bBanner_title sub_-text\">\n                                                                            <h2 style={{ color: \"#ffffff\" }}>poultry meat</h2>\n                                                                        </div>\n                                                                        <div className=\"bBanner_text\">\n                                                                            <p style={{ color: \"#ffffff\" }}>\n                                                                                we sell domestic and commercial chickens, turkeys, ducks, guinea fowl, and geese.\n                                                                                Various crossbred chickens are also available\n                                                                            </p>\n                                                                        </div>\n                                                                        <Link to=\"/\" className=\"lBanner__btn shop_now\">shop now</Link>\n                                                                    </div>\n                                                                </div>\n\n                                                                <div className=\"bBanner__right bBanner__img\">\n                                                                    <div className=\"bBanner__content sub_-text\">\n                                                                        <span>profit more</span>\n                                                                        <div className=\"bBanner_title\">\n                                                                            <h2>fresh eggs</h2>\n                                                                        </div>\n                                                                        <div className=\"bBanner_text\">\n                                                                            <p>\n                                                                                we sell clean, sound and odor-free fresh eggs. The eggs are brown, white\n                                                                                and weigh an average of 62.9 grams (or 2.21 ounces).\n                                                                            </p>\n                                                                        </div>\n                                                                        <Link to=\"/\" className=\"lBanner__btn shop_now\">shop now</Link>\n                                                                    </div>\n                                                                </div>\n                                                            </section>\n\n                                                            <section className=\"nutrition_slider\">\n                                                                <div className=\"animal_nutrition-image\">\n                                                                    <NutritionHero />\n                                                                </div>\n                                                                <div className=\"animal_nutrition-content\">\n                                                                    <h2>animal nutrition</h2>\n                                                                    <p>\n                                                                        we sell animal feed, protein meals, grain, oilseeds,\n                                                                        concentrates and other commodities to local\n                                                                        farmers and livestock producers.\n                                                                    </p>\n                                                                    <Link to=\"/\" className=\"lBanner__btn shop_now\">shop now</Link>\n                                                                </div>\n                                                            </section>\n\n                                                            <section className=\"animal_nutrition\">\n\n                                                            </section>\n\n                                                        </main>\n                                                    )\n                                                }\n                                            </>\n                                        )\n\n\n                                }\n                            </>\n                            // finish\n                        )}\n\n\n                    {/*   PAGE PAGINATION...    */}\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Home\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Header.js",["481","482","483","484","485","486"],"import React, { Fragment, useEffect } from 'react'\nimport { Route, Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from '../../actions/userActions'\nimport { Button, Col, Dropdown, Row } from 'react-bootstrap'\nimport { RiArrowDropDownLine, RiArrowDropUpLine } from 'react-icons/ri'\nimport Search from './Search'\n\nimport '../../App.css'\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully.')\n    }\n\n\n\n\n    return (\n        <Fragment>\n            <header className=\"farm-header\" style={{ zIndex: '999' }} id=\"homeView\">\n                <section className=\"wrapper\">\n                    <div className=\"inner_header  row\">\n\n                        {/* LOGO */}\n                        <Col className=\"navbrand\">\n                            <Link to=\"/\">\n                                <img src=\"/images/logo.png\" alt=\"logo\" />\n                            </Link>\n                        </Col>\n\n                        {/* SEARCG BAR */}\n                        <Col className=\"searchbar\">\n                            <Route render={({ history }) => <Search history={history} />} />\n                        </Col>\n\n\n\n\n\n                        {/* RIGHT SIDE TOOLS */}\n                        <Col className=\"utilbar\">\n\n                            {/* LOGIN */}\n                            {/* <div className=\"login\" o style={{ display: 'flex' }} id=\"loginswitch\">\n                                <div style={{ float: 'left', marginRight: '1rem' }}>\n                                    <i className=\"farm_header_nav_svg far fa-user\"></i>\n                                </div>\n                                <div>\n                                    <p className=\"farm_header_nav_item\" style={{ float: 'left' }}>Login</p>\n                                    <RiArrowDropDownLine id=\"dropdown_svg\" />\n                                    <RiArrowDropUpLine id=\"dropup_svg\" />\n                                </div>\n                            </div> */}\n                            {user ? (\n                                <div className=\"ml-4 dropdown d-inline\">\n                                    <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                        <figure className=\"avatar avatar-nav\">\n                                            <img\n                                                src={user.avatar && user.avatar.url}\n                                                alt={user && user.name}\n                                                className=\"rounded-circle\"\n                                            />\n                                        </figure>\n                                        <span>{user && user.name}</span>\n                                    </Link>\n\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                        {user && user.role === 'admin' && (\n                                            <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n                                        )}\n                                        <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\n                                        <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                                        <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                            Logout\n                                </Link>\n\n                                    </div>\n\n\n                                </div>\n\n                            )\n                                : !loading &&\n                                <Link to=\"/login\" >\n                                    <div className=\"login\" o style={{ display: 'flex' }} id=\"loginswitch\">\n                                        <div style={{ float: 'left', marginRight: '1rem' }}>\n                                            <i className=\"farm_header_nav_svg far fa-user\"></i>\n                                        </div>\n                                        <div>\n                                            <p className=\"farm_header_nav_item\" style={{ float: 'left' }}>Login</p>\n                                            {/* <RiArrowDropDownLine id=\"dropdown_svg\" /> */}\n                                            {/* <RiArrowDropUpLine id=\"dropup_svg\" /> */}\n                                        </div>\n                                    </div>\n                                </Link>}\n                            {/* LOGIN ENDS */}\n                            {/* HELP */}\n                            {/* <Col className=\"help\">\n                                <span style={{ float: 'left' }}>\n                                    <i className=\"farm_header_nav_svg far fa-question-circle\"></i>\n                                </span>\n                                <span>\n                                    <p className=\"farm_header_nav_item\" style={{ float: 'left', marginLeft: '1rem' }}>Help</p>\n                                    <RiArrowDropDownLine />\n                                </span>\n                            </Col> */}\n                            {/* CART */}\n                            <Link to=\"/cart\" className=\"user_cart\" style={{ textDecoration: 'none' }} >\n                                <div className=\"user_cart-row\">\n                                    <div className=\"user_cart-col\">\n                                        <span style={{ float: 'left', marginRight: '1rem' }}>\n                                            <i className=\" fas fa-shopping-cart\"></i>\n                                            <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                                        </span>\n                                    </div>\n                                    <div className=\"user_cart-col\">\n                                        <span>\n                                            <p className=\"farm_header_nav_item\" >Cart</p>\n                                        </span>\n                                    </div>\n                                </div>\n                            </Link>\n                        </Col>\n                    </div>\n                </section>\n            </header>\n\n\n\n\n\n\n\n\n\n            {/* <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\">\n                        <Link to=\"/\">\n                            <img src=\"/images/shopit_logo.png\" />\n                        </Link>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link>\n\n                    {user ? (\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                <figure className=\"avatar avatar-nav\">\n                                    <img\n                                        src={user.avatar && user.avatar.url}\n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    />\n                                </figure>\n                                <span>{user && user.name}</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role === 'admin' && (\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n                                )}\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                            </div>\n\n\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\n\n\n                </div>\n            </nav> */}\n        </Fragment>\n    )\n}\n\nexport default Header\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\HeaderBSN.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Nutrition_hero.js",["487","488","489","490"],"import React, { Fragment } from 'react'\r\nimport { Splide, SplideSlide } from '@splidejs/react-splide';\r\nimport '@splidejs/splide/dist/css/themes/splide-sea-green.min.css';\r\nimport image_1 from '../../images/veterine_1.jpg'\r\nimport image_2 from '../../images/veterine_0.jpg'\r\nimport image_3 from '../../images/veterine_2.jpg'\r\nimport image_4 from '../../images/nutrition.png'\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nconst Nutrition_hero = () => {\r\n    return (\r\n        <Fragment>\r\n            <Carousel>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100  nutrition__img\"\r\n                        src={image_4}\r\n                        alt=\"First slide\"\r\n                    />\r\n                    {/* <Carousel.Caption>\r\n                        <h3>First slide label</h3>\r\n                        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                    </Carousel.Caption> */}\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100 nutrition__img\"\r\n                        src={image_1}\r\n                        alt=\"First slide\"\r\n                    />\r\n                    {/* <Carousel.Caption>\r\n                        <h3>First slide label</h3>\r\n                        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                    </Carousel.Caption> */}\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Nutrition_hero\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\product\\ProductDetails.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Dash.js",["491","492","493"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Dash = () => {\r\n    return (\r\n        <Fragment>\r\n            <section id=\"dash_top \" className=\"_bg\">\r\n\r\n\r\n                <div className=\"dash-item\">\r\n\r\n                    <div className=\"dash-item__inner row\">\r\n                        <div className=\"dash-item__icon col\">\r\n                            <img src=\"https://res.cloudinary.com/locataire/image/upload/v1616258224/category/kisspng-farm-agriculture-tractor-agriculture-5ac47f7e774fd6.2068085615228271344887_qdjg58.png\" alt=\"TeZnWQYAThpTPdvjDYo\" alt=\"UjuYScFXDuXyTuoLrA\" />\r\n                        </div>\r\n                        <div className=\"dash-item__title col\">\r\n                            <span>attention to hygiene</span>\r\n                            <div className=\"dash_thumbnail\">\r\n                                We follow strict guidelines\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"dash-item\">\r\n                    <div className=\"dash-item__inner row\">\r\n                        <div className=\"dash-item__icon col\">\r\n                            <img src=\"https://res.cloudinary.com/locataire/image/upload/v1616258224/category/kisspng-farm-agriculture-tractor-agriculture-5ac47f7e774fd6.2068085615228271344887_qdjg58.png\" alt=\"TeZnWQYAThpTPdvjDYo\" />\r\n                        </div>\r\n                        <div className=\"dash-item__title col\">\r\n                            <span>Biosecurity</span>\r\n                            <div className=\"dash_thumbnail\">\r\n                                Alternative farming system\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"dash-item\">\r\n                    <div className=\"dash-item__inner row\">\r\n                        <div className=\"dash-item__icon col\">\r\n                            <img src=\"https://res.cloudinary.com/locataire/image/upload/v1616258224/category/kisspng-farm-agriculture-tractor-agriculture-5ac47f7e774fd6.2068085615228271344887_qdjg58.png\" alt=\"TeZnWQYAThpTPdvjDYo\" alt=\"cvMXOgOYXD\" />\r\n                        </div>\r\n                        <div className=\"dash-item__title col\">\r\n                            <span> Organic products</span>\r\n                            <div className=\"dash_thumbnail\">\r\n                                Food safety management standards\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n\r\n            <section id=\"dash_two\" className=\" _bg\">\r\n                <a href=\"https://combatcovid.hhs.gov/?utm_source=google&utm_medium=cpc&utm_campaign=mmg\">\r\n                    <img src=\"https://zz.jumia.is//cms/Home-page-content/COvid-19_TopRight.jpg\" alt=\"covid\" />\r\n                </a>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dash\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\product\\Topsell.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Contact.js",["494"],"import React, { Fragment, useEffect, useState } from \"react\"\r\nimport \"../../styles/Locataire.css\"\r\nimport Footer from \"./Footer\"\r\nimport ContactB from './ct/CtForm'\r\n\r\n\r\nconst Contact = props => {\r\n\r\n    useEffect(() => {\r\n        const handleContactBg = () => {\r\n            let contact = document.getElementById('contactFormWrapper');\r\n            let body = document.getElementsByTagName('body')[0];\r\n            let html = document.getElementsByTagName('html')[0];\r\n            contact.style.backgroundColor = '#ffffff'\r\n            body.style.backgroundColor = '#ffffff'\r\n            html.style.backgroundColor = '#ffffff'\r\n        }\r\n        window.location.href !== 'http://localhost:3000/' ? handleContactBg() : console.log('at home screen ...');\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"contactFormWrapper\" id=\"contactFormWrapper\">\r\n\r\n                <div className=\"contactFormHeader\">Contact Us</div>\r\n                <div className=\"contactFormContainer\">\r\n                    <div className=\"contactFormInternalContainer\">\r\n                        <h2 className=\"contactFormHeading\">\r\n                            Get in touch !\r\n                        </h2>\r\n                        <ContactB />\r\n\r\n                    </div>\r\n                    <div className=\"contactFormMapDiv\">\r\n                        <div\r\n                            className=\"contactFormMap\"\r\n\r\n                        >\r\n                            <iframe width=\"501\" height=\"512\" frameBorder=\"0\" scrolling=\"no\" marginHeight=\"0\" marginWidth=\"0\" id=\"gmap_canvas\" src=\"https://maps.google.com/maps?width=501&amp;height=512&amp;hl=en&amp;q=84%20W%20Kinney%20St,%20Newark,%20NJ%2007102,%20USA%20Newark+(Locataire%20Head%20Office)&amp;t=&amp;z=18&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\" title=\"map\" ></iframe>\r\n                        </div>\r\n                        <p className=\"contactMapFooterLocation\" style={{ marginTop: 'unset', lineHeight: '4', fontWeight: '400' }}>84 W Kinney St, Newark, NJ 07102, USA</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer light />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Contact","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Shop.js",["495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport Header from \"../components/layout/Header\"\r\nimport './layout/mCustomscrollbar.css'\r\nimport Paginatione from 'react-js-pagination'\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport MetaData from './layout/MetaData'\r\nimport Product from './product/Product'\r\nimport Loader from './layout/Loader'\r\n\r\nimport Category from './layout/Category'\r\nimport Dash from './layout/Dash'\r\nimport { Link, Route } from 'react-router-dom'\r\n// import TopSell from './components/product/TopSell.json'\r\nimport Topsell from './product/Topsell'\r\nimport { Accordion, Button, Card } from 'react-bootstrap'\r\nimport chick from '../images/delivery.png'\r\nimport NutritionHero from './layout/Nutrition_hero'\r\nimport { HiViewGrid } from 'react-icons/hi'\r\nimport { FaListUl } from \"react-icons/fa\";\r\n// import FaThList from 'react-icons/fa'\r\n\r\nimport Select from './layout/Select'\r\nimport CategoriesData from './layout/categories.json'\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProducts } from '../actions/productActions'\r\nimport Styled from 'styled-components'\r\nimport '../styles/Locataire.css'\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { StrollableContainer, Stroller, Strollable, StrollCaptor } from \"react-stroller\";\r\nimport Catego from './layout/Catego';\r\nimport List from './layout/List';\r\nimport Grid from './layout/Grid';\r\nimport ProductList from './product/ProductList';\r\n// import { Alert } from '@material-ui/lab';\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\nconst Shop = ({ match }) => {\r\n\r\n\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 450])\r\n    const [size, setSize] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n    const [shopnow, setShopnow] = useState(false)\r\n\r\n    const categories = [\r\n        {\r\n            \"title\": \"Poultry\",\r\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616223744/category/animal_tezmcb.svg\",\r\n            \"atl\": \"LaiWiv\"\r\n\r\n        },\r\n        {\r\n            \"title\": \"Fresh Eggs\",\r\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/eggs_ca7brk.svg\",\r\n            \"atl\": \"KTrngrIo\"\r\n        },\r\n        {\r\n            \"title\": \"Pigsty\",\r\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/pig_nmfagj.svg\",\r\n            \"atl\": \"EyCVOYElB\"\r\n        },\r\n        {\r\n            \"title\": \"Goats, Sheep & Mammals\",\r\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616223741/category/goat_bwpnmu.svg\",\r\n            \"atl\": \"EyCVOYElP\"\r\n\r\n        },\r\n        {\r\n            \"title\": \"Park Animals\",\r\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/paw-solid_nllgp5.svg\",\r\n            \"atl\": \"XgcabxkzflU\"\r\n        },\r\n        {\r\n            \"title\": \"Purebred Seed - ARTIFICIAL INSEMINATION\",\r\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616223739/category/dna_pycfwt.svg\",\r\n            \"atl\": \"tkTOAnrTpGM\"\r\n\r\n        },\r\n        {\r\n            \"title\": \"Food & Livestock Products\",\r\n            \"icon\": \"https://res.cloudinary.com/locataire/image/upload/v1616220708/category/food_xmnbgo.webp\",\r\n            \"atl\": \"nnFiNyv\"\r\n        }\r\n    ]\r\n\r\n    const productSize = [\r\n        '0 KG',\r\n        '2 KG',\r\n        '50 KG',\r\n        '3 L',\r\n        '5 L',\r\n        '10 L',\r\n        'Medium',\r\n        'Large',\r\n        'Verrat',\r\n        'Trout',\r\n        '1 Dose',\r\n        '1 T'\r\n    ]\r\n\r\n    const productColor = [\r\n        'Grey',\r\n        'White',\r\n        'Bronze',\r\n        'Maroon',\r\n        'Blue',\r\n        'Black',\r\n        'Yellow'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProducts(keyword, currentPage, price, category, rating, size, color));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating, size, color])\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n\r\n    const Block = ({ children }) => (\r\n        <div style={{ height: \"100vh\", position: \"relative\" }}>{children}</div>\r\n    );\r\n\r\n    const [view, setView] = useState();\r\n    console.log(view)\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Shop'} />\r\n            <Header />\r\n            <div className=\"category-container farmStyle\">\r\n                <Block>\r\n                    <StrollableContainer draggable>\r\n                        <aside className=\"category_list\">\r\n                            {/* <Catego /> */}\r\n                            <section className=\"filterByPrice\">\r\n                                <h2 style={{ marginBottom: '3.5rem' }}>filter by price</h2>\r\n                                <div className=\"filterRange\">\r\n\r\n                                    <Range\r\n                                        marks={{\r\n                                            1: `$1`,\r\n                                            450: `$450`\r\n                                        }}\r\n                                        min={1}\r\n                                        max={450}\r\n                                        defaultValue={[1, 450]}\r\n                                        tipFormatter={value => `$${value}`}\r\n                                        tipProps={{\r\n                                            placement: \"top\",\r\n                                            visible: true\r\n                                        }}\r\n                                        value={price}\r\n                                    // onChange={price => setPrice(price)}\r\n                                    />\r\n                                </div>\r\n                                {/* <div className=\"totalfilter\">\r\n                                    <p className=\"total-price_range-title\">price:{\" \"}  ${min} — $450</p>\r\n                                </div> */}\r\n                            </section>\r\n                            <hr id=\"filter_divider\" />\r\n\r\n                            <section className=\"filterBySize\" >\r\n                                <Accordion defaultActiveKey=\"0\">\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        <h2 id=\"sizefilter\">filter by size</h2>\r\n                                    </Accordion.Toggle>\r\n\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n\r\n                                        <div className=\"filterSize\">\r\n                                            <StrollableContainer draggable>\r\n                                                <ul className=\"filtersize-wrap\">\r\n                                                    {productSize.map((size) => (\r\n                                                        <li className=\"size-item\" key={size} onClick={() => setSize(size)} >{size}</li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </StrollableContainer>\r\n                                        </div>\r\n                                    </Accordion.Collapse>\r\n\r\n                                </Accordion>\r\n                            </section>\r\n\r\n                            <hr id=\"filter_divider\" />\r\n                            <section className=\"filterByRating\">\r\n                                <Accordion defaultActiveKey=\"0\">\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        <h2 className=\"ratefilter\">\r\n                                            Ratings\r\n                                        </h2>\r\n                                    </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <div className=\"filterRating\" >\r\n                                            <div className=\"filterrating-wrap\">\r\n\r\n\r\n\r\n                                                <ul className=\"pl-0\">\r\n                                                    {[5, 4, 3, 2, 1].map(star => (\r\n                                                        <li\r\n                                                            style={{\r\n                                                                cursor: 'pointer',\r\n                                                                listStyleType: 'none'\r\n                                                            }}\r\n                                                            key={star}\r\n                                                            onClick={() => setRating(star)}\r\n                                                        >\r\n                                                            <div className=\"rating-outer\">\r\n                                                                <div className=\"rating-inner\"\r\n                                                                    style={{\r\n                                                                        width: `${star * 20}%`\r\n                                                                    }}\r\n                                                                >\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </Accordion.Collapse>\r\n                                </Accordion>\r\n                            </section>\r\n                            <hr id=\"filter_divider\" />\r\n                            <section className=\"filterByName\">\r\n                                <Accordion defaultActiveKey=\"0\">\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        <h2>filter by name</h2>\r\n                                    </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <div className=\"filterName\">\r\n                                            <ul className=\"filtername-wrap\">\r\n\r\n                                                {\r\n                                                    categories.map((category) => (\r\n                                                        <li className=\"name-item\" key={category}\r\n                                                            onClick={() => setCategory(category.title)}\r\n                                                        >\r\n                                                            <div>{category.title}</div>\r\n                                                        </li>\r\n                                                    ))\r\n                                                }\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Accordion.Collapse>\r\n                                </Accordion>\r\n                            </section>\r\n                            {/* </section> */}\r\n\r\n                            <hr id=\"filter_divider\" />\r\n\r\n                            <section className=\"filterByColor\">\r\n                                <Accordion defaultActiveKey=\"0\">\r\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                        <h2>filter by color</h2>\r\n                                    </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                        <div className=\"filterColor\">\r\n                                            <StrollableContainer draggable>\r\n                                                <ul className=\"filtercolor-wrap\">\r\n                                                    {productColor.map((color) => (\r\n                                                        <li className=\"color-item\" key={color} onClick={() => setColor(color)}>\r\n                                                            <div className={\"item-inner-color \" + color} />\r\n                                                            <div className=\"item-inner-text\">{color}</div>\r\n                                                        </li>\r\n                                                    ))}\r\n\r\n                                                </ul>\r\n                                            </StrollableContainer>\r\n                                        </div>\r\n                                    </Accordion.Collapse>\r\n                                </Accordion>\r\n                            </section>\r\n                        </aside>\r\n                    </StrollableContainer>\r\n                </Block>\r\n\r\n                <main className=\"category_product_main\" style={{ position: 'relative' }}>\r\n\r\n                    <div className=\"search-product-wrap\" >\r\n                        {/* filter item */}\r\n                        <div className=\"filter__item\">\r\n                            <div className=\"row\">\r\n                                <div className=\"back_home\">\r\n                                    <BiArrowBack />\r\n                                </div>\r\n                                <div className=\"col-lg-4 col-md-5\">\r\n                                    <div className=\"filter__sort\">\r\n                                        <Select />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-4 col-md-4\">\r\n                                    <div className=\"filter__found\">\r\n                                        <h6>\r\n                                            <span>{count}</span>\r\n                                            Products found\r\n                                        </h6>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-4 col-md-3\">\r\n                                    <div className=\"filter__option\">\r\n                                        <span className=\"icon_grid-2x2\" onClick={() => setView(false)}>\r\n                                            <HiViewGrid />\r\n                                        </span>\r\n                                        <span className=\"icon_ui\" onClick={() => setView(true)}>\r\n                                            <FaListUl />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* products */}\r\n                        <div className={view ? \"col active-list-view\" : (view === false) ? \"row\" : \"row not-active\"}>\r\n                            {\r\n                                view ?\r\n                                    (\r\n                                        products.map(product => (\r\n                                            <ProductList key={product._id} product={product} col={4} />\r\n                                        ))\r\n                                    )\r\n\r\n                                    :\r\n\r\n                                    (\r\n                                        products.map(product => (\r\n                                            <Product key={product._id} product={product} col={4} />\r\n                                        ))\r\n                                    )\r\n\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        {/* Pagination */}\r\n                        {resPerPage <= count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Paginatione\r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass=\"page-item\"\r\n                                    linkClass=\"page-link\"\r\n                                />\r\n\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n\r\n\r\n                </main>\r\n\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Shop\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\order\\OrderDetails.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\Payment.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\Cart.js",["517","518","519","520","521","522"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Header from \"../layout/Header\"\nimport { Link } from 'react-router-dom'\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport \"./cart.module.css\"\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\nimport { Helmet } from 'react-helmet'\nimport Styled from \"styled-components\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Inpute from '@material-ui/core/Input';\nimport { ButtonGroup, TextField } from '@material-ui/core'\nimport Button from '@material-ui/core/Button';\n// import { createMuiTheme } from '@material-ui/core/styles';\nimport { createTheme } from '@material-ui/core/styles';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Icon from '@material-ui/core/Icon';\n\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport Bank from '../Bank'\nimport Shop from '../Shop'\n\n\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            // Purple and green play nicely together.#4CAF50\n            main: '#e91e63',\n            fontSize: '1.6rem'\n        },\n        secondary: {\n            // This is green.A700 as hex.\n            main: '#4CAF50',\n        },\n        third: {\n            main: '#F50057',\n        },\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    moot: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    }\n}));\n\n\n\nconst Cart = ({ history }) => {\n    const classes = useStyles();\n\n    const Cart = Styled.div`\n        font-weight: 300;\n    box-shadow: 0 10px 20px 0 rgb(0 0 0 / 5%);\n    border-radius: .375rem;\n        border: 0;\n        margin-bottom: 1.5rem !important;\n            position: relative;\n    display: flex;\n    flex-direction: column;\n    min-width: 0;\n    word-wrap: break-word;\n    background-color: #fff;\n    background-clip: border-box;\n    `\n    const Md4 = Styled.h5`\n        font-weight: 500;\n            margin-bottom: 1.5rem !important;\n            font-size: 2rem;\n    `\n    const View = Styled.div`\n            box-shadow: 0 2px 5px 0 rgb(0 0 0 / 7%), 0 2px 10px 0 rgb(0 0 0 / 7%) !important;\n                border-radius: 0.375rem !important;\n                position: relative;\n    overflow: hidden;\n    cursor: default;\n        margin-bottom: 0 !important;\n    `\n    const ImgFluid = Styled.img`\n            transition: all .2s linear;\n    `\n    const A = Styled.a`\n        &:hover {\n            color: #0056b3;\n    text-decoration: none;\n    transition: all .2s ease-in-out;\n        };\n        color: #007bff;\n    text-decoration: none;\n    cursor: pointer;\n    -webkit-transition: all .2s ease-in-out;\n    transition: all .2s ease-in-out;\n    `\n    const Mask = Styled.div`\n        &:hover {\n            opacity: 1;\n                transition: all .4s ease-in-out;\n        }\n            opacity: 0;\n    transition: all .4s ease-in-out;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n        background-attachment: fixed;\n    bottom: 0;\n        cursor: pointer;\n    user-select: none;\n        -webkit-tap-highlight-color: transparent;\n    `\n    const Mask2 = Styled.div`\n    &:hover {\n        opacity: 1;\n    }\n        opacity: 0;\n    transition: all .4s ease-in-out;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n        background-attachment: fixed;\n    bottom: 0;\n        cursor: pointer;\n    user-select: none;\n        background-color: rgba(0,0,0,.1);\n        -webkit-tap-highlight-color: transparent;\n    `\n    const Dflex = Styled.div`\n        justify-content: space-between !important;\n    `\n    const Dnumber = Styled.div`\n        border: 1px solid #ced4da;\n    border-radius: .25rem;\n        margin-bottom: 0 !important;\n    `\n    const ButtonD = Styled.button`\n        padding-left: 10px;\n        width: 2.5rem;\n    height: .7rem;\n        -webkit-appearance: none;\n    background-color: transparent;\n    border: none;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    cursor: pointer;\n    margin: 0;\n    position: relative;\n    text-transform: none;\n        overflow: visible;\n        &:before {\n                width: .7rem;\n    background-color: #495057;\n        }\n        &:after {\n    width: .7rem;\n    background-color: #495057;\n        display: inline-block;\n    position: absolute;\n    content: '';\n    height: 2px;\n    transform: translate(-50%, -50%);\n        }\n    `\n    const Input = Styled.input`\n        max-width: 3rem;\n    padding: .5rem;\n    border: 1px solid #ced4da;\n    border-width: 0 1px;\n    font-size: 1rem;\n    height: 2rem;\n    color: #495057;\n    text-align: center;\n        appearance: textfield;\n        line-height: inherit;\n    `\n    const ButtonB = Styled.button`\n        text-transform: none;\n            overflow: visible;\n            font-family: inherit;\n    font-size: inherit;\n    line-height: inherit;\n    &:before {\n        width: .7rem;\n    background-color: #495057;\n    }\n    &:after {\n        width: .7rem;\n    background-color: #495057;\n            display: inline-block;\n    position: absolute;\n    content: '';\n    height: 2px;\n    -webkit-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%) rotate(\n90deg\n);\ndisplay: inline-block;\n    position: absolute;\n    content: '';\n    height: 2px;\n    }\n    `\n    const Small = Styled.small`\n            color: #6c757d !important;\n                text-align: center !important;\n                    margin-top: 0.25rem;\n    font-size: 0.875em;\n    `\n\n    const [shopnow, setShopnow] = useState(false);\n\n    console.log('Position: ' + shopnow);\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector(state => state.cart)\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    function CartScript() {\n        const scripta = document.createElement(\"script\");\n        scripta.src = \"https://mdbootstrap.com/previews/ecommerce-demo/js/jquery-3.4.1.min.js\";\n        scripta.async = true;\n        document.body.appendChild(scripta);\n\n        const scriptb = document.createElement(\"script\");\n        scriptb.src = \"https://mdbootstrap.com/previews/ecommerce-demo/js/popper.min.js\";\n        scriptb.async = true;\n        document.body.appendChild(scriptb);\n\n        const scriptc = document.createElement(\"script\");\n        scriptc.src = \"https://mdbootstrap.com/previews/ecommerce-demo/js/bootstrap.js\";\n        scriptc.async = true;\n        document.body.appendChild(scriptc);\n\n        const scriptd = document.createElement(\"script\");\n        scriptd.src = \"https://mdbootstrap.com/previews/ecommerce-demo/js/mdb.min.js\";\n        scriptd.async = true;\n        document.body.appendChild(scriptd);\n\n        const scripte = document.createElement(\"script\");\n        scripte.src = \"https://mdbootstrap.com/previews/ecommerce-demo/js/mdb.ecommerce.min.js\";\n        scripte.async = true;\n        document.body.appendChild(scripte);\n    }\n\n    useEffect(() => {\n        CartScript();\n\n    }, [])\n\n    return (\n        <Fragment>\n            <Header />\n            {cartItems.length === 0 ?\n                (\n\n                    <>\n                        <MetaData title={'Cart'} />\n                        <div id=\"cart__main\">\n                            <main>\n                                <div className=\"container\" id=\"container_cart-main\">\n\n                                    <section className=\"mt-5 mb-4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-lg-8\" style={{ paddingLeft: 'unset' }}>\n\n                                                <Cart className=\"card wish-list mb-4\">\n                                                    <div className=\"card-body\">\n                                                        <h5 className=\"mb-4\" id=\"cart__title\"><span className=\"yourcarttitle\">Your Cart: </span> <b style={{ fontSize: '2.6rem', paddingLeft: '1rem', lineHeight: '46px' }}>{cartItems.length} items</b></h5>\n\n                                                        <div className=\"row mb-4 cart__product-rendered\" >\n                                                            <div className=\"col-md-5 col-lg-3 col-xl-3\">\n                                                                <View className=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\n                                                                    {/* <ImgFluid className=\"img-fluid w-100\"\n                                                                        src={image}\n                                                                        alt=\"Sample\" /> */}\n                                                                    <Skeleton variant=\"rect\" className=\"img-fluid w-100\" width={210} height={118} />\n                                                                    <A href=\"#!\">\n                                                                        <Mask className=\"mask waves-effect waves-light\">\n                                                                            {/* <ImgFluid className=\"img-fluid w-100\"\n                                                                                src={image} alt=\"s\" /> */}\n                                                                            <Skeleton variant=\"rect\" className=\"img-fluid w-100\" width={410} height={218} />\n                                                                            <Mask2 className=\"mask rgba-black-slight waves-effect waves-light\"></Mask2>\n                                                                        </Mask>\n                                                                    </A>\n                                                                </View>\n                                                            </div>\n                                                            <Dflex className=\"col-md-7 col-lg-9 col-xl-9\">\n                                                                <div>\n                                                                    <Dflex className=\"d-flex justify-content-between\">\n                                                                        <div id=\"product_cart-desc-main\" style={{ width: '100%' }}>\n                                                                            <Skeleton variant=\"text\" />\n                                                                            <div className=\"product_cart-descr\">\n                                                                                <p className=\"mb-3 text-muted text-uppercase small row\"><span className=\"subc\">Category: {\" \"}</span>  <Skeleton variant=\"text\" width=\"60%\" /></p>\n                                                                                <p className=\"mb-2 text-muted text-uppercase small row\"><span className=\"subc\">Color: {\" \"}</span> <Skeleton variant=\"text\" width=\"60%\" /></p>\n                                                                                <p className=\"mb-3 text-muted text-uppercase small row\"><span className=\"subc\">Size: {\" \"}</span>  <Skeleton variant=\"text\" width=\"60%\" /></p>\n                                                                            </div>\n                                                                        </div>\n                                                                        <div>\n                                                                            {/* <Dnumber className=\"def-number-input number-input safari_only mb-0 w-100\">\n                                                                        <ButtonD\n                                                                            onclick=\"this.parentNode.querySelector('input[type=number]').stepDown()\"\n                                                                            className=\"minus\"></ButtonD>\n                                                                        <Input className=\"quantity\" min=\"0\" name=\"quantity\" value=\"1\"\n                                                                            type=\"number\" />\n                                                                        <ButtonB\n                                                                            onclick=\"this.parentNode.querySelector('input[type=number]').stepUp()\"\n                                                                            className=\"plus\"></ButtonB>\n                                                                    </Dnumber> */}\n                                                                            <div className={classes.moot}>\n                                                                                <ThemeProvider theme={theme}>\n                                                                                    <ButtonGroup variant=\"text\" color=\"secondary\" aria-label=\"text primary button group\">\n                                                                                        <Button >decrease</Button>\n                                                                                        <Button>\n                                                                                            <Skeleton variant=\"circle\" width={40} height={40} />\n                                                                                            {/* <form className={classes.root} noValidate autoComplete=\"off\" id=\"add_sub\">\n                                                                                            <Inpute defaultValue={} type=\"input\" readOnly inputProps={{ 'aria-label': 'description' }} />\n                                                                                        </form> */}\n                                                                                        </Button>\n                                                                                        <Button >add</Button>\n                                                                                    </ButtonGroup>\n                                                                                </ThemeProvider>\n                                                                            </div>\n\n                                                                            <Small id=\"passwordHelpBlock\" className=\"form-text text-muted text-center\">\n                                                                                (Note, 0 piece)\n                                                                            </Small>\n                                                                        </div>\n                                                                    </Dflex>\n                                                                    <Dflex className=\"d-flex justify-content-between align-items-center\">\n                                                                        <div>\n                                                                            <Link to=\"/shop\" onClick={(prevState) => setShopnow(true)}>\n                                                                                <Button\n\n                                                                                    variant=\"contained\"\n                                                                                    color=\"primary\"\n                                                                                    className={classes.button}\n                                                                                    onClick={() => setShopnow(true)}\n                                                                                // startIcon={<DeleteIcon />}\n                                                                                >\n                                                                                    Shop Now\n                                                                                </Button>\n                                                                            </Link>\n                                                                            <Button\n                                                                                variant=\"contained\"\n                                                                                color=\"primary\"\n                                                                                className={classes.button}\n                                                                                endIcon={<Icon>send</Icon>}\n                                                                                style={{ display: 'none' }}\n                                                                            >\n                                                                                Move to wishlist\n                                                                            </Button>\n                                                                        </div>\n                                                                        <p className=\"mb-0\"><span style={{ fontWeight: '500' }}><strong>$0</strong></span></p>\n                                                                    </Dflex>\n                                                                </div>\n                                                            </Dflex>\n                                                        </div>\n                                                    </div>\n                                                </Cart>\n                                                {/* ... */}\n                                                <Cart className=\"card wish-list mb-4\">\n                                                    <div className=\"card-body\">\n\n                                                        <div className=\"row mb-4 cart__product-rendered\" >\n                                                            <div className=\"col-md-5 col-lg-3 col-xl-3\">\n                                                                <View className=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\n                                                                    {/* <ImgFluid className=\"img-fluid w-100\"\n                                                                        src={image}\n                                                                        alt=\"Sample\" /> */}\n                                                                    <Skeleton variant=\"rect\" className=\"img-fluid w-100\" width={210} height={118} />\n                                                                    <A href=\"#!\">\n                                                                        <Mask className=\"mask waves-effect waves-light\">\n                                                                            {/* <ImgFluid className=\"img-fluid w-100\"\n                                                                                src={image} alt=\"s\" /> */}\n                                                                            <Skeleton variant=\"rect\" className=\"img-fluid w-100\" width={410} height={218} />\n                                                                            <Mask2 className=\"mask rgba-black-slight waves-effect waves-light\"></Mask2>\n                                                                        </Mask>\n                                                                    </A>\n                                                                </View>\n                                                            </div>\n                                                            <Dflex className=\"col-md-7 col-lg-9 col-xl-9\">\n                                                                <div>\n                                                                    <Dflex className=\"d-flex justify-content-between\">\n                                                                        <div id=\"product_cart-desc-main\" style={{ width: '100%' }}>\n                                                                            <Skeleton variant=\"text\" />\n                                                                            <div className=\"product_cart-descr\">\n                                                                                <p className=\"mb-3 text-muted text-uppercase small row\"><span className=\"subc\">Category: {\" \"}</span>  <Skeleton variant=\"text\" width=\"60%\" /></p>\n                                                                                <p className=\"mb-2 text-muted text-uppercase small row\"><span className=\"subc\">Color: {\" \"}</span> <Skeleton variant=\"text\" width=\"60%\" /></p>\n                                                                                <p className=\"mb-3 text-muted text-uppercase small row\"><span className=\"subc\">Size: {\" \"}</span>  <Skeleton variant=\"text\" width=\"60%\" /></p>\n                                                                            </div>\n                                                                        </div>\n                                                                        <div>\n                                                                            {/* <Dnumber className=\"def-number-input number-input safari_only mb-0 w-100\">\n                                                                        <ButtonD\n                                                                            onclick=\"this.parentNode.querySelector('input[type=number]').stepDown()\"\n                                                                            className=\"minus\"></ButtonD>\n                                                                        <Input className=\"quantity\" min=\"0\" name=\"quantity\" value=\"1\"\n                                                                            type=\"number\" />\n                                                                        <ButtonB\n                                                                            onclick=\"this.parentNode.querySelector('input[type=number]').stepUp()\"\n                                                                            className=\"plus\"></ButtonB>\n                                                                    </Dnumber> */}\n                                                                            <div className={classes.moot}>\n                                                                                <ThemeProvider theme={theme}>\n                                                                                    <ButtonGroup variant=\"text\" color=\"secondary\" aria-label=\"text primary button group\">\n                                                                                        <Button >decrease</Button>\n                                                                                        <Button>\n                                                                                            <Skeleton variant=\"circle\" width={40} height={40} />\n                                                                                            {/* <form className={classes.root} noValidate autoComplete=\"off\" id=\"add_sub\">\n                                                                                            <Inpute defaultValue={} type=\"input\" readOnly inputProps={{ 'aria-label': 'description' }} />\n                                                                                        </form> */}\n                                                                                        </Button>\n                                                                                        <Button >add</Button>\n                                                                                    </ButtonGroup>\n                                                                                </ThemeProvider>\n                                                                            </div>\n\n                                                                            <Small id=\"passwordHelpBlock\" className=\"form-text text-muted text-center\">\n                                                                                (Note, 0 piece)\n                                                                            </Small>\n                                                                        </div>\n                                                                    </Dflex>\n                                                                    <Dflex className=\"d-flex justify-content-between align-items-center\">\n                                                                        <div>\n                                                                            <Link to=\"/shop\" onClick={(prevState) => setShopnow(true)}>\n                                                                                <Button\n\n                                                                                    variant=\"contained\"\n                                                                                    color=\"primary\"\n                                                                                    className={classes.button}\n                                                                                    onClick={() => setShopnow(true)}\n                                                                                // startIcon={<DeleteIcon />}\n                                                                                >\n                                                                                    Shop Now\n                                                                                </Button>\n                                                                            </Link>\n                                                                            <Button\n                                                                                variant=\"contained\"\n                                                                                color=\"primary\"\n                                                                                className={classes.button}\n                                                                                endIcon={<Icon>send</Icon>}\n                                                                                style={{ display: 'none' }}\n                                                                            >\n                                                                                Move to wishlist\n                                                                            </Button>\n                                                                        </div>\n                                                                        <p className=\"mb-0\"><span style={{ fontWeight: '500' }}><strong>$0</strong></span></p>\n                                                                    </Dflex>\n                                                                </div>\n                                                            </Dflex>\n                                                        </div>\n                                                    </div>\n                                                </Cart>\n                                            </div>\n\n\n                                            <div className=\"col-lg-4\" style={{ paddingRight: 'unset' }}>\n\n                                                <div className=\"card mb-4\">\n                                                    <div className=\"card-body\">\n\n                                                        <Md4 className=\"mb-3\" id=\"totalamountof\">The total amount of</Md4>\n\n                                                        <ul className=\"list-group list-group-flush\" style={{ marginBottom: '2rem' }}>\n                                                            <li\n                                                                className=\"list_group_card list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0\">\n                                                                Subtotal\n                                                                <span>      <Skeleton variant=\"text\" width=\"80px\" /></span>\n                                                            </li>\n                                                            <li className=\"list_group_card list-group-item d-flex justify-content-between align-items-center px-0\">\n                                                                Estimated Delivery Tax\n                                                                <span><Skeleton variant=\"text\" width=\"80px\" /></span>\n                                                            </li>\n                                                            <li\n                                                                className=\"list_group_card list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3\">\n                                                                <div>\n                                                                    <strong>The total amount of</strong>\n                                                                    <strong>\n                                                                        <p className=\"mb-0\">(including VAT)</p>\n                                                                    </strong>\n                                                                </div>\n                                                                <span><strong><Skeleton variant=\"text\" width=\"80px\" /></strong></span>\n                                                            </li>\n                                                        </ul>\n\n                                                        {/* <Button variant=\"contained\" color=\"secondary\" >Check Out</Button> */}\n                                                        <Skeleton variant=\"rect\" width={110} height={40} color=\"secondary\" />\n\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"card mb-4\">\n                                                    <div className=\"card-body\">\n                                                        <Skeleton variant=\"circle\" width={40} height={40} />\n                                                        <Skeleton variant=\"text\" width={300} />\n\n                                                        {/* <a className=\"dark-grey-text d-flex justify-content-between\" data-toggle=\"collapse\"\n                                                    href=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                                    Add a discount code (optional)\n                                                                            <span><i className=\"fas fa-chevron-down pt-1\"></i></span>\n                                                </a> */}\n\n                                                        {/* <div className=\"collapse\" id=\"collapseExample\">\n                                                    <div className=\"mt-3\">\n                                                        <div className=\"md-form md-outline mb-0\">\n                                                            <input type=\"text\" id=\"discount-code\" className=\"form-control font-weight-light\"\n                                                                placeholder=\"Enter discount code\" />\n                                                        </div>\n                                                    </div>\n                                                </div> */}\n                                                    </div>\n                                                </div>\n\n\n                                            </div>\n\n                                        </div>\n                                    </section>\n                                </div>\n\n                            </main>\n                        </div>\n\n\n                    </>\n                )\n\n\n\n                : (\n                    <>\n                        <MetaData title={'Cart'} />\n                        <div id=\"cart__main\">\n                            <main>\n                                <Helmet>\n\n                                    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.11.2/css/all.css\" />\n\n                                    <link rel=\"stylesheet\" href=\"./src/scss/bootstrap/bootstrap.css\" />\n\n                                    {/* <link rel=\"stylesheet\" href=\"https://mdbootstrap.com/previews/ecommerce-demo/css/mdb-pro.min.css\" /> */}\n\n                                    <link rel=\"stylesheet\" href=\"https://mdbootstrap.com/previews/ecommerce-demo/css/mdb.ecommerce.min.css\" />\n\n                                </Helmet>\n                                <div className=\"container\" id=\"container_cart-main\">\n\n                                    <section className=\"mt-5 mb-4\">\n\n                                        <div className=\"row\">\n\n                                            <div className=\"col-lg-8\" style={{ paddingLeft: 'unset' }}>\n\n                                                <Cart className=\"card wish-list mb-4\">\n                                                    <div className=\"card-body\">\n                                                        <h5 className=\"mb-4\" id=\"cart__title\"><span className=\"yourcarttitle\">Your Cart: </span> <b style={{ fontSize: '2.6rem', paddingLeft: '1rem', lineHeight: '46px' }}>{cartItems.length} items</b></h5>\n                                                        {cartItems.map(item => (\n                                                            <>\n\n\n                                                                <div className=\"row mb-4 cart__product-rendered\" key={item._id}>\n                                                                    <div className=\"col-md-5 col-lg-3 col-xl-3\">\n                                                                        <View className=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\n                                                                            <ImgFluid className=\"img-fluid w-100\"\n                                                                                src={item.image}\n                                                                                alt=\"Sample\" />\n                                                                            <A href=\"#!\">\n                                                                                <Mask className=\"mask waves-effect waves-light\">\n                                                                                    <ImgFluid className=\"img-fluid w-100\"\n                                                                                        src={item.image} alt=\"s\" />\n                                                                                    <Mask2 className=\"mask rgba-black-slight waves-effect waves-light\"></Mask2>\n                                                                                </Mask>\n                                                                            </A>\n                                                                        </View>\n                                                                    </div>\n                                                                    <Dflex className=\"col-md-7 col-lg-9 col-xl-9\">\n                                                                        <div>\n                                                                            <Dflex className=\"d-flex justify-content-between\">\n                                                                                <div>\n                                                                                    <Md4>{item.name}</Md4>\n                                                                                    <p className=\"mb-3 text-muted text-uppercase small\"><span className=\"subc\">Category: {\" \"}</span>  {item.category}</p>\n                                                                                    <p className=\"mb-2 text-muted text-uppercase small\"><span className=\"subc\">Color: {\" \"}</span> {item.color}</p>\n                                                                                    <p className=\"mb-3 text-muted text-uppercase small\"><span className=\"subc\">Size: {\" \"}</span>  {item.size}</p>\n                                                                                </div>\n                                                                                <div>\n                                                                                    {/* <Dnumber className=\"def-number-input number-input safari_only mb-0 w-100\">\n                                                                        <ButtonD\n                                                                            onclick=\"this.parentNode.querySelector('input[type=number]').stepDown()\"\n                                                                            className=\"minus\"></ButtonD>\n                                                                        <Input className=\"quantity\" min=\"0\" name=\"quantity\" value=\"1\"\n                                                                            type=\"number\" />\n                                                                        <ButtonB\n                                                                            onclick=\"this.parentNode.querySelector('input[type=number]').stepUp()\"\n                                                                            className=\"plus\"></ButtonB>\n                                                                    </Dnumber> */}\n                                                                                    <div className={classes.moot}>\n                                                                                        <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n                                                                                            <Button onClick={() => decreaseQty(item.product, item.quantity)}>decrease</Button>\n                                                                                            <Button>\n                                                                                                <form className={classes.root} noValidate autoComplete=\"off\" id=\"add_sub\">\n                                                                                                    <Inpute defaultValue=\"Select\" type=\"input\" value={item.quantity} readOnly inputProps={{ 'aria-label': 'description' }} />\n                                                                                                </form>\n                                                                                            </Button>\n                                                                                            <Button onClick={() => increaseQty(item.product, item.quantity, item.stock)}>add</Button>\n                                                                                        </ButtonGroup>\n                                                                                    </div>\n\n                                                                                    <Small id=\"passwordHelpBlock\" className=\"form-text text-muted text-center\">\n                                                                                        (Note, {item.quantity} piece)\n                                                                                    </Small>\n                                                                                </div>\n                                                                            </Dflex>\n                                                                            <Dflex className=\"d-flex justify-content-between align-items-center\">\n                                                                                <div>\n                                                                                    <Button\n                                                                                        onClick={() => removeCartItemHandler(item.product)}\n                                                                                        variant=\"contained\"\n                                                                                        color=\"secondary\"\n                                                                                        className={classes.button}\n                                                                                        startIcon={<DeleteIcon />}\n                                                                                    >\n                                                                                        Remove Item\n                                                                                    </Button>\n                                                                                    <Button\n                                                                                        variant=\"contained\"\n                                                                                        color=\"primary\"\n                                                                                        className={classes.button}\n                                                                                        endIcon={<Icon>send</Icon>}\n                                                                                        style={{ display: 'none' }}\n                                                                                    >\n                                                                                        Move to wishlist\n                                                                                    </Button>\n                                                                                </div>\n                                                                                <p className=\"mb-0\"><span style={{ fontWeight: '500' }}><strong>${item.price}</strong></span></p>\n                                                                            </Dflex>\n                                                                        </div>\n                                                                    </Dflex>\n                                                                </div>\n                                                            </>\n                                                        ))}\n                                                        <hr className=\"mb-4\" />\n\n\n                                                        <p className=\"text-primary mb-0\"><i className=\"fas fa-info-circle mr-1\"></i> Do not delay the\n                                                            purchase, adding\n                                                            items to your cart does not mean booking them.</p>\n\n                                                    </div>\n                                                </Cart>\n\n                                                <div className=\"card mb-4\">\n                                                    <div className=\"card-body\">\n\n                                                        <Md4 className=\"mb-4\">Expected shipping delivery</Md4>\n\n                                                        <p className=\"mb-0\"> Thu., 12.03. - Mon., 16.03.</p>\n                                                    </div>\n                                                </div>\n\n\n                                            </div>\n\n\n\n\n                                            <div className=\"col-lg-4\" style={{ paddingRight: 'unset' }}>\n\n                                                <div className=\"card mb-4\">\n                                                    <div className=\"card-body\">\n\n                                                        <Md4 className=\"mb-3\" id=\"totalamountof\">The total amount of</Md4>\n\n                                                        <ul className=\"list-group list-group-flush\" style={{ marginBottom: '2rem' }}>\n                                                            <li\n                                                                className=\"list_group_card list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0\">\n                                                                Subtotal\n                                                                <span>{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span>\n                                                            </li>\n                                                            <li className=\"list_group_card list-group-item d-flex justify-content-between align-items-center px-0\">\n                                                                Estimated Delivery Tax\n                                                                <span>Free</span>\n                                                            </li>\n                                                            <li\n                                                                className=\"list_group_card list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3\">\n                                                                <div>\n                                                                    <strong>The total amount of</strong>\n                                                                    <strong>\n                                                                        <p className=\"mb-0\">(including VAT)</p>\n                                                                    </strong>\n                                                                </div>\n                                                                <span><strong>${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</strong></span>\n                                                            </li>\n                                                        </ul>\n\n                                                        <Button variant=\"contained\" color=\"secondary\" onClick={checkoutHandler}>Check Out</Button>\n\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"card mb-4\">\n                                                    <div className=\"card-body\">\n                                                        <ThemeProvider theme={theme}>\n                                                            <form className={classes.root} id=\"discount_form\" noValidate autoComplete=\"off\">\n                                                                <TextField id=\"standard-basic\" color=\"primary\" type=\"input\" className=\"standard_discount\" label=\"Have a discount? Add it here\" />\n                                                            </form>\n                                                        </ThemeProvider>\n                                                        {/* <a className=\"dark-grey-text d-flex justify-content-between\" data-toggle=\"collapse\"\n                                                    href=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                                    Add a discount code (optional)\n                                                                            <span><i className=\"fas fa-chevron-down pt-1\"></i></span>\n                                                </a> */}\n\n                                                        {/* <div className=\"collapse\" id=\"collapseExample\">\n                                                    <div className=\"mt-3\">\n                                                        <div className=\"md-form md-outline mb-0\">\n                                                            <input type=\"text\" id=\"discount-code\" className=\"form-control font-weight-light\"\n                                                                placeholder=\"Enter discount code\" />\n                                                        </div>\n                                                    </div>\n                                                </div> */}\n                                                    </div>\n                                                </div>\n\n\n                                            </div>\n\n\n                                        </div>\n\n\n\n                                    </section>\n\n                                </div>\n                                <div className=\"card mb-4\">\n                                    <div className=\"card-body\">\n\n                                        {/* <Md4 className=\"mb-4\">We accept</Md4> */}\n                                        <Bank\n                                            link1=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg\"\n                                            link2=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg\"\n                                            link3=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg\"\n                                        />\n\n\n                                    </div>\n                                </div>\n                            </main>\n\n                        </div>\n\n                    </>\n\n                )\n\n\n\n\n\n\n            }\n        </Fragment>\n    )\n}\n\nexport default Cart\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\UpdateProfile.js",["523"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\order\\ListOrders.js",["524","525","526","527","528","529","530","531","532","533"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { myOrders, clearErrors } from '../../actions/orderActions'\nimport { Button } from '@material-ui/core'\nimport Topsell from '../product/Topsell'\nimport { getOrderDetails } from '../../actions/orderActions'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: 151,\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n}));\n\n\n\nconst ListOrders = ({ match }) => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\n\n    const { loading, error, orders } = useSelector(state => state.myOrders);\n\n    useEffect(() => {\n        dispatch(myOrders());\n        dispatch(getOrderDetails(match.params.id));\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error, match.params.id])\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Num of Items',\n                    field: 'numOfItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions:\n                    <Link to={`/order/${order._id}`}>\n                        <Button variant=\"contained\" color=\"primary\">\n                            View Product\n                        </Button>\n                    </Link>\n            })\n\n        })\n\n\n\n        return data;\n    }\n\n\n\n    return (\n        <Fragment>\n\n            <MetaData title={'My Orders'} />\n\n            <div className=\"listorder\">\n                {/* <h1 className=\"my-5\">My Orders</h1> */}\n\n                {loading ? <Loader /> : (\n                    <>\n                        <div className=\"bg_lis\">\n\n\n                            <div className=\"list_wrappe\">\n                                <div className=\"list_wrap\">\n                                    <h1>My Orders</h1>\n                                    {orderItems && orderItems.map(item => (\n                                        <Card className={classes.root} key={item}>\n                                            <div className={classes.details}>\n                                                <CardContent className={classes.content}>\n                                                    <Typography component=\"h5\" variant=\"h5\">\n                                                        {item.name}\n                                                    </Typography>\n                                                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                                        Mac Miller\n                                                </Typography>\n                                                </CardContent>\n                                            </div>\n                                            <CardMedia\n                                                className={classes.cover}\n                                                image={item.image}\n                                                title=\"Live from space album cover\"\n                                            />\n                                        </Card>\n\n                                    ))}\n                                </div>\n                                <div className=\"list_wrap\">\n                                    <MDBDataTable\n                                        data={setOrders()}\n                                        className=\"px-3\"\n                                        bordered\n                                        striped\n                                        hover\n                                    />\n                                </div>\n                            </div>\n                            <h1 id=\"toppick_list\">Best Selection</h1>\n                        </div>\n\n                        <div id=\"topsell__list\">\n\n                            <Topsell />\n                        </div>\n\n                    </>\n\n\n                )}\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ListOrders\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\Login.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\Register.js",["534"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register, clearErrors } from '../../actions/userActions'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n\n\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://locaataire.net/\">\n                Locatair LLC\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Register({ history }) {\n\n    // \n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n    })\n\n    const { name, email, password } = user;\n\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push('/')\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('avatar', avatar);\n\n        dispatch(register(formData))\n    }\n\n    const onChange = e => {\n        if (e.target.name === 'avatar') {\n\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setAvatarPreview(reader.result)\n                    setAvatar(reader.result)\n                }\n            }\n\n            reader.readAsDataURL(e.target.files[0])\n\n        } else {\n            setUser({ ...user, [e.target.name]: e.target.value })\n        }\n    }\n\n    // \n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <MetaData title={'Register User'} />\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} Validate onSubmit={submitHandler} encType='multipart/form-data'>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n\n                                name=\"name\"\n                                variant=\"outlined\"\n                                required\n                                fullwidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                value={name}\n                                onChange={onChange}\n                                inputProps={{\n                                    autocomplete: 'new-firstName',\n                                    form: {\n                                        autocomplete: 'off',\n                                    },\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullwidth\n                                id=\"lastName\"\n                                label=\"last Name\"\n\n                                name=\"lastName\"\n                                inputProps={{\n                                    autocomplete: 'new-lastName',\n                                    form: {\n                                        autocomplete: 'off',\n                                    },\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullwidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                value={email}\n                                onChange={onChange}\n                                inputProps={{\n                                    autocomplete: 'new-email',\n                                    form: {\n                                        autocomplete: 'off',\n                                    },\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullwidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                inputProps={{\n                                    autocomplete: 'new-password',\n                                    form: {\n                                        autocomplete: 'off',\n                                    },\n                                }}\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <div className='form-group'>\n                                {/* <label htmlFor='avatar_upload'>Avatar</label> */}\n                                <div className='avatar-wrap'>\n                                    {/* img */}\n                                    <Avatar alt=\"Avatar Preview\" src={avatarPreview} className={classes.large} />\n                                    {/* field */}\n                                    <div className='custom-file'>\n                                        <TextField\n                                            id=\"outlined-basic\"\n                                            type='file'\n                                            name='avatar'\n                                            label=\"Choose Image\"\n                                            variant=\"outlined\"\n                                            accept=\"iamges/*\"\n                                            onChange={onChange}\n                                            className=\"avatar_preview_content\"\n                                        />\n                                        {/* <input\n                                            type='file'\n                                            name='avatar'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            accept=\"iamges/*\"\n                                            onChange={onChange}\n                                        /> */}\n                                        {/* <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Avatar\n                                        </label> */}\n                                    </div>\n                                </div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} style={{ display: 'none' }}>\n                            <FormControlLabel\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        id=\"register_button\"\n                        type=\"submit\"\n                        fullwidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={loading ? true : false}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\UpdatePassword.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\NewPassword.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\Profile.js",["535","536"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Carde from \"react-bootstrap/Card\"\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Buttone from 'react-bootstrap/Button';\nimport email_img from \"../../images/email.jpg\"\nimport join from \"../../images/joined.jpg\"\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\n\nconst Profile = () => {\n\n    const { user, loading } = useSelector(state => state.auth)\n    const classes = useStyles();\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <div id=\"profile_main_main\">\n                    <MetaData title={'Your Profile'} />\n\n                    <div className=\"profile_main\">\n                        {/* <header className=\"header_profile\" /> */}\n                        <div className=\"profile_tile\"><span id=\"hello\">Hello, </span> {user.name}</div>\n                        <main className=\"profile_wrapper\">\n                            <div className=\"profile_image\">\n                                <div className=\"profile__dsn\">\n                                    <Card className={classes.root}>\n                                        <CardActionArea>\n                                            <CardMedia\n                                                className={classes.media}\n                                                image={user.avatar.url}\n                                                title={user.name}\n                                            />\n                                        </CardActionArea>\n                                    </Card>\n                                </div>\n                                <CardContent>\n                                    <div className=\"profile_name\">{user.name}</div>\n                                    {user.role !== 'admin' && (\n                                        <Link to=\"/orders/me\">\n\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                className={classes.button}\n                                                id=\"order\"\n                                            >\n                                                My Orders\n                                    </Button>\n                                        </Link>\n                                    )}\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.button}\n\n                                    >\n                                        Edit Profile\n                                    </Button>\n\n                                </CardContent>\n                            </div>\n                            <div className=\"profile_content\">\n                                <div className=\"profile_inner-left\">\n                                    <div className=\"profile_email\">\n\n                                        <Carde style={{ width: '22rem' }} id=\"profile_email-card\">\n                                            <Carde.Img variant=\"top\" src={email_img} />\n                                            <Carde.Body>\n                                                <Carde.Title><h1 id=\"profile__cardtitle\">Email</h1></Carde.Title>\n                                                <Carde.Text>\n                                                    <h5 id=\"profile__content-text\">Hi{' '} {user.name}, here below is the email you've registered with us.</h5>\n                                                    <span className=\"profile___email\">{user.email}</span>\n                                                </Carde.Text>\n                                                <Button variant=\"contained\" color=\"secondary\" id=\"profile__btn\">Shop Now</Button>\n                                            </Carde.Body>\n                                        </Carde>\n                                    </div>\n                                    <div className=\"profile_join\">\n\n                                        <Carde style={{ width: '22rem' }}>\n                                            <Carde.Img variant=\"top\" src={join} />\n                                            <Carde.Body>\n                                                <Carde.Title><h1 id=\"profile__cardtitle\">Your Journey</h1></Carde.Title>\n                                                <Carde.Text>\n                                                    <h5 id=\"profile__content-text\">At Locataire, we respect our customers.\n                                                    Thank you for choosing Locataire.</h5>\n                                                    You joined in <span className=\"profile__join\"> {String(user.createdAt).substring(0, 10)}</span>\n                                                </Carde.Text>\n                                                <Button variant=\"contained\" color=\"primary\" id=\"profile__btn\">Reset Password</Button>\n                                            </Carde.Body>\n                                        </Carde>\n                                    </div>\n                                </div>\n                            </div>\n                        </main>\n\n                        <section className=\"profile_bgt\">\n                            <div className=\"profile_viewed-product\"></div>\n                            <div className=\"profile_wishlist\"></div>\n                        </section>\n                    </div>\n\n                    <br />\n\n\n\n                    {/* <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\n                        Change Password\n                            </Link> */}\n\n                    {/* <h2 className=\"mt-5 ml-5\">My Profile</h2>\n                    <div className=\"row justify-content-around mt-5 user-info\">\n                        <div className=\"col-12 col-md-3\">\n                            <figure className='avatar avatar-profile'>\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\n                            </figure>\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\n                                Edit Profile\n                            </Link>\n                        </div>\n\n                        <div className=\"col-12 col-md-5\">\n                            <h4>Full Name</h4>\n                            <p>{user.name}</p>\n\n                            <h4>Email Address</h4>\n                            <p>{user.email}</p>\n\n                            <h4>Joined On</h4>\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\n\n                            {user.role !== 'admin' && (\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\n                                    My Orders\n                                </Link>\n                            )}\n\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\n                                Change Password\n                            </Link>\n                        </div>\n                    </div> */}\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\ProductsList.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\NewProduct.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\ForgotPassword.js",["537","538","539"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from '@material-ui/core'\n\nconst ForgotPassword = () => {\n\n    const [email, setEmail] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (message) {\n            alert.success(message)\n        }\n\n    }, [dispatch, alert, error, message])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData))\n    }\n\n    function Copyright() {\n        return (\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                <Link color=\"inherit\" href=\"https://locataire.net/\">\n                    Locataire LLC\n                </Link>{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n        );\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(1),\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n        },\n    }));\n\n\n    const classes = useStyles();\n    return (\n        <Fragment>\n            <MetaData title={'Forgot Password'} />\n\n            {/* <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">Forgot Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Enter Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"forgot_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false} >\n                            Send Email\n                    </button>\n\n                    </form>\n                </div>\n            </div> */}\n\n            {/* ..... */}\n\n            <MetaData title={'Login'} />\n            <Container component=\"main\" maxWidth=\"xs\" >\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Reset Password\n                    </Typography>\n                    <form className={classes.form} Validate onSubmit={submitHandler}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullwidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            inputProps={{\n                                autocomplete: 'new-password',\n                                form: {\n                                    autocomplete: 'off',\n                                },\n                            }}\n                            autoFocus\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n\n\n                        <Button\n                            type=\"submit\"\n                            fullwidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            id=\"login_button\"\n                            disabled={loading ? true : false}\n                        >\n                            Send Email\n                        </Button>\n\n                    </form>\n                </div>\n                <Box mt={8}>\n                    <Copyright />\n                </Box>\n            </Container>\n\n            {/* ..... */}\n\n\n        </Fragment>\n    )\n}\n\nexport default ForgotPassword\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\OrdersList.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\ProductReviews.js",["540"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Category.js",["541","542","543"],"import React, { Fragment, useState } from 'react'\r\nimport { GiRoastChicken, GiGoat, GiSyringe } from 'react-icons/gi'\r\nimport { Link } from 'react-router-dom';\r\nimport CategoriesData from './categories.json'\r\n\r\nconst Category = () => {\r\n\r\n\r\n    const [category, setCategory] = useState('');\r\n\r\n\r\n\r\n    const icon = [\r\n        <GiRoastChicken />,\r\n        <img src={require('./eggs.svg')} alt=\"eggs\" />,\r\n        <img src={require('./pig.svg')} alt=\"pig\" />,\r\n        <GiGoat />,\r\n        <img src={require('./paw-solid.svg')} alt=\"paw\" />,\r\n        <GiSyringe />,\r\n        < img src={require('./paw-solid.svg')} alt=\"paw\" />\r\n    ]\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ul className=\"category_render-wrap\">\r\n                {CategoriesData.map((item, key) => {\r\n                    return (\r\n                        <li className=\"row category_item__icon\" key={key}>\r\n                            <span className=\"catg_icon col\">\r\n                                <img src={item.icon} alt={item.alt} />\r\n                            </span>\r\n                            <span className=\"category_item__title col\">\r\n                                <Link to=\"/\">\r\n                                    {item.title}\r\n                                </Link>\r\n                            </span>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\UpdateUser.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\farm\\Farm.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\about\\Main.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\about\\Header.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\actions\\productActions.js",["544"],"import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0, size, color) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n        if (size) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}&size=${size}`\n        }\n\n        if (color) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}&color=${color}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Risk\\Header.js",["545","546","547","548","549","550"],"import React, { Fragment } from 'react'\r\nimport Nav from \"../../HeaderBSN\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from '@material-ui/core';\r\nimport Slider from './Slider'\r\n// import Styled from 'styled-components'\r\nimport Helmet from \"react-helmet\"\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const FlickityScript = (url) => {\r\n        var script = document.createElement('script');\r\n        script.src = url;\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n    }\r\n    FlickityScript('https://res.cloudinary.com/locataire/raw/upload/v1620773240/flickity_pt5r1r.js');\r\n    FlickityScript('https://npmcdn.com/flickity@2/dist/flickity.pkgd.js');\r\n    FlickityScript('https://res.cloudinary.com/locataire/raw/upload/v1620934139/main_el5xtl.js');\r\n\r\n\r\n    const HeaderOne = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"riskHeader_title\">\r\n                    <h1>\r\n                        enhance the <span id=\"fa-underline\">degree</span> of confidence\r\n                    </h1>\r\n                </div>\r\n                <div className=\"riskHeader_sub-title\">\r\n                    <p>\r\n\r\n                        Locataire Risk Management provides tailored solutions to help private companies improve business strategies and practices.\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const HeaderTwo = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"riskHeader_title\">\r\n                    <h1>\r\n                        <span id=\"fa-underline\">Our</span> Service in: <div style={{ color: '#313962', fontWeight: 'bold' }}>Audit</div>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"riskHeader_sub-title\">\r\n                    <p>\r\n                        Achieved by our expression of an opinion on whether the financial statements are prepared in accordance with the applicable reporting framework.\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    const HeaderThree = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"riskHeader_title\">\r\n                    <h1>\r\n                        <span id=\"fa-underline\">Our</span> Service in: <div style={{ color: '#313962', fontWeight: 'bold' }}>Assurance</div>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"riskHeader_sub-title\">\r\n                    <p>\r\n                        Extract insights from data, as well as third-party assurance to manage risks from the extended enterprise.\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    const HeaderFour = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"riskHeader_title\">\r\n                    <h1>\r\n                        <span id=\"fa-underline\">Our</span> Service in: <div style={{ color: '#313962', fontWeight: 'bold' }}>Operational Risk & Transformation </div>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"riskHeader_sub-title\">\r\n                    <p>\r\n                        We help clients transform the ways in which they leverage people, technology, data, business processes and controls to address their operational risks and drive business performance.\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    const HeaderFive = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"riskHeader_title\">\r\n                    <h1>\r\n                        <span id=\"fa-underline\">Our</span> Service in: <div style={{ color: '#313962', fontWeight: 'bold' }}>Third Party Risk Management </div>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"riskHeader_sub-title\">\r\n                    <p>\r\n                        We help clients evaluate and manage third-party risk related to outsourcing, and other business partnerships across the organization to maximize effectiveness.\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const HeaderOneImageFS = () => {\r\n        return (\r\n            <div className=\"riskHeader_imageRight-banner\" id=\"riskHeader_imgOne_Fs\" />\r\n        )\r\n    }\r\n    const HeaderOneImage = () => {\r\n        return (\r\n            <div className=\"riskHeader_imageRight-banner\" id=\"riskHeader_imgOne\" />\r\n        )\r\n    }\r\n    const HeaderTwoImage = () => {\r\n        return (\r\n            <div className=\"riskHeader_imageRight-banner\" id=\"riskHeader_imgTwo\" />\r\n        )\r\n    }\r\n    const HeaderThreeImage = () => {\r\n        return (\r\n            <div className=\"riskHeader_imageRight-banner\" id=\"riskHeader_imgThree\" />\r\n        )\r\n    }\r\n    const HeaderFourImage = () => {\r\n        return (\r\n            <div className=\"riskHeader_imageRight-banner\" id=\"riskHeader_imgFour\" />\r\n        )\r\n    }\r\n    const HeaderFiveImage = () => {\r\n        return (\r\n            <div className=\"riskHeader_imageRight-banner\" id=\"riskHeader_imgFive\" />\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Helmet>\r\n                <link rel=\"stylesheet\" href=\"https://npmcdn.com/flickity@2/dist/flickity.css\" />\r\n            </Helmet>\r\n            <Nav />\r\n            <div className=\"riskHeader\">\r\n                {/* image */}\r\n                <div id=\"risk_cycle-img\" />\r\n                {/* image end */}\r\n                <section className=\"riskHeader_row riskHeader_content\" id=\"riskHeader_content\">\r\n                    <Slider contentOne={<HeaderOne />} contentTwo={<HeaderTwo />} contentThree={<HeaderThree />} contentFour={<HeaderFour />} contentFive={<HeaderFive />} />\r\n                    <div className=\"riskHeader_btn\">\r\n                        <Link to=\"/\" className=\"riskHeader_btn-left\">\r\n                            <Button variant=\"contained\" color=\"primary\" >\r\n                                Learn More\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to=\"/\" className=\"riskHeader_btn-right\">\r\n                            <Button variant=\"outlined\" color=\"primary\" >\r\n                                Contact Us\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"riskHeader_row riskHeader_image\" id=\"risk_header-video\" style={{ zIndex: '1' }} />\r\n            </div>\r\n            <header className=\"riskHeader__smallDesktop\">\r\n                <div className=\"__container\">\r\n                    <div className=\"__content\">\r\n                        <h3>risk management</h3>\r\n                        <div id=\"sep_riskHeader_ct\" />\r\n                        <h1>enhance the degree of confidence</h1>\r\n                        <div id=\"__smallScreen_text\">\r\n                            <p>\r\n                                We provides tailored solutions to help private companies improve business strategies and practices.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"riskHeader_btn\">\r\n                            <Link to=\"/\" className=\"riskHeader_btn-left\">\r\n                                <Button variant=\"contained\" color=\"secondary\" >\r\n                                    Learn More\r\n                                </Button>\r\n                            </Link>\r\n                            <Link to=\"/\" className=\"riskHeader_btn-right\">\r\n                                <Button variant=\"contained\" color=\"primary\" >\r\n                                    Contact Us\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"__image\">\r\n                        <div id=\"riskHeader_illustr\" />\r\n                    </div>\r\n\r\n                </div>\r\n            </header>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Risk\\Main.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\farm\\Header.js",["551"],"import React from 'react'\r\nimport { Fragment, useEffect } from 'react'\r\nimport Styled from './styles/styleHeader'\r\nimport { } from './styles/styleHeader'\r\nconst Header = () => {\r\n\r\n    // remove farm header when farm mounts\r\n    useEffect(() => {\r\n        var homeView = document.getElementById('homeView');\r\n        homeView.style.display = 'none'\r\n        return () => {\r\n            homeView.style.display = 'block'\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\user\\LoginForm.js",["552"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, clearErrors } from '../../actions/userActions'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n\r\n\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://locaataire.net/\">\r\n                Locatair LLC\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Register({ history }) {\r\n\r\n    // \r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { name, email, password } = user;\r\n\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(register(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    // \r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <MetaData title={'Register User'} />\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={submitHandler} encType='multipart/form-data' autocomplete=\"off\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                inputProps={{\r\n                                    autocomplete: 'new-name',\r\n                                    form: {\r\n                                        autocomplete: 'off',\r\n                                    },\r\n                                }}\r\n                                name=\"firstName\"\r\n                                type=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                value={name}\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                type=\"name\"\r\n                                name=\"lastName\"\r\n                                inputProps={{\r\n                                    autocomplete: 'new-name',\r\n                                    form: {\r\n                                        autocomplete: 'off',\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                inputProps={{\r\n                                    autocomplete: 'new-email',\r\n                                    form: {\r\n                                        autocomplete: 'off',\r\n                                    },\r\n                                }}\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={onChange}\r\n                                inputProps={{\r\n                                    autocomplete: 'new-password',\r\n                                    form: {\r\n                                        autocomplete: 'off',\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <div className='form-group'>\r\n                                {/* <label htmlFor='avatar_upload'>Avatar</label> */}\r\n                                <div className='d-flex align-items-center'>\r\n                                    {/* img */}\r\n                                    <div>\r\n                                        <figure className='avatar mr-3 item-rtl'>\r\n                                            <img\r\n                                                src={avatarPreview}\r\n                                                className='rounded-circle'\r\n                                                alt='Avatar Preview'\r\n                                            />\r\n                                        </figure>\r\n                                    </div>\r\n                                    {/* field */}\r\n                                    <div className='custom-file'>\r\n                                        <TextField\r\n                                            id=\"outlined-basic\"\r\n                                            type='file'\r\n                                            name='avatar'\r\n                                            label=\"Outlined\"\r\n                                            variant=\"outlined\"\r\n                                            accept=\"iamges/*\"\r\n                                            onChange={onChange}\r\n                                        />\r\n                                        {/* <input\r\n                                            type='file'\r\n                                            name='avatar'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            accept=\"iamges/*\"\r\n                                            onChange={onChange}\r\n                                        /> */}\r\n                                        {/* <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Avatar\r\n                                        </label> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        id=\"register_button\"\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        disabled={loading ? true : false}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}",["553","554"],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Risk\\Slider.js",["555"],"import React, { Component } from 'react'\r\nimport Slide from \"react-slick\";\r\nimport Helmet from 'react-helmet';\r\n\r\nexport default class Slider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    render() {\r\n        const settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            fade: this.props.fade,\r\n            speed: 2000,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            autoplay: true,\r\n            autoplaySpeed: 8000\r\n        };\r\n\r\n        return (\r\n            < div >\r\n                <Helmet>\r\n                    <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\r\n                    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\r\n                </Helmet>\r\n                <Slide {...settings}>\r\n                    <div>\r\n                        {this.props.contentOne}\r\n                    </div>\r\n                    <div>\r\n                        {this.props.contentTwo}\r\n                    </div>\r\n                    <div>\r\n                        {this.props.contentThree}\r\n                    </div>\r\n                    <div>\r\n                        {this.props.contentFour}\r\n                    </div>\r\n                    <div>\r\n                        {this.props.contentFive}\r\n                    </div>\r\n                </Slide>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\farm\\styles\\styleHeader.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\sectionIdentifier\\Title.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\sectionIdentifier\\IntroText.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\about\\Banner_svg.js",[],["556","557"],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Bank.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\product\\ProductList.js",["558","559","560","561","562","563","564","565","566","567","568","569","570","571","572"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../styles/Locataire.css'\r\nimport Styled from 'styled-components'\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\nimport ListReviews from '../review/ListReviews'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductDetails, newReview, clearErrors } from '../../actions/productActions'\r\nimport { addItemToCart } from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\n// style for product\r\nconst Productlist = Styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    column-gap: 4.5rem;\r\n    padding: 1rem;\r\n        position: relative;\r\n        \r\n`\r\nconst ProductName = Styled.h6`\r\n    text-align: left;\r\n`\r\nconst RightContent = Styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst NamePrice = Styled.div`\r\n    justify-content: space-between!important;\r\n    padding: 0 1rem;\r\n`\r\nconst AddToCard = Styled.div`\r\n    width: fit-content;\r\n    position: absolute;\r\n    bottom: 2rem;\r\n    right: 2rem;\r\n`\r\nconst Star = Styled.div`\r\n    display: block;\r\n`\r\nconst RatingOuter = Styled.div`\r\n    float: left;\r\n`\r\nconst SidebarSpan = Styled.div`\r\n margin: 0.1rem!important;\r\n    padding: .8rem 1.1rem!important;\r\n    \r\n`\r\n\r\nconst ProductList = ({ product, col }) => {\r\n\r\n    // const [quantity, setQuantity] = useState(1)\r\n    // const [rating, setRating] = useState(0);\r\n    // const [comment, setComment] = useState('');\r\n\r\n    // const dispatch = useDispatch();\r\n    // const alert = useAlert();\r\n\r\n    // const { loading, error, product } = useSelector(state => state.productDetails)\r\n    // const { user } = useSelector(state => state.auth)\r\n    // const { error: reviewError, success } = useSelector(state => state.newReview)\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Productlist className=\"product product__list farmStyle\">\r\n\r\n            <div className=\"img-container img_list\">\r\n                <Link to={`/product/${product._id}`}>\r\n                    <img src={product.images[0].url} alt=\"products\" />\r\n                </Link>\r\n                <div className=\"addCart\">\r\n                    <i className=\"fas fa-shopping-cart\"></i>\r\n                </div>\r\n\r\n                <SidebarSpan className=\"side-icons\">\r\n                    <span className=\" span__list\"><i className=\"fas fa-search\"></i></span>\r\n                    <span className=\" span__list\"><i className=\"far fa-heart \"></i></span>\r\n                    <span className=\" span__list\"><i className=\"fas fa-sliders-h \"></i></span>\r\n                </SidebarSpan>\r\n\r\n            </div>\r\n\r\n            <Link to={`/product/${product._id}`} id=\"link_list\">\r\n                <RightContent className=\"bottom\">\r\n                    <NamePrice className=\"row\">\r\n                        <ProductName className=\"product_title\"><Link to={`/product/${product._id}`}>{product.name}</Link></ProductName>\r\n                        <div className=\"price price_list\">\r\n                            <span>${product.price}</span>\r\n                        </div>\r\n                    </NamePrice>\r\n                    <Star>\r\n                        <RatingOuter className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                        </RatingOuter>\r\n                    </Star>\r\n                    <AddToCard>\r\n                        <Button variant=\"contained\" color=\"secondary\">ADD TO CARD</Button>\r\n                    </AddToCard>\r\n                </RightContent>\r\n            </Link>\r\n\r\n        </Productlist>\r\n    )\r\n}\r\n\r\nexport default ProductList\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Grid.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\List.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Catego.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Select.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Input.js",[],["573","574"],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\product\\Product.js",["575","576","577","578","579","580","581","582","583","584"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../../styles/Locataire.css'\nimport Styled from 'styled-components'\n\n// style for product\nconst ProductLayout = Styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n    gap: 3rem;\n    max-width: 130rem;\n    margin: 0 auto;\n    padding: 0 1.6rem;\n`\nconst ProductItem = Styled.div`\n   overflow: hidden;\n`\nconst ImgContainer = Styled.div`\n      position: relative;\n    cursor: pointer;\n`\nconst IMG = Styled.img`\n    \n        object-fit: cover;\n    height: 100%;\n    width: 100%;\n    cursor: pointer;\n`\n\nconst AddCart = Styled.div`\n    \n      position: absolute;\n    right: 0;\n    bottom: 0.6rem;\n    background-color: var(--white);\n    border-radius: 50%;\n    padding: 1.3rem 1.6rem;\n    box-shadow: 0 0.5rem 1.5rem rgb(0 0 0 / 10%);\n    transition: all 300ms ease-in-out;\n    cursor: pointer;\n`\nconst SideIcons = Styled.ul`\n        position: absolute;\n    right: 0;\n    top: 30%;\n    transform: translate(80%, -50%);\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    transition: all 500ms ease-in-out;\n`\n\nconst Span = Styled.span`\n        font-size: 1.4rem;\n    background-color: var(--white);\n    margin: 0.3rem;\n    padding: 1rem 1.3rem;\n    border-radius: 50%;\n    transition: all 300ms ease-in-out;\n`\nconst Bottom = Styled.div`\n     padding: 1rem;\n    text-align: center;\n`\nconst ProductPrice = Styled.div`\n    display: block;\n`\nconst PriceSpan = Styled.div`\n    color: var(--primary);\n    font-size: 1.8rem;\n`\n\nconst Product = ({ product, col }) => {\n    return (\n\n        // <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n        //  <div className=\"card p-3 rounded\">\n        //     <img\n        //         className=\"card-img-top mx-auto\"\n        //         src={product.images[0].url}\n        //     />\n        //     <div className=\"card-body d-flex flex-column\">\n        //         <h5 className=\"card-title\">\n        //             <Link to={`/product/${product._id}`}>{product.name}</Link>\n        //         </h5>\n        //         <div className=\"ratings mt-auto\">\n        //             <div className=\"rating-outer\">\n        //                 <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n        //             </div>\n        //             <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n        //         </div>\n        //         <p className=\"card-text\">${product.price}</p>\n        //         <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n        //     </div>\n        // </div> \n\n        // {/* my product */}\n\n        <div className=\"product farmStyle\">\n            <div className=\"img-container\">\n                {/* <Link to={`/product/${product._id}`} > */}\n                <img src={product.images[0].url} alt=\"products\" />\n                {/* </Link> */}\n                <div className=\"addCart\">\n                    <i className=\"fas fa-shopping-cart\"></i>\n                </div>\n\n                <div className=\"side-icons\">\n                    <span><i className=\"fas fa-search\"></i></span>\n                    <span><i className=\"far fa-heart\"></i></span>\n                    <span><i className=\"fas fa-sliders-h\"></i></span>\n                </div>\n            </div>\n            <div className=\"bottom\">\n                <h6 className=\"product_title\"><Link to={`/product/${product._id}`}>{product.name}</Link></h6>\n                <div className=\"price\">\n                    <span>${product.price}</span>\n                </div>\n            </div>\n        </div>\n\n\n        // {/* my product ends here */}\n\n    )\n}\n\nexport default Product\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\review\\ListReviews.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\ButtonEight.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\Contact.tsx",["585","586","587"],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\Contact.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\CtForm.js",["588","589","590","591","592"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport { Button, Step, StepLabel, Stepper, Box } from '@material-ui/core';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport ContactInformation from './steps/Personal';\r\nimport OrgInformation from './steps/Business';\r\nimport Message from './steps/Message';\r\nimport './style.css'\r\nimport Recaptcha from 'react-recaptcha';\r\nimport swal from 'sweetalert'\r\nimport emailjs from 'emailjs-com';\r\nimport { init } from 'emailjs-com';\r\nimport mCustomCss from '../../../images/mC/jquery.mCustomScrollbar.css';\r\n\r\n\r\n\r\nconst steps = [ContactInformation, OrgInformation, Message];\r\n\r\nconst CtForm = (props) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [isVerified, setIsverfied] = useState(false);\r\n\r\n    const isLastStep = () => {\r\n        return activeStep === steps.length - 1;\r\n    };\r\n\r\n    const handlePrev = () => {\r\n        setActiveStep(Math.max(activeStep - 1, 0));\r\n    };\r\n\r\n    const handleNext = () => [\r\n        setActiveStep(Math.min(activeStep + 1, steps.length - 1))\r\n    ];\r\n\r\n\r\n\r\n    const initialValues = steps.reduce(\r\n        (values, { initialValues }) => ({\r\n            ...values,\r\n            ...initialValues\r\n        }),\r\n        {}\r\n    );\r\n    const ActiveStep = steps[activeStep];\r\n    const validationSchema = ActiveStep.validationSchema;\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //  Validate fields\r\n    const handleFormValidation = (e) => {\r\n        let firstname = document.getElementById('firstname')\r\n        let lastname = document.getElementById('lastname')\r\n        let email = document.getElementById('email')\r\n        let role = document.getElementById('yourRole')\r\n\r\n        let address = document.getElementById('address')\r\n        let company = document.getElementById('company')\r\n        let country = document.getElementById('country')\r\n        let companyWebsite = document.getElementById('companyWebsite')\r\n\r\n        let selectSubject = document.getElementById('selectSubject')\r\n        let phoneNumber = document.getElementById('phoneNumber')\r\n        let messageField = document.getElementById('messageField')\r\n\r\n        e.preventDefault();\r\n\r\n        if (firstname.value === '' || lastname.value === '' || email.value === '' || role.value === '' || address.value === '' || company.value === '' || country.value === '' || companyWebsite.value === '' || selectSubject.value === '' || phoneNumber.value === '' || messageField.value === '') {\r\n            return handleSubmitFailure();\r\n        } else {\r\n\r\n            sendEmail(firstname.value, email.value, messageField.value);\r\n            handleSubmitSuccess();\r\n            console.log('email sent!')\r\n        }\r\n\r\n    }\r\n\r\n    const sendEmail = (firstname, email, messageField) => {\r\n        init(\"user_QdlOPmbEXe6behLJTKfQh\");\r\n        emailjs.send('service_j9cx42g', 'template_h9mz07x', {\r\n            from_name: firstname,\r\n            to_name: email,\r\n            message: messageField\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const handleSubmitSuccess = () => {\r\n        swal({\r\n            title: \"Congrats! \",\r\n            text: \"Your message has been sent successful\",\r\n            icon: \"success\",\r\n            button: \"Close!\",\r\n        });\r\n    }\r\n    const handleSubmitFailure = () => {\r\n        swal({\r\n            title: \"Sorry! \",\r\n            text: \"Your message has could not be sent. Please see that all required steps has been filled.\",\r\n            icon: \"error\",\r\n            button: \"Try Again!\",\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const onSubmit = (values, formikBag) => {\r\n        //verification\r\n        if (isVerified) {\r\n            document.getElementById('verificationMessage').innerText = 'You have been verified !';\r\n        } else {\r\n            document.getElementById('verificationMessage').innerText = 'You have not been verified !';\r\n        }\r\n        const { setSubmitting } = formikBag;\r\n\r\n        if (!isLastStep()) {\r\n            setSubmitting(false);\r\n            handleNext();\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        console.log(values);\r\n\r\n        setTimeout(() => {\r\n            setSubmitting(false);\r\n        }, 1000);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const LoadLink = (url) => {\r\n    //         var script = document.createElement('script');\r\n    //         script.src = url\r\n    //         script.async = true\r\n    //     }\r\n\r\n\r\n\r\n\r\n\r\n    // }, [])\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({ isSubmitting, touched, values }) => (\r\n                <>\r\n                    <Form id=\"ct_form\">\r\n                        <Stepper alternativeLabel activeStep={activeStep} id=\"theStepper\">\r\n                            {steps.map((step, index) => (\r\n                                <Step key={index}>\r\n                                    <StepLabel>{steps[index].label}</StepLabel>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n\r\n                        <SwipeableViews index={activeStep} data-mcs-theme=\"dark\" style={{ overflow: 'hidden!important' }} id=\"swipeview\">\r\n                            {steps.map((step, index) => {\r\n                                const Component = steps[index];\r\n                                return <Component key={index} />;\r\n                            })}\r\n                        </SwipeableViews>\r\n                        <Box paddingTop={2} display='flex' fullWidth>\r\n                            <Button\r\n                                disabled={activeStep === 0 || isSubmitting}\r\n\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={handlePrev}\r\n                            >\r\n                                Previous\r\n                            </Button>\r\n                            <div id=\"ct__spc\" />\r\n                            {/* <Button disabled={isSubmitting} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                                {isLastStep() ? 'Submit' : 'Next'}\r\n                            </Button> */}\r\n                            {isLastStep() ? (<><Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleFormValidation}>Submit</Button></>) : (<><Button disabled={isSubmitting} type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button></>)}\r\n                        </Box>\r\n                    </Form>\r\n\r\n                    {/* <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                    <pre>{JSON.stringify(touched, null, 2)}</pre> */}\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\nexport default CtForm;","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\steps\\Personal.js",["593"],"import React from 'react';\r\nimport { Field } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\nimport { Typography } from '@material-ui/core';\r\nimport * as Yup from 'yup';\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst ContactInformation = props => {\r\n    return (\r\n        <section id=\"personal\">\r\n            {/* <Typography variant=\"h3\" component=\"h1\">\r\n                Contact Information\r\n\t\t\t</Typography> */}\r\n            <Box paddingBottom={2} display='flex' justifyContent='space-between'>\r\n                <Field name=\"firstName\" label=\"First Name\" component={TextField} style={{ width: '45%' }} id=\"firstname\" />\r\n                <Field name=\"lastName\" label=\"Last Name\" component={TextField} style={{ width: '45%' }} id=\"lastname\" />\r\n            </Box>\r\n\r\n            <Box paddingBottom={2}>\r\n                <Field name=\"email\" label=\"Email\" component={TextField} fullwidth id=\"email\" />\r\n            </Box>\r\n            <Box paddingBottom={2}>\r\n                <Field name=\"yourRole\" label=\"Your Role\" component={TextField} fullwidth id=\"yourRole\" />\r\n            </Box>\r\n        </section>\r\n    );\r\n};\r\n\r\nContactInformation.label = 'Contact Information';\r\nContactInformation.initialValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    yourRole: ''\r\n};\r\nContactInformation.validationSchema = Yup.object().shape({\r\n    firstName: Yup.string().required('Please enter your first name'),\r\n    lastName: Yup.string().required('Please enter your last name'),\r\n    email: Yup.string().required('Please enter your email'),\r\n    yourRole: Yup.string().required('Please enter your role')\r\n});\r\n\r\nexport default ContactInformation;\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\steps\\Message.js",["594"],"import React, { useState } from 'react';\r\nimport { Field } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Box } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport * as Yup from 'yup';\r\nimport Recaptcha from 'react-recaptcha';\r\n\r\nconst Message = props => {\r\n    const [subject, setSubject] = useState('');\r\n    console.log(subject)\r\n\r\n    const handleChange = (e) => {\r\n        setSubject(prevState => (e.target.value));\r\n        console.log(subject)\r\n    };\r\n\r\n    return (\r\n        <section className=\"mCustomScrollbar\" data-mcs-theme=\"dark\" id=\"message_part\">\r\n            {/* <Typography variant=\"h3\" component=\"h1\">\r\n                Your Message\r\n\t\t\t</Typography> */}\r\n            <Box paddingBottom={2}>\r\n                <InputLabel id=\"demo-simple-select-label\">Subject</InputLabel>\r\n                <Select\r\n                    name=\"selectOpt\"\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"selectSubject\"\r\n                    value={subject}\r\n                    onChange={handleChange}\r\n                    label='Subject'\r\n                    fulwWidth\r\n                >\r\n\r\n                    <MenuItem value='Locataire Real-Estate' className=\"select__item-ct\">Locataire Real-Estate</MenuItem>\r\n                    <MenuItem value='Locataire Audit & Risk Management' className=\"select__item-ct\">Locataire Audit & Risk Management</MenuItem>\r\n                    <MenuItem value='Locataire Farm' className=\"select__item-ct\">Locataire Farm</MenuItem>\r\n                    <MenuItem value='Locataire careers' className=\"select__item-ct\">Locataire careers</MenuItem>\r\n                </Select>\r\n                {/* <Field name=\"subject\" label=\"Subject\" component={Select}  value={subject} >\r\n                </Field> */}\r\n\r\n            </Box>\r\n            <Box paddingBottom={2}>\r\n                <Field name=\"phone\" label=\"Phone\" component={TextField} style={{ width: '80%' }} id=\"phoneNumber\" />\r\n            </Box>\r\n            <Box paddingBottom={2}>\r\n                <Field\r\n                    name=\"message\"\r\n                    label=\"Message\"\r\n                    component={TextField}\r\n                    id=\"messageField\"\r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue=\"your message\"\r\n                    variant=\"outlined\"\r\n                    fulwWidth\r\n\r\n                />\r\n            </Box>\r\n            <Box paddingBottom={2}>\r\n                <Field name=\"googleSecurity\" label=\"Type the following\" component={TextField} />\r\n                <p id=\"verificationMessage\"></p>\r\n            </Box>\r\n\r\n\r\n\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nMessage.label = 'Your Message';\r\nMessage.initialValues = {\r\n    subject: '',\r\n    phone: '',\r\n    message: '',\r\n    googleSecurity: ''\r\n};\r\nMessage.validationSchema = Yup.object().shape({\r\n    subject: Yup.string().required('Please enter a subject'),\r\n    phone: Yup.string().required('Please enter your phone number'),\r\n    message: Yup.string().required('Please enter your message')\r\n});\r\n\r\nexport default Message;\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\layout\\ct\\steps\\Business.js",["595"],"import React from 'react';\r\nimport { Field } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\nimport { Grid, Box } from '@material-ui/core';\r\nimport * as Yup from 'yup';\r\n\r\nconst Business = props => {\r\n    return (\r\n        <>\r\n            {/* <Typography variant=\"h3\" component=\"h1\">\r\n                Org Information\r\n\t\t\t</Typography> */}\r\n            <section id=\"business\">\r\n                <Box paddingBottom={2} >\r\n                    <Field\r\n                        name=\"address\"\r\n                        label=\"Address\"\r\n                        component={TextField}\r\n                        fullwidth\r\n                        id=\"address\"\r\n                    />\r\n                </Box>\r\n                <Box paddingBottom={2} display='flex' justifyContent='space-between'>\r\n                    <Field\r\n                        name=\"company\"\r\n                        label=\"Company Name\"\r\n                        component={TextField}\r\n                        style={{ width: '45%' }}\r\n                        id=\"company\"\r\n                    />\r\n                    <Field\r\n                        name=\"country\"\r\n                        label=\"Country\"\r\n                        component={TextField}\r\n                        style={{ width: '45%' }}\r\n                        id=\"country\"\r\n                    />\r\n                </Box>\r\n                <Box paddingBottom={2}>\r\n                    <Field\r\n                        name=\"companyWebsite\"\r\n                        label=\"Company Website\"\r\n                        component={TextField}\r\n                        fullwidth\r\n                        id=\"companyWebsite\"\r\n                    />\r\n                </Box>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nBusiness.label = 'Org Information';\r\nBusiness.validationSchema = Yup.object().shape({\r\n    address: Yup.string().required('Please enter your business name'),\r\n    company: Yup.string().required('Please enter your street address'),\r\n    country: Yup.string().required('Please select your country')\r\n});\r\n\r\nexport default Business;\r\n","C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\RealEstate.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\buttonSix.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\buttonNine.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\buttonSeven.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\Realtymb.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\realty_about_layout.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\Contact_btn.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\ButtonThree.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\buttonOne.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\Slick.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\SlickInvestment.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\SlickProperty.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\SidebarData.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\Boostrapp.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\main\\Main_Tablet.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\main\\Main_Mobile.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\main\\Main_Desktop.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\IMG\\Mobile.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\IMG\\MobileB.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\Realty\\IMG\\MobileC.js",[],"C:\\Users\\Gedeon\\Music\\shopit-master\\frontend\\src\\components\\buttons\\ButtonPrt.js",[],{"ruleId":"596","replacedBy":"597"},{"ruleId":"598","replacedBy":"599"},{"ruleId":"600","severity":1,"message":"601","line":1,"column":27,"nodeType":"602","messageId":"603","endLine":1,"endColumn":36},{"ruleId":"600","severity":1,"message":"601","line":1,"column":17,"nodeType":"602","messageId":"603","endLine":1,"endColumn":26},{"ruleId":"600","severity":1,"message":"604","line":2,"column":10,"nodeType":"602","messageId":"603","endLine":2,"endColumn":18},{"ruleId":"600","severity":1,"message":"605","line":14,"column":16,"nodeType":"602","messageId":"603","endLine":14,"endColumn":21},{"ruleId":"600","severity":1,"message":"606","line":17,"column":21,"nodeType":"602","messageId":"603","endLine":17,"endColumn":27},{"ruleId":"600","severity":1,"message":"607","line":25,"column":8,"nodeType":"602","messageId":"603","endLine":25,"endColumn":22},{"ruleId":"600","severity":1,"message":"608","line":33,"column":10,"nodeType":"602","messageId":"603","endLine":33,"endColumn":16},{"ruleId":"600","severity":1,"message":"609","line":35,"column":31,"nodeType":"602","messageId":"603","endLine":35,"endColumn":39},{"ruleId":"600","severity":1,"message":"610","line":35,"column":41,"nodeType":"602","messageId":"603","endLine":35,"endColumn":51},{"ruleId":"600","severity":1,"message":"611","line":35,"column":53,"nodeType":"602","messageId":"603","endLine":35,"endColumn":65},{"ruleId":"600","severity":1,"message":"612","line":36,"column":8,"nodeType":"602","messageId":"603","endLine":36,"endColumn":14},{"ruleId":"600","severity":1,"message":"613","line":37,"column":8,"nodeType":"602","messageId":"603","endLine":37,"endColumn":12},{"ruleId":"600","severity":1,"message":"614","line":38,"column":8,"nodeType":"602","messageId":"603","endLine":38,"endColumn":12},{"ruleId":"600","severity":1,"message":"615","line":41,"column":8,"nodeType":"602","messageId":"603","endLine":41,"endColumn":12},{"ruleId":"600","severity":1,"message":"616","line":47,"column":7,"nodeType":"602","messageId":"603","endLine":47,"endColumn":20},{"ruleId":"600","severity":1,"message":"617","line":55,"column":7,"nodeType":"602","messageId":"603","endLine":55,"endColumn":14},{"ruleId":"600","severity":1,"message":"618","line":67,"column":19,"nodeType":"602","messageId":"603","endLine":67,"endColumn":27},{"ruleId":"600","severity":1,"message":"619","line":119,"column":11,"nodeType":"602","messageId":"603","endLine":119,"endColumn":25},{"ruleId":"600","severity":1,"message":"601","line":1,"column":27,"nodeType":"602","messageId":"603","endLine":1,"endColumn":36},{"ruleId":"600","severity":1,"message":"606","line":7,"column":10,"nodeType":"602","messageId":"603","endLine":7,"endColumn":16},{"ruleId":"600","severity":1,"message":"620","line":7,"column":23,"nodeType":"602","messageId":"603","endLine":7,"endColumn":31},{"ruleId":"600","severity":1,"message":"621","line":7,"column":33,"nodeType":"602","messageId":"603","endLine":7,"endColumn":36},{"ruleId":"600","severity":1,"message":"622","line":8,"column":10,"nodeType":"602","messageId":"603","endLine":8,"endColumn":29},{"ruleId":"600","severity":1,"message":"623","line":8,"column":31,"nodeType":"602","messageId":"603","endLine":8,"endColumn":48},{"ruleId":"600","severity":1,"message":"624","line":2,"column":10,"nodeType":"602","messageId":"603","endLine":2,"endColumn":16},{"ruleId":"600","severity":1,"message":"625","line":2,"column":18,"nodeType":"602","messageId":"603","endLine":2,"endColumn":29},{"ruleId":"600","severity":1,"message":"626","line":5,"column":8,"nodeType":"602","messageId":"603","endLine":5,"endColumn":15},{"ruleId":"600","severity":1,"message":"627","line":6,"column":8,"nodeType":"602","messageId":"603","endLine":6,"endColumn":15},{"ruleId":"600","severity":1,"message":"628","line":2,"column":10,"nodeType":"602","messageId":"603","endLine":2,"endColumn":14},{"ruleId":"629","severity":1,"message":"630","line":14,"column":231,"nodeType":"631","endLine":14,"endColumn":255},{"ruleId":"629","severity":1,"message":"630","line":45,"column":231,"nodeType":"631","endLine":45,"endColumn":247},{"ruleId":"600","severity":1,"message":"632","line":1,"column":38,"nodeType":"602","messageId":"603","endLine":1,"endColumn":46},{"ruleId":"600","severity":1,"message":"633","line":10,"column":8,"nodeType":"602","messageId":"603","endLine":10,"endColumn":14},{"ruleId":"600","severity":1,"message":"634","line":12,"column":8,"nodeType":"602","messageId":"603","endLine":12,"endColumn":16},{"ruleId":"600","severity":1,"message":"635","line":13,"column":8,"nodeType":"602","messageId":"603","endLine":13,"endColumn":12},{"ruleId":"600","severity":1,"message":"628","line":14,"column":10,"nodeType":"602","messageId":"603","endLine":14,"endColumn":14},{"ruleId":"600","severity":1,"message":"605","line":14,"column":16,"nodeType":"602","messageId":"603","endLine":14,"endColumn":21},{"ruleId":"600","severity":1,"message":"636","line":16,"column":8,"nodeType":"602","messageId":"603","endLine":16,"endColumn":15},{"ruleId":"600","severity":1,"message":"606","line":17,"column":21,"nodeType":"602","messageId":"603","endLine":17,"endColumn":27},{"ruleId":"600","severity":1,"message":"637","line":18,"column":8,"nodeType":"602","messageId":"603","endLine":18,"endColumn":13},{"ruleId":"600","severity":1,"message":"638","line":19,"column":8,"nodeType":"602","messageId":"603","endLine":19,"endColumn":21},{"ruleId":"600","severity":1,"message":"607","line":25,"column":8,"nodeType":"602","messageId":"603","endLine":25,"endColumn":22},{"ruleId":"600","severity":1,"message":"639","line":31,"column":8,"nodeType":"602","messageId":"603","endLine":31,"endColumn":14},{"ruleId":"600","severity":1,"message":"608","line":33,"column":10,"nodeType":"602","messageId":"603","endLine":33,"endColumn":16},{"ruleId":"600","severity":1,"message":"609","line":35,"column":31,"nodeType":"602","messageId":"603","endLine":35,"endColumn":39},{"ruleId":"600","severity":1,"message":"610","line":35,"column":41,"nodeType":"602","messageId":"603","endLine":35,"endColumn":51},{"ruleId":"600","severity":1,"message":"611","line":35,"column":53,"nodeType":"602","messageId":"603","endLine":35,"endColumn":65},{"ruleId":"600","severity":1,"message":"612","line":36,"column":8,"nodeType":"602","messageId":"603","endLine":36,"endColumn":14},{"ruleId":"600","severity":1,"message":"613","line":37,"column":8,"nodeType":"602","messageId":"603","endLine":37,"endColumn":12},{"ruleId":"600","severity":1,"message":"614","line":38,"column":8,"nodeType":"602","messageId":"603","endLine":38,"endColumn":12},{"ruleId":"600","severity":1,"message":"618","line":51,"column":19,"nodeType":"602","messageId":"603","endLine":51,"endColumn":27},{"ruleId":"600","severity":1,"message":"640","line":56,"column":12,"nodeType":"602","messageId":"603","endLine":56,"endColumn":19},{"ruleId":"600","severity":1,"message":"641","line":56,"column":21,"nodeType":"602","messageId":"603","endLine":56,"endColumn":31},{"ruleId":"600","severity":1,"message":"642","line":127,"column":13,"nodeType":"602","messageId":"603","endLine":127,"endColumn":20},{"ruleId":"600","severity":1,"message":"643","line":9,"column":10,"nodeType":"602","messageId":"603","endLine":9,"endColumn":18},{"ruleId":"600","severity":1,"message":"615","line":27,"column":8,"nodeType":"602","messageId":"603","endLine":27,"endColumn":12},{"ruleId":"600","severity":1,"message":"644","line":154,"column":11,"nodeType":"602","messageId":"603","endLine":154,"endColumn":18},{"ruleId":"600","severity":1,"message":"645","line":159,"column":11,"nodeType":"602","messageId":"603","endLine":159,"endColumn":18},{"ruleId":"600","severity":1,"message":"646","line":191,"column":11,"nodeType":"602","messageId":"603","endLine":191,"endColumn":16},{"ruleId":"600","severity":1,"message":"647","line":203,"column":11,"nodeType":"602","messageId":"603","endLine":203,"endColumn":18},{"ruleId":"648","severity":1,"message":"649","line":47,"column":8,"nodeType":"650","endLine":47,"endColumn":52,"suggestions":"651"},{"ruleId":"600","severity":1,"message":"652","line":19,"column":8,"nodeType":"602","messageId":"603","endLine":19,"endColumn":18},{"ruleId":"600","severity":1,"message":"653","line":21,"column":8,"nodeType":"602","messageId":"603","endLine":21,"endColumn":24},{"ruleId":"600","severity":1,"message":"654","line":22,"column":8,"nodeType":"602","messageId":"603","endLine":22,"endColumn":21},{"ruleId":"600","severity":1,"message":"655","line":23,"column":8,"nodeType":"602","messageId":"603","endLine":23,"endColumn":20},{"ruleId":"600","severity":1,"message":"656","line":56,"column":11,"nodeType":"602","messageId":"603","endLine":56,"endColumn":16},{"ruleId":"600","severity":1,"message":"657","line":63,"column":13,"nodeType":"602","messageId":"603","endLine":63,"endColumn":25},{"ruleId":"600","severity":1,"message":"658","line":63,"column":39,"nodeType":"602","messageId":"603","endLine":63,"endColumn":50},{"ruleId":"600","severity":1,"message":"659","line":63,"column":52,"nodeType":"602","messageId":"603","endLine":63,"endColumn":56},{"ruleId":"600","severity":1,"message":"660","line":63,"column":58,"nodeType":"602","messageId":"603","endLine":63,"endColumn":68},{"ruleId":"600","severity":1,"message":"661","line":63,"column":70,"nodeType":"602","messageId":"603","endLine":63,"endColumn":81},{"ruleId":"600","severity":1,"message":"604","line":1,"column":17,"nodeType":"602","messageId":"603","endLine":1,"endColumn":25},{"ruleId":"600","severity":1,"message":"662","line":11,"column":8,"nodeType":"602","messageId":"603","endLine":11,"endColumn":19},{"ruleId":"600","severity":1,"message":"663","line":15,"column":8,"nodeType":"602","messageId":"603","endLine":15,"endColumn":15},{"ruleId":"600","severity":1,"message":"664","line":13,"column":8,"nodeType":"602","messageId":"603","endLine":13,"endColumn":24},{"ruleId":"600","severity":1,"message":"665","line":14,"column":8,"nodeType":"602","messageId":"603","endLine":14,"endColumn":16},{"ruleId":"600","severity":1,"message":"614","line":16,"column":8,"nodeType":"602","messageId":"603","endLine":16,"endColumn":12},{"ruleId":"600","severity":1,"message":"633","line":5,"column":8,"nodeType":"602","messageId":"603","endLine":5,"endColumn":14},{"ruleId":"600","severity":1,"message":"666","line":9,"column":12,"nodeType":"602","messageId":"603","endLine":9,"endColumn":20},{"ruleId":"600","severity":1,"message":"667","line":9,"column":22,"nodeType":"602","messageId":"603","endLine":9,"endColumn":33},{"ruleId":"600","severity":1,"message":"668","line":13,"column":11,"nodeType":"602","messageId":"603","endLine":13,"endColumn":15},{"ruleId":"600","severity":1,"message":"669","line":30,"column":5,"nodeType":"602","messageId":"603","endLine":30,"endColumn":24},{"ruleId":"600","severity":1,"message":"670","line":114,"column":11,"nodeType":"602","messageId":"603","endLine":114,"endColumn":27},{"ruleId":"600","severity":1,"message":"671","line":119,"column":11,"nodeType":"602","messageId":"603","endLine":119,"endColumn":25},{"ruleId":"600","severity":1,"message":"672","line":124,"column":11,"nodeType":"602","messageId":"603","endLine":124,"endColumn":25},{"ruleId":"600","severity":1,"message":"673","line":129,"column":11,"nodeType":"602","messageId":"603","endLine":129,"endColumn":27},{"ruleId":"600","severity":1,"message":"674","line":134,"column":11,"nodeType":"602","messageId":"603","endLine":134,"endColumn":26},{"ruleId":"600","severity":1,"message":"675","line":139,"column":11,"nodeType":"602","messageId":"603","endLine":139,"endColumn":26},{"ruleId":"600","severity":1,"message":"639","line":3,"column":8,"nodeType":"602","messageId":"603","endLine":3,"endColumn":14},{"ruleId":"600","severity":1,"message":"604","line":1,"column":17,"nodeType":"602","messageId":"603","endLine":1,"endColumn":25},{"ruleId":"596","replacedBy":"676"},{"ruleId":"598","replacedBy":"677"},{"ruleId":"678","severity":1,"message":"679","line":6,"column":5,"nodeType":"680","messageId":"681","endLine":8,"endColumn":6},{"ruleId":"596","replacedBy":"682"},{"ruleId":"598","replacedBy":"683"},{"ruleId":"600","severity":1,"message":"604","line":1,"column":17,"nodeType":"602","messageId":"603","endLine":1,"endColumn":25},{"ruleId":"600","severity":1,"message":"632","line":1,"column":27,"nodeType":"602","messageId":"603","endLine":1,"endColumn":35},{"ruleId":"600","severity":1,"message":"601","line":1,"column":37,"nodeType":"602","messageId":"603","endLine":1,"endColumn":46},{"ruleId":"600","severity":1,"message":"684","line":7,"column":10,"nodeType":"602","messageId":"603","endLine":7,"endColumn":18},{"ruleId":"600","severity":1,"message":"633","line":9,"column":8,"nodeType":"602","messageId":"603","endLine":9,"endColumn":14},{"ruleId":"600","severity":1,"message":"685","line":10,"column":8,"nodeType":"602","messageId":"603","endLine":10,"endColumn":16},{"ruleId":"600","severity":1,"message":"686","line":11,"column":8,"nodeType":"602","messageId":"603","endLine":11,"endColumn":19},{"ruleId":"600","severity":1,"message":"643","line":13,"column":10,"nodeType":"602","messageId":"603","endLine":13,"endColumn":18},{"ruleId":"600","severity":1,"message":"687","line":14,"column":10,"nodeType":"602","messageId":"603","endLine":14,"endColumn":21},{"ruleId":"600","severity":1,"message":"688","line":14,"column":23,"nodeType":"602","messageId":"603","endLine":14,"endColumn":34},{"ruleId":"600","severity":1,"message":"689","line":15,"column":10,"nodeType":"602","messageId":"603","endLine":15,"endColumn":27},{"ruleId":"600","severity":1,"message":"690","line":15,"column":29,"nodeType":"602","messageId":"603","endLine":15,"endColumn":38},{"ruleId":"600","severity":1,"message":"691","line":15,"column":40,"nodeType":"602","messageId":"603","endLine":15,"endColumn":51},{"ruleId":"600","severity":1,"message":"692","line":16,"column":10,"nodeType":"602","messageId":"603","endLine":16,"endColumn":23},{"ruleId":"600","severity":1,"message":"693","line":17,"column":10,"nodeType":"602","messageId":"603","endLine":17,"endColumn":26},{"ruleId":"596","replacedBy":"694"},{"ruleId":"598","replacedBy":"695"},{"ruleId":"600","severity":1,"message":"616","line":7,"column":7,"nodeType":"602","messageId":"603","endLine":7,"endColumn":20},{"ruleId":"600","severity":1,"message":"696","line":15,"column":7,"nodeType":"602","messageId":"603","endLine":15,"endColumn":18},{"ruleId":"600","severity":1,"message":"697","line":18,"column":7,"nodeType":"602","messageId":"603","endLine":18,"endColumn":19},{"ruleId":"600","severity":1,"message":"698","line":22,"column":7,"nodeType":"602","messageId":"603","endLine":22,"endColumn":10},{"ruleId":"600","severity":1,"message":"699","line":30,"column":7,"nodeType":"602","messageId":"603","endLine":30,"endColumn":14},{"ruleId":"600","severity":1,"message":"700","line":42,"column":7,"nodeType":"602","messageId":"603","endLine":42,"endColumn":16},{"ruleId":"600","severity":1,"message":"701","line":53,"column":7,"nodeType":"602","messageId":"603","endLine":53,"endColumn":11},{"ruleId":"600","severity":1,"message":"702","line":61,"column":7,"nodeType":"602","messageId":"603","endLine":61,"endColumn":13},{"ruleId":"600","severity":1,"message":"703","line":65,"column":7,"nodeType":"602","messageId":"603","endLine":65,"endColumn":19},{"ruleId":"600","severity":1,"message":"704","line":68,"column":7,"nodeType":"602","messageId":"603","endLine":68,"endColumn":16},{"ruleId":"705","severity":1,"message":"706","line":14,"column":3,"nodeType":"602","messageId":"603","endLine":14,"endColumn":13},{"ruleId":"705","severity":1,"message":"707","line":15,"column":3,"nodeType":"602","messageId":"603","endLine":15,"endColumn":17},{"ruleId":"705","severity":1,"message":"708","line":18,"column":10,"nodeType":"602","messageId":"603","endLine":18,"endColumn":27},{"ruleId":"600","severity":1,"message":"601","line":1,"column":27,"nodeType":"602","messageId":"603","endLine":1,"endColumn":36},{"ruleId":"600","severity":1,"message":"709","line":10,"column":8,"nodeType":"602","messageId":"603","endLine":10,"endColumn":17},{"ruleId":"600","severity":1,"message":"710","line":14,"column":8,"nodeType":"602","messageId":"603","endLine":14,"endColumn":18},{"ruleId":"600","severity":1,"message":"711","line":22,"column":24,"nodeType":"602","messageId":"603","endLine":22,"endColumn":36},{"ruleId":"600","severity":1,"message":"712","line":48,"column":11,"nodeType":"602","messageId":"603","endLine":48,"endColumn":23},{"ruleId":"600","severity":1,"message":"706","line":4,"column":10,"nodeType":"602","messageId":"603","endLine":4,"endColumn":20},{"ruleId":"600","severity":1,"message":"709","line":10,"column":8,"nodeType":"602","messageId":"603","endLine":10,"endColumn":17},{"ruleId":"600","severity":1,"message":"614","line":4,"column":10,"nodeType":"602","messageId":"603","endLine":4,"endColumn":14},"no-native-reassign",["713"],"no-negated-in-lhs",["714"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Route' is defined but never used.","'Button' is defined but never used.","'CategoriesData' is defined but never used.","'Helmet' is defined but never used.","'Stroller' is defined but never used.","'Strollable' is defined but never used.","'StrollCaptor' is defined but never used.","'Catego' is defined but never used.","'List' is defined but never used.","'Grid' is defined but never used.","'Shop' is defined but never used.","'ProductLayout' is assigned a value but never used.","'Section' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'homecategories' is assigned a value but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","'RiArrowDropDownLine' is defined but never used.","'RiArrowDropUpLine' is defined but never used.","'Splide' is defined but never used.","'SplideSlide' is defined but never used.","'image_2' is defined but never used.","'image_3' is defined but never used.","'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'Loader' is defined but never used.","'Category' is defined but never used.","'Dash' is defined but never used.","'Topsell' is defined but never used.","'chick' is defined but never used.","'NutritionHero' is defined but never used.","'Styled' is defined but never used.","'shopnow' is assigned a value but never used.","'setShopnow' is assigned a value but never used.","'loading' is assigned a value but never used.","'useAlert' is defined but never used.","'Dnumber' is assigned a value but never used.","'ButtonD' is assigned a value but never used.","'Input' is assigned a value but never used.","'ButtonB' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["715"],"'IconButton' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'SkipNextIcon' is defined but never used.","'theme' is assigned a value but never used.","'shippingInfo' is assigned a value but never used.","'paymentInfo' is assigned a value but never used.","'user' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'orderStatus' is assigned a value but never used.","'CardActions' is defined but never used.","'Buttone' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'icon' is assigned a value but never used.","'DELETE_REVIEW_RESET' is defined but never used.","'HeaderOneImageFS' is assigned a value but never used.","'HeaderOneImage' is assigned a value but never used.","'HeaderTwoImage' is assigned a value but never used.","'HeaderThreeImage' is assigned a value but never used.","'HeaderFourImage' is assigned a value but never used.","'HeaderFiveImage' is assigned a value but never used.",["713"],["714"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["713"],["714"],"'Carousel' is defined but never used.","'MetaData' is defined but never used.","'ListReviews' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getProductDetails' is defined but never used.","'newReview' is defined but never used.","'clearErrors' is defined but never used.","'addItemToCart' is defined but never used.","'NEW_REVIEW_RESET' is defined but never used.",["713"],["714"],"'ProductItem' is assigned a value but never used.","'ImgContainer' is assigned a value but never used.","'IMG' is assigned a value but never used.","'AddCart' is assigned a value but never used.","'SideIcons' is assigned a value but never used.","'Span' is assigned a value but never used.","'Bottom' is assigned a value but never used.","'ProductPrice' is assigned a value but never used.","'PriceSpan' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","'StylesProvider' is defined but never used.","'CheckboxWithLabel' is defined but never used.","'Recaptcha' is defined but never used.","'mCustomCss' is defined but never used.","'setIsverfied' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"716","fix":"717"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"718","text":"719"},[1319,1363],"[dispatch, alert, error, history, isUpdated, user]"]